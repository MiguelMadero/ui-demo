// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Button Button Sizes 1`] = `
.c1 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 80%;
  margin-bottom: 5px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  margin: 0px;
}

.c6 {
  font-weight: 400;
}

.c10 {
  font-size: 24px;
  color: inherit;
}

.c16 {
  margin-right: 0px;
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f3ec';
  -webkit-animation: zmdi-spin 1.5s infinite linear;
  animation: zmdi-spin 1.5s infinite linear;
}

.c15::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f158';
}

.c5 {
  visibility: visible;
}

.c8 {
  position: absolute;
  top: -2px;
  left: 0;
  display: inline-block;
  margin-left: calc(50% - 12px);
  padding-top: inherit;
  pointer-events: none;
  visibility: hidden;
}

.c4 {
  margin: 8px;
  background-color: #D6DEE9;
  color: #53616E;
}

.c12 {
  margin: 8px;
  background-color: #FF5745;
  color: #FFF;
}

.c14 {
  margin: 8px;
  background-color: transparent;
  color: #B4BDC5;
}

.c3 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c3:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c3:focus:not(:disabled),
.c3:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c3:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c11 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c11:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c11:focus:not(:disabled),
.c11:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c11:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c11:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c13 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.26;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 19px;
  padding: 12px 12px;
}

.c13:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c13:focus:not(:disabled),
.c13:hover:not(:disabled) {
  color: #12AED3;
  background-color: #D3F3F3;
}

.c13:active:not(:disabled) {
  color: #0081AA;
  background-color: #8BDDDF;
}

.c13:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c17 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c17:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c17:focus:not(:disabled),
.c17:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c17:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c17:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c18 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c18:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c18:focus:not(:disabled),
.c18:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c18:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c18:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c19 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c19:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c19:focus:not(:disabled),
.c19:hover:not(:disabled) {
  color: #12AED3;
  background-color: #D3F3F3;
}

.c19:active:not(:disabled) {
  color: #0081AA;
  background-color: #8BDDDF;
}

.c19:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c20 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 32px;
  min-width: 32px;
  font-size: 12px;
  padding: 6px 12px;
}

.c20:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c20:focus:not(:disabled),
.c20:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c20:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c20:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c21 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 32px;
  min-width: 32px;
  font-size: 12px;
  padding: 6px 12px;
}

.c21:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c21:focus:not(:disabled),
.c21:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c21:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c21:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c22 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.14;
  text-align: center;
  height: 32px;
  min-width: 32px;
  font-size: 14px;
  padding: 8px 8px;
}

.c22:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c22:focus:not(:disabled),
.c22:hover:not(:disabled) {
  color: #12AED3;
  background-color: #D3F3F3;
}

.c22:active:not(:disabled) {
  color: #0081AA;
  background-color: #8BDDDF;
}

.c22:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c23 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 24px;
  min-width: 24px;
  font-size: 12px;
  padding: 4px 8px;
}

.c23:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c23:focus:not(:disabled),
.c23:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c23:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c23:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c24 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 24px;
  min-width: 24px;
  font-size: 12px;
  padding: 4px 8px;
}

.c24:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c24:focus:not(:disabled),
.c24:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c24:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c24:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c25 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.33;
  text-align: center;
  height: 24px;
  min-width: 24px;
  font-size: 12px;
  padding: 4px 4px;
}

.c25:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c25:focus:not(:disabled),
.c25:hover:not(:disabled) {
  color: #12AED3;
  background-color: #D3F3F3;
}

.c25:active:not(:disabled) {
  color: #0081AA;
  background-color: #8BDDDF;
}

.c25:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      Large
    </div>
    <button
      className="c3 c4"
      disabled={false}
      is={null}
      mode="normal"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Standard Large
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c11 c12"
      disabled={false}
      is={null}
      mode="primary"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Primary Large
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c13 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Transparent Large
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c13 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        <span
          className="c15 c16"
          icon="edit"
          is={null}
        />
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
  <div
    className="c2"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      Medium (Default Size)
    </div>
    <button
      className="c17 c4"
      disabled={false}
      is={null}
      mode="normal"
      onClick={[Function]}
      s="medium"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Standard Medium
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c18 c12"
      disabled={false}
      is={null}
      mode="primary"
      onClick={[Function]}
      s="medium"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Primary Medium
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c19 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="medium"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Transparent Medium
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c19 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="medium"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        <span
          className="c15 c16"
          icon="edit"
          is={null}
        />
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
  <div
    className="c2"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      Small
    </div>
    <button
      className="c20 c4"
      disabled={false}
      is={null}
      mode="normal"
      onClick={[Function]}
      s="small"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Standard Small
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c21 c12"
      disabled={false}
      is={null}
      mode="primary"
      onClick={[Function]}
      s="small"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Primary Small
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c22 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="small"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Transparent Small
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c22 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="small"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        <span
          className="c15 c16"
          icon="edit"
          is={null}
        />
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
  <div
    className="c2"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      XSmall
    </div>
    <button
      className="c23 c4"
      disabled={false}
      is={null}
      mode="normal"
      onClick={[Function]}
      s="xsmall"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Standard XSmall
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c24 c12"
      disabled={false}
      is={null}
      mode="primary"
      onClick={[Function]}
      s="xsmall"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Primary XSmall
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c25 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="xsmall"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Transparent XSmall
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c25 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="xsmall"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        <span
          className="c15 c16"
          icon="edit"
          is={null}
        />
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
</div>
`;

exports[`Storyshots Button Button modes and states 1`] = `
.c1 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 80%;
  margin-bottom: 4px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  margin: 0px;
}

.c6 {
  font-weight: 400;
}

.c10 {
  font-size: 24px;
  color: inherit;
}

.c16 {
  margin-right: 8px;
  font-size: inherit;
  color: inherit;
}

.c17 {
  margin-right: 0px;
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f3ec';
  -webkit-animation: zmdi-spin 1.5s infinite linear;
  animation: zmdi-spin 1.5s infinite linear;
}

.c15::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f158';
}

.c5 {
  visibility: visible;
}

.c8 {
  position: absolute;
  top: -2px;
  left: 0;
  display: inline-block;
  margin-left: calc(50% - 12px);
  padding-top: inherit;
  pointer-events: none;
  visibility: hidden;
}

.c4 {
  margin: 8px;
  background-color: #D6DEE9;
  color: #53616E;
}

.c12 {
  margin: 8px;
  background-color: #FF5745;
  color: #FFF;
}

.c14 {
  margin: 8px;
  background-color: transparent;
  color: #B4BDC5;
}

.c3 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c3:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c3:focus:not(:disabled),
.c3:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c3:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c11 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c11:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c11:focus:not(:disabled),
.c11:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c11:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c11:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c13 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.26;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 19px;
  padding: 12px 12px;
}

.c13:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c13:focus:not(:disabled),
.c13:hover:not(:disabled) {
  color: #12AED3;
  background-color: #D3F3F3;
}

.c13:active:not(:disabled) {
  color: #0081AA;
  background-color: #8BDDDF;
}

.c13:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <p>
      Standard Button Mode (Default)
    </p>
    <button
      className="c3 c4"
      disabled={false}
      is={null}
      mode="normal"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Button Large
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c3 c4"
      disabled={true}
      is={null}
      mode="normal"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Can't touch this
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
  <div
    className="c2"
    is={null}
  >
    <p>
      Primary Button Mode
    </p>
    <button
      className="c11 c12"
      disabled={false}
      is={null}
      mode="primary"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Button Large
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c11 c12"
      disabled={true}
      is={null}
      mode="primary"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Can't touch this
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
  <div
    className="c2"
    is={null}
  >
    <p>
      Transparent Button Mode
    </p>
    <button
      className="c13 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Button Large
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c13 c14"
      disabled={true}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        Can't touch this
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
  <div
    className="c2"
    is={null}
  >
    <p>
      IconButton
    </p>
    <button
      className="c13 c14"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        <span
          className="c15 c16"
          icon="edit"
          is={null}
        />
        Edit
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <button
      className="c13 c14"
      disabled={true}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="large"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        <span
          className="c15 c17"
          icon="edit"
          is={null}
        />
      </p>
      <span
        className="c8 c9 c10"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
</div>
`;

exports[`Storyshots Button Button.Link 1`] = `
.c1 {
  margin-right: 24px;
  background-color: #FF5745;
  color: #FFF;
}

.c3 {
  margin-bottom: 32px;
  background-color: #D6DEE9;
  color: #53616E;
}

.c0 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c0:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c0:focus:not(:disabled),
.c0:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c0:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c2 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c2:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c2:focus:not(:disabled),
.c2:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c2:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div>
  <h1>
    Button.Link
  </h1>
  <p>
    Button.Link is a regular HTML link (&lt;a href="..."&gt;text here&lt;/a&gt;) that looks like a button
  </p>
  <h3>
    Link to URL
  </h3>
  <a
    className="c0 c1"
    href="/some/url"
    is={null}
    mode="primary"
    s="medium"
    target="_blank"
  >
    Go to some URL
  </a>
  <a
    className="c2 c3"
    href="/some/url"
    is={null}
    mode="normal"
    s="medium"
  >
    Go to some URL
  </a>
  <pre>
    &lt;Button.Link href="/some/url" mode="primary" target="_blank" mr={3}&gt;Go to some URL&lt;/Button.Link&gt;
  </pre>
</div>
`;

exports[`Storyshots Button Button.RouteLink 1`] = `
<div>
  <h1>
    Button.RouteLink
  </h1>
  <p>
    Button.RouteLink is a
     
    <a
      href="https://reacttraining.com/react-router/web/api/Link"
      rel="noreferrer noopener"
      target="_blank"
    >
      react-router-dom's Link component
    </a>
     
    that looks like a button
  </p>
  <h3>
    Link to a react-router route
  </h3>
  <pre>
    &lt;Button.RouteLink to={\`/some/\${id}\`} mode="primary" mx={2}&gt;Go to some route&lt;/Button.RouteLink&gt;
  </pre>
</div>
`;

exports[`Storyshots Button ButtonGroup 1`] = `
.c1 {
  box-sizing: border-box;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c8 {
  margin: 0px;
}

.c7 {
  font-weight: 400;
}

.c11 {
  font-size: 24px;
  color: inherit;
}

.c10::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f3ec';
  -webkit-animation: zmdi-spin 1.5s infinite linear;
  animation: zmdi-spin 1.5s infinite linear;
}

.c6 {
  visibility: visible;
}

.c9 {
  position: absolute;
  top: -2px;
  left: 0;
  display: inline-block;
  margin-left: calc(50% - 12px);
  padding-top: inherit;
  pointer-events: none;
  visibility: hidden;
}

.c5 {
  background-color: #D6DEE9;
  color: #53616E;
}

.c4 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c4:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c4:focus:not(:disabled),
.c4:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c4:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c4:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c13 {
  background-color: #D6DEE9;
  color: #53616E;
}

.c12 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c12:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c12:focus:not(:disabled),
.c12:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c12:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c12:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c2 > *:first-child:not(:last-child),
.c2 > *:first-child:not(:last-child) .button-group-child-item {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c2 > *:not(:first-child) {
  border-left: 1px solid #FFF;
}

.c2 > *:not(:first-child):not(:last-child),
.c2 > *:not(:first-child):not(:last-child) .button-group-child-item {
  border-radius: 0;
}

.c2 > *:last-child:not(:first-child),
.c2 > *:last-child:not(:first-child) .button-group-child-item {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 {
  display: inline-block;
}

<div>
  <h1>
    ButtonGroups
  </h1>
  <h3>
    One Button
  </h3>
  <div
    className="c0 c1"
    is={null}
  >
    <div
      className="c2 c3 c1"
      is={null}
    >
      <button
        className="c4 c5"
        disabled={false}
        is={null}
        mode="normal"
        s="medium"
        type="button"
      >
        <p
          className="c6 c7 c8"
          hide={false}
          is={null}
        >
          Click!
        </p>
        <span
          className="c9 c10 c11"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
    </div>
  </div>
  <h3>
    Two Buttons
  </h3>
  <div
    className="c0 c1"
    is={null}
  >
    <div
      className="c2 c3 c1"
      is={null}
    >
      <button
        className="c4 c5"
        disabled={false}
        is={null}
        mode="normal"
        s="medium"
        type="button"
      >
        <p
          className="c6 c7 c8"
          hide={false}
          is={null}
        >
          Click!
        </p>
        <span
          className="c9 c10 c11"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
      <button
        className="c4 c5"
        disabled={false}
        is={null}
        mode="normal"
        s="medium"
        type="button"
      >
        <p
          className="c6 c7 c8"
          hide={false}
          is={null}
        >
          Click!
        </p>
        <span
          className="c9 c10 c11"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
    </div>
  </div>
  <h3>
    Three Buttons
  </h3>
  <div
    className="c0 c1"
    is={null}
  >
    <div
      className="c2 c3 c1"
      is={null}
    >
      <button
        className="c4 c5"
        disabled={false}
        is={null}
        mode="normal"
        s="medium"
        type="button"
      >
        <p
          className="c6 c7 c8"
          hide={false}
          is={null}
        >
          Click!
        </p>
        <span
          className="c9 c10 c11"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
      <button
        className="c4 c5"
        disabled={false}
        is={null}
        mode="normal"
        s="medium"
        type="button"
      >
        <p
          className="c6 c7 c8"
          hide={false}
          is={null}
        >
          Click!
        </p>
        <span
          className="c9 c10 c11"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
      <button
        className="c4 c5"
        disabled={false}
        is={null}
        mode="normal"
        s="medium"
        type="button"
      >
        <p
          className="c6 c7 c8"
          hide={false}
          is={null}
        >
          Click!
        </p>
        <span
          className="c9 c10 c11"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
    </div>
  </div>
  <h3>
    Mix of Buttons and Button Links
  </h3>
  <div
    className="c0 c1"
    is={null}
  >
    <div
      className="c2 c3 c1"
      is={null}
    >
      <button
        className="c4 c5"
        disabled={false}
        is={null}
        mode="normal"
        s="medium"
        type="button"
      >
        <p
          className="c6 c7 c8"
          hide={false}
          is={null}
        >
          Click!
        </p>
        <span
          className="c9 c10 c11"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
      <a
        className="c12 c13"
        is={null}
        mode="normal"
        s="medium"
      >
        Click!
      </a>
      <button
        className="c4 c5"
        disabled={false}
        is={null}
        mode="normal"
        s="medium"
        type="button"
      >
        <p
          className="c6 c7 c8"
          hide={false}
          is={null}
        >
          Click!
        </p>
        <span
          className="c9 c10 c11"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
      <a
        className="c12 c13"
        is={null}
        mode="normal"
        s="medium"
      >
        Click!
      </a>
    </div>
  </div>
</div>
`;

exports[`Storyshots Button Dropdown default 1`] = `
.c7 {
  box-sizing: border-box;
}

.c0 {
  box-sizing: border-box;
  padding: 8px;
}

.c14 {
  box-sizing: border-box;
  margin-right: 16px;
}

.c16 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c6 {
  margin: 0px;
}

.c5 {
  font-weight: 400;
}

.c12 {
  font-size: 24px;
  color: inherit;
}

.c9 {
  margin-right: 8px;
  font-size: 14px;
  color: red;
}

.c21 {
  font-size: 14px;
  color: inherit;
}

.c11::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f3ec';
  -webkit-animation: zmdi-spin 1.5s infinite linear;
  animation: zmdi-spin 1.5s infinite linear;
}

.c8::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f197';
}

.c20::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f19b';
}

.c4 {
  visibility: visible;
}

.c10 {
  position: absolute;
  top: -2px;
  left: 0;
  display: inline-block;
  margin-left: calc(50% - 12px);
  padding-top: inherit;
  pointer-events: none;
  visibility: hidden;
}

.c3 {
  margin-right: 4px;
  font-size: 14px;
  background-color: #D6DEE9;
  color: #53616E;
}

.c17 {
  font-size: 14px;
  background-color: #D6DEE9;
  color: #53616E;
}

.c19 {
  font-size: 14px;
  background-color: #FF5745;
  color: #FFF;
}

.c23 {
  margin-right: 16px;
  font-size: 14px;
  background-color: transparent;
  color: #B4BDC5;
}

.c2 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c2:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c2:focus:not(:disabled),
.c2:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c2:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c18 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c18:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c18:focus:not(:disabled),
.c18:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c18:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c18:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c22 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c22:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c22:focus:not(:disabled),
.c22:hover:not(:disabled) {
  color: #12AED3;
  background-color: #D3F3F3;
}

.c22:active:not(:disabled) {
  color: #0081AA;
  background-color: #8BDDDF;
}

.c22:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c15 > *:first-child:not(:last-child),
.c15 > *:first-child:not(:last-child) .button-group-child-item {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c15 > *:not(:first-child) {
  border-left: 1px solid #FFF;
}

.c15 > *:not(:first-child):not(:last-child),
.c15 > *:not(:first-child):not(:last-child) .button-group-child-item {
  border-radius: 0;
}

.c15 > *:last-child:not(:first-child),
.c15 > *:last-child:not(:first-child) .button-group-child-item {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c13 {
  display: inline-block;
}

.c1 {
  display: inline-block;
}

<div
  className="c0"
  is={null}
>
  <h1>
    Button Dropdown
  </h1>
  <div
    className="c1"
  >
    <div>
      <button
        buttonBody={
          <Styled(Box)>
            <Unknown
              color="red"
              fontSize={1}
              iconName="menu"
              mr={2}
            />
             Click me!
          </Styled(Box)>
        }
        className="button-group-child-item c2 c3"
        disabled={false}
        is={null}
        mode="normal"
        onClick={[Function]}
        popperModifiers={
          Object {
            "flip": Object {
              "behavior": Array [
                "bottom",
                "top",
              ],
            },
            "preventOverflow": Object {
              "boundariesElement": "viewport",
            },
          }
        }
        popperPlacement="bottom-start"
        s="medium"
        type="button"
      >
        <p
          className="c4 c5 c6"
          hide={false}
          is={null}
        >
          <div
            className="c7"
            is={null}
          >
            <span
              className="c8 c9"
              icon="menu"
              is={null}
            />
             Click me!
          </div>
        </p>
        <span
          className="c10 c11 c12"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
    </div>
  </div>
  <div
    className="c13 c14"
    is={null}
  >
    <div
      className="c15 c16 c7"
      is={null}
    >
      <button
        className="c2 c17"
        disabled={false}
        is={null}
        mode="normal"
        onClick={[Function]}
        s="medium"
        type="button"
      >
        <p
          className="c4 c5 c6"
          hide={false}
          is={null}
        >
          Main Action
        </p>
        <span
          className="c10 c11 c12"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
      <div
        className="c1"
      >
        <div>
          <button
            className="button-group-child-item c18 c19"
            disabled={false}
            is={null}
            mode="primary"
            onClick={[Function]}
            popperModifiers={
              Object {
                "flip": Object {
                  "behavior": Array [
                    "bottom",
                    "top",
                  ],
                },
                "preventOverflow": Object {
                  "boundariesElement": "viewport",
                },
              }
            }
            popperPlacement="bottom-start"
            s="medium"
            type="button"
          >
            <p
              className="c4 c5 c6"
              hide={false}
              is={null}
            >
              <span
                className="c20 c21"
                icon="more-vert"
                is={null}
              />
            </p>
            <span
              className="c10 c11 c12"
              hide={true}
              icon="spinner"
              is={null}
              spin={true}
            />
          </button>
        </div>
      </div>
    </div>
  </div>
  <div
    className="c1"
  >
    <div>
      <button
        buttonBody="Or click me!"
        className="button-group-child-item c22 c23"
        disabled={false}
        is={null}
        mode="transparent"
        onClick={[Function]}
        popperModifiers={
          Object {
            "flip": Object {
              "behavior": Array [
                "bottom",
                "top",
              ],
            },
            "preventOverflow": Object {
              "boundariesElement": "viewport",
            },
          }
        }
        popperPlacement="bottom-start"
        s="medium"
        type="button"
      >
        <p
          className="c4 c5 c6"
          hide={false}
          is={null}
        >
          Or click me!
        </p>
        <span
          className="c10 c11 c12"
          hide={true}
          icon="spinner"
          is={null}
          spin={true}
        />
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Button IconButton 1`] = `
.c1 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 80%;
  margin-bottom: 4px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  margin: 0px;
}

.c6 {
  font-weight: 400;
}

.c12 {
  font-size: 24px;
  color: inherit;
}

.c9 {
  margin-right: 8px;
  font-size: inherit;
  color: inherit;
}

.c13 {
  margin-right: 0px;
  font-size: inherit;
  color: inherit;
}

.c11::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f3ec';
  -webkit-animation: zmdi-spin 1.5s infinite linear;
  animation: zmdi-spin 1.5s infinite linear;
}

.c8::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f158';
}

.c5 {
  visibility: visible;
}

.c10 {
  position: absolute;
  top: -2px;
  left: 0;
  display: inline-block;
  margin-left: calc(50% - 12px);
  padding-top: inherit;
  pointer-events: none;
  visibility: hidden;
}

.c4 {
  margin: 8px;
  background-color: transparent;
  color: #B4BDC5;
}

.c3 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c3:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c3:focus:not(:disabled),
.c3:hover:not(:disabled) {
  color: #12AED3;
  background-color: #D3F3F3;
}

.c3:active:not(:disabled) {
  color: #0081AA;
  background-color: #8BDDDF;
}

.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <p>
      With label
    </p>
    <button
      className="c3 c4"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="medium"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        <span
          className="c8 c9"
          icon="edit"
          is={null}
        />
        Edit
      </p>
      <span
        className="c10 c11 c12"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
    <p>
      Without label
    </p>
    <button
      className="c3 c4"
      disabled={false}
      is={null}
      mode="transparent"
      onClick={[Function]}
      s="medium"
      type="button"
    >
      <p
        className="c5 c6 c7"
        hide={false}
        is={null}
      >
        <span
          className="c8 c13"
          icon="edit"
          is={null}
        />
      </p>
      <span
        className="c10 c11 c12"
        hide={true}
        icon="spinner"
        is={null}
        spin={true}
      />
    </button>
  </div>
</div>
`;

exports[`Storyshots Button Show progress indicator 1`] = `
.c4 {
  margin: 0px;
}

.c3 {
  font-weight: 400;
}

.c7 {
  font-size: 24px;
  color: inherit;
}

.c6::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f3ec';
  -webkit-animation: zmdi-spin 1.5s infinite linear;
  animation: zmdi-spin 1.5s infinite linear;
}

.c2 {
  visibility: visible;
}

.c5 {
  position: absolute;
  top: -2px;
  left: 0;
  display: inline-block;
  margin-left: calc(50% - 12px);
  padding-top: inherit;
  pointer-events: none;
  visibility: hidden;
}

.c1 {
  background-color: #D6DEE9;
  color: #53616E;
}

.c0 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c0:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c0:focus:not(:disabled),
.c0:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c0:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div>
  <h1>
    Progress Indicator
  </h1>
  <button
    className="c0 c1"
    disabled={false}
    is={null}
    mode="normal"
    onClick={[Function]}
    s="medium"
    type="button"
  >
    <p
      className="c2 c3 c4"
      hide={false}
      is={null}
    >
      Click me
    </p>
    <span
      className="c5 c6 c7"
      hide={true}
      icon="spinner"
      is={null}
      spin={true}
    />
  </button>
</div>
`;

exports[`Storyshots Checkbox default 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked::after {
  content: '\\f26b';
}

.c5:checked:hover,
.c5:checked:focus {
  background-color: #12AED3;
  border-color: #12AED3;
}

.c5:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c5:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:hover {
  border-color: #C00316;
}

.c2 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <label
    className="c2 c3 c4"
    is={null}
  >
    <input
      className="c5"
      type="checkbox"
    />
    <span>
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Checkbox default value 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked::after {
  content: '\\f26b';
}

.c5:checked:hover,
.c5:checked:focus {
  background-color: #12AED3;
  border-color: #12AED3;
}

.c5:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c5:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:hover {
  border-color: #C00316;
}

.c2 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <label
    className="c2 c3 c4"
    is={null}
  >
    <input
      className="c5"
      defaultChecked={true}
      name="name"
      type="checkbox"
    />
    <span>
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Checkbox disabled 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c5 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c6 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c6::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c6:hover,
.c6:focus,
.c6:active {
  border-color: #8D9BA7;
}

.c6:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c6:checked ~ span {
  color: #1C2534;
}

.c6:checked::after {
  content: '\\f26b';
}

.c6:checked:hover,
.c6:checked:focus {
  background-color: #12AED3;
  border-color: #12AED3;
}

.c6:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c6:checked:disabled,
.c6:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c6:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c6:disabled,
.c6:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c6:disabled ~ span,
.c6:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c6.error {
  border-color: #C00316;
}

.c6.error:hover {
  border-color: #C00316;
}

.c3 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <label
      className="c3 c4 c5"
      is={null}
    >
      <input
        className="c6"
        disabled={true}
        type="checkbox"
      />
      <span>
        Label
      </span>
    </label>
    <label
      className="c3 c4 c5"
      is={null}
    >
      <input
        checked={true}
        className="c6"
        disabled={true}
        type="checkbox"
      />
      <span>
        Label
      </span>
    </label>
  </div>
</div>
`;

exports[`Storyshots Checkbox error 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked::after {
  content: '\\f26b';
}

.c5:checked:hover,
.c5:checked:focus {
  background-color: #12AED3;
  border-color: #12AED3;
}

.c5:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c5:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:hover {
  border-color: #C00316;
}

.c2 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <label
    className="c2 c3 c4"
    is={null}
  >
    <input
      className="error c5"
      type="checkbox"
    />
    <span>
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Checkbox fires events 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked::after {
  content: '\\f26b';
}

.c5:checked:hover,
.c5:checked:focus {
  background-color: #12AED3;
  border-color: #12AED3;
}

.c5:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c5:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:hover {
  border-color: #C00316;
}

.c2 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <label
    className="c2 c3 c4"
    is={null}
  >
    <input
      className="c5"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyUp={[Function]}
      type="checkbox"
    />
    <span>
      Try interacting
    </span>
  </label>
</div>
`;

exports[`Storyshots Checkbox rebass props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin-bottom: 50px;
  margin-top: 50px;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked::after {
  content: '\\f26b';
}

.c5:checked:hover,
.c5:checked:focus {
  background-color: #12AED3;
  border-color: #12AED3;
}

.c5:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c5:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:hover {
  border-color: #C00316;
}

.c2 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <label
    className="c2 c3 c4"
    is={null}
  >
    <input
      className="c5"
      type="checkbox"
    />
    <span>
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots DatePicker autofocus 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          autoFocus={true}
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          s="medium"
          type="text"
          value="12/12/2012"
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker custom date format 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="YYYY-MM-DD"
          s="medium"
          type="text"
          value=""
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker default 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          s="medium"
          type="text"
          value=""
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker disabled 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={true}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          s="medium"
          type="text"
          value=""
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker disabled dates 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          s="medium"
          type="text"
          value=""
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker fires events 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          s="medium"
          type="text"
          value=""
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker initial date 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          s="medium"
          type="text"
          value="01/01/2017"
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker initial value 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          s="medium"
          type="text"
          value="12/12/2012"
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker placeholder 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="Custom placeholder"
          s="medium"
          type="text"
          value=""
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker rebass props 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  margin-top: 50px;
  margin-bottom: 50px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c5 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c2 .DayPickerInput {
  display: inherit;
}

.c2 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c2 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c2 .DayPicker {
  color: #1C2534;
}

.c2 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c2 .DayPicker-NavButton--prev,
.c2 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c2 .DayPicker-NavButton--prev::after,
.c2 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c2 .DayPicker-NavButton--prev {
  left: 0;
}

.c2 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c2 .DayPicker-NavButton--next {
  right: 0;
}

.c2 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c2 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c2 .DayPicker-Caption > div {
  font-size: inherit;
}

.c2 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c2 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c2 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c2 .DayPicker-Day--today {
  color: inherit;
}

.c2 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c2 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c2 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c3 c4"
        is={null}
      >
        <input
          className="c5 c6 c7"
          disabled={false}
          is={null}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          s="medium"
          type="text"
          value=""
        />
        <span
          className="c8 c9 c10"
          icon="calendar"
          is={null}
          onClick={undefined}
          s={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker sizes 1`] = `
.c3 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c4 {
  box-sizing: border-box;
  width: 33.33333333333333%;
}

.c5 {
  box-sizing: border-box;
  width: 66.66666666666666%;
  margin-bottom: 5px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  background-color: white;
}

.c10 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c9 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c9:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c9:disabled {
  opacity: 0.25;
}

.c13 {
  font-size: inherit;
  color: inherit;
}

.c12::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c14 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c14::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c14::-moz-placeholder {
  color: #8D9BA7;
}

.c14:-ms-input-placeholder {
  color: #8D9BA7;
}

.c14::placeholder {
  color: #8D9BA7;
}

.c14:hover,
.c14:active {
  border-color: #B4BDC5;
}

.c14:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c14:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c14.error {
  border-color: #C00316;
}

.c8 {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 48px;
  line-height: 1.43;
}

.c8::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c8::-moz-placeholder {
  color: #8D9BA7;
}

.c8:-ms-input-placeholder {
  color: #8D9BA7;
}

.c8::placeholder {
  color: #8D9BA7;
}

.c8:hover,
.c8:active {
  border-color: #B4BDC5;
}

.c8:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c8:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c8.error {
  border-color: #C00316;
}

.c15 {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  height: 32px;
  line-height: 1.43;
}

.c15::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c15::-moz-placeholder {
  color: #8D9BA7;
}

.c15:-ms-input-placeholder {
  color: #8D9BA7;
}

.c15::placeholder {
  color: #8D9BA7;
}

.c15:hover,
.c15:active {
  border-color: #B4BDC5;
}

.c15:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c15:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c15.error {
  border-color: #C00316;
}

.c7 {
  position: relative;
}

.c7 input {
  padding-right: 32px;
}

.c11 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c16 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 8px;
  pointer-events: none;
}

.c6 .DayPickerInput {
  display: inherit;
}

.c6 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c6 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c6 .DayPicker {
  color: #1C2534;
}

.c6 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c6 .DayPicker-NavButton--prev,
.c6 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c6 .DayPicker-NavButton--prev::after,
.c6 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c6 .DayPicker-NavButton--prev {
  left: 0;
}

.c6 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c6 .DayPicker-NavButton--next {
  right: 0;
}

.c6 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c6 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c6 .DayPicker-Caption > div {
  font-size: inherit;
}

.c6 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c6 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c6 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c6 .DayPicker-Day--today {
  color: inherit;
}

.c6 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c6 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c6 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c6 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c6 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c4"
      is={null}
    >
      Large
    </div>
    <div
      className="c5"
      is={null}
    >
      <div
        className="c6"
      >
        <div
          className="DayPickerInput"
          onMouseDown={[Function]}
        >
          <div
            className="c7 c3"
            is={null}
          >
            <input
              className="c8 c9 c10"
              disabled={false}
              is={null}
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyUp={[Function]}
              placeholder="MM/DD/YYYY"
              s="large"
              type="text"
              value=""
            />
            <span
              className="c11 c12 c13"
              icon="calendar"
              is={null}
              onClick={undefined}
              s="large"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="c4"
      is={null}
    >
      Medium
    </div>
    <div
      className="c5"
      is={null}
    >
      <div
        className="c6"
      >
        <div
          className="DayPickerInput"
          onMouseDown={[Function]}
        >
          <div
            className="c7 c3"
            is={null}
          >
            <input
              className="c14 c9 c10"
              disabled={false}
              is={null}
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyUp={[Function]}
              placeholder="MM/DD/YYYY"
              s="medium"
              type="text"
              value=""
            />
            <span
              className="c11 c12 c13"
              icon="calendar"
              is={null}
              onClick={undefined}
              s="medium"
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="c4"
      is={null}
    >
      Small
    </div>
    <div
      className="c5"
      is={null}
    >
      <div
        className="c6"
      >
        <div
          className="DayPickerInput"
          onMouseDown={[Function]}
        >
          <div
            className="c7 c3"
            is={null}
          >
            <input
              className="c15 c9 c10"
              disabled={false}
              is={null}
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyUp={[Function]}
              placeholder="MM/DD/YYYY"
              s="small"
              type="text"
              value=""
            />
            <span
              className="c16 c12 c13"
              icon="calendar"
              is={null}
              onClick={undefined}
              s="small"
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Form simple redux form 1`] = `
.c14 {
  box-sizing: border-box;
}

.c0 {
  box-sizing: border-box;
  width: 100%;
  padding: 8px;
}

.c5 {
  box-sizing: border-box;
  margin-left: -8px;
  margin-right: -8px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c6 {
  box-sizing: border-box;
  width: 100%;
  margin-bottom: 8px;
  margin-top: 0px;
  padding-left: 8px;
  padding-right: 8px;
}

.c7 {
  box-sizing: border-box;
  width: 100%;
  padding-left: 8px;
  padding-right: 8px;
}

.c12 {
  box-sizing: border-box;
  margin-bottom: 0px;
  margin-top: 24px;
  margin-left: 24px;
  margin-right: 24px;
}

.c13 {
  box-sizing: border-box;
  width: 100%;
  padding-left: 8px;
  padding-right: 8px;
}

.c18 {
  box-sizing: border-box;
  width: 100%;
  margin-bottom: 8px;
  margin-top: 0px;
  padding-left: 8px;
  padding-right: 8px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c38 {
  margin: 0px;
}

.c26 {
  margin: 0px;
  margin-top: 8px;
  color: #8D9BA7;
}

.c25 {
  font-weight: 400;
}

.c16 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c3 {
  margin-bottom: 0px;
  margin-top: 24px;
  margin-left: 24px;
  margin-right: 24px;
  font-size: 14px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c9 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c9:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c9:disabled {
  opacity: 0.25;
}

.c23 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c22 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c22:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c22:disabled {
  opacity: 0.25;
}

.c41 {
  font-size: 24px;
  color: inherit;
}

.c33 {
  font-size: inherit;
  color: inherit;
}

.c28 {
  margin-right: 4px;
  font-size: inherit;
  color: inherit;
}

.c40::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f3ec';
  -webkit-animation: zmdi-spin 1.5s infinite linear;
  animation: zmdi-spin 1.5s infinite linear;
}

.c32::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c27::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f1f7';
}

.c37 {
  visibility: visible;
}

.c39 {
  position: absolute;
  top: -2px;
  left: 0;
  display: inline-block;
  margin-left: calc(50% - 12px);
  padding-top: inherit;
  pointer-events: none;
  visibility: hidden;
}

.c36 {
  background-color: #FF5745;
  color: #FFF;
}

.c35 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c35:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c35:focus:not(:disabled),
.c35:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c35:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c35:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c17 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c17 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c17::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c17:hover,
.c17:focus,
.c17:active {
  border-color: #8D9BA7;
}

.c17:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c17:checked ~ span {
  color: #1C2534;
}

.c17:checked::after {
  content: '\\f26b';
}

.c17:checked:hover,
.c17:checked:focus {
  background-color: #12AED3;
  border-color: #12AED3;
}

.c17:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c17:checked:disabled,
.c17:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c17:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c17:disabled,
.c17:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c17:disabled ~ span,
.c17:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c17.error {
  border-color: #C00316;
}

.c17.error:hover {
  border-color: #C00316;
}

.c15 {
  display: block;
  line-height: 1.5;
}

.c8 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c8::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c8::-moz-placeholder {
  color: #8D9BA7;
}

.c8:-ms-input-placeholder {
  color: #8D9BA7;
}

.c8::placeholder {
  color: #8D9BA7;
}

.c8:hover,
.c8:active {
  border-color: #B4BDC5;
}

.c8:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c8:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c8.error {
  border-color: #C00316;
}

.c30 {
  position: relative;
}

.c30 input {
  padding-right: 32px;
}

.c31 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c29 .DayPickerInput {
  display: inherit;
}

.c29 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c29 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c29 .DayPicker {
  color: #1C2534;
}

.c29 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c29 .DayPicker-NavButton--prev,
.c29 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c29 .DayPicker-NavButton--prev::after,
.c29 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c29 .DayPicker-NavButton--prev {
  left: 0;
}

.c29 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c29 .DayPicker-NavButton--next {
  right: 0;
}

.c29 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c29 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c29 .DayPicker-Caption > div {
  font-size: inherit;
}

.c29 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c29 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c29 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c29 .DayPicker-Day--today {
  color: inherit;
}

.c29 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c29 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c29 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c29 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c29 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

.c24 {
  font-family: Circular,serif;
  font-size: 12px;
  line-height: 1;
  font-weight: 600;
}

.c1 {
  font-family: Circular,serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
}

.c11 {
  font-family: Circular,serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
}

.c20 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c20 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c20:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c20:checked ~ span {
  color: #1C2534;
}

.c20:checked:hover {
  background: radial-gradient(circle at center,#12AED3 0,#12AED3 35%,transparent 40%);
}

.c20:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c20:checked:disabled,
.c20:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c20:disabled,
.c20:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c20:disabled ~ span,
.c20:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c20:hover,
.c20:focus,
.c20:active {
  border-color: #8D9BA7;
}

.c20.error {
  border-color: #C00316;
}

.c20.error:checked,
.c20.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c19 {
  display: block;
  line-height: 1.5;
}

.c21 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c21::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c21::-moz-placeholder {
  color: #8D9BA7;
}

.c21:-ms-input-placeholder {
  color: #8D9BA7;
}

.c21::placeholder {
  color: #8D9BA7;
}

.c21:hover,
.c21:active {
  border-color: #B4BDC5;
}

.c21:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c21:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c21.error {
  border-color: #C00316;
}

.c34 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c34 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c34 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c34 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c34 .Select-control::placeholder {
  color: #8D9BA7;
}

.c34 .Select-control:hover,
.c34 .Select-control:active {
  border-color: #B4BDC5;
}

.c34 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c34 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c34 .Select-control.error {
  border-color: #C00316;
}

.c34 .Select-control:hover {
  box-shadow: none;
}

.c34 .Select-input {
  padding: 0;
}

.c34 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c34.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c34.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c34.error > .Select-control {
  border-color: #C00316 !important;
}

.c34 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c34 .Select-placeholder,
.c34.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c34 .Select-value-label {
  font-weight: normal;
}

.c34 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c34 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c34 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c34.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c34.Select--multi .Select-value-icon:hover,
.c34.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c34.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c6 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c6 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c6 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c6 {
    margin-bottom: 0px;
    margin-top: 8px;
  }
}

@media screen and (min-width:32em) {
  .c7 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:48em) {
  .c7 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:64em) {
  .c7 {
    width: 75%;
  }
}

@media screen and (min-width:32em) {
  .c18 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c18 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c18 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c18 {
    margin-bottom: 0px;
  }
}

<div>
  <p>
    Forms should be used for any data input.
  </p>
  <div
    className="c0"
    is={null}
  >
    <h2>
      Create new user
    </h2>
    <form
      onSubmit={[Function]}
    >
      <label
        className="c1 c2 c3"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c6"
            is={null}
          >
            Username *
          </div>
          <div
            className="c7"
            is={null}
          >
            <input
              className="c8 c9 c10"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": "Required",
                  "form": "User",
                  "initial": undefined,
                  "invalid": true,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": false,
                  "visited": false,
                  "warning": undefined,
                }
              }
              name="username"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              s="medium"
              type="text"
              value=""
            />
          </div>
        </div>
      </label>
      <label
        className="c1 c2 c3"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c6"
            is={null}
          >
            Email
          </div>
          <div
            className="c7"
            is={null}
          >
            <input
              className="c8 c9 c10"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "User",
                  "initial": undefined,
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              name="email"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              s="medium"
              type="email"
              value=""
            />
          </div>
        </div>
      </label>
      <div
        className="c11 c12"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c13"
            is={null}
          >
            <div
              className="c14"
              is={null}
            >
              <label
                className="c15 c2 c16"
                is={null}
              >
                <input
                  checked=""
                  className="c17"
                  name="newsletterEnabled"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                  value=""
                />
                <span>
                  Sign up for newsletter
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c11 c12"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c18"
            is={null}
          >
            Favorite Game
          </div>
          <div
            className="c7"
            is={null}
          >
            <label
              checked={false}
              className="c19 c2 c16"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "User",
                  "initial": "catan",
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              onDragStart={[Function]}
              onDrop={[Function]}
              type="radio"
            >
              <input
                checked={false}
                className="c20"
                label="Camel Up"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="camel-up"
              />
               
              <span>
                Camel Up
              </span>
            </label>
            <label
              checked={false}
              className="c19 c2 c16"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "User",
                  "initial": "catan",
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              onDragStart={[Function]}
              onDrop={[Function]}
              type="radio"
            >
              <input
                checked={false}
                className="c20"
                label="Risk"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="risk"
              />
               
              <span>
                Risk
              </span>
            </label>
            <label
              checked={true}
              className="c19 c2 c16"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "User",
                  "initial": "catan",
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              onDragStart={[Function]}
              onDrop={[Function]}
              type="radio"
            >
              <input
                checked={true}
                className="c20"
                label="Settlers of Catan"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="catan"
              />
               
              <span>
                Settlers of Catan
              </span>
            </label>
          </div>
        </div>
      </div>
      <label
        className="c1 c2 c3"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c6"
            is={null}
          >
            Comment
          </div>
          <div
            className="c7"
            is={null}
          >
            <textarea
              className="c21 c22 c23"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "User",
                  "initial": undefined,
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              name="comment"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              rows={4}
              s="medium"
              type="text"
              value=""
            />
            <p
              className="c24 c25 c26"
              fontStyle="controls.s"
              is={null}
            >
              <span
                className="c27 c28"
                icon="info-outline"
                is={null}
              />
              Tell us something
            </p>
          </div>
        </div>
      </label>
      <label
        className="c1 c2 c3"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c6"
            is={null}
          >
            Most recent moon voyage *
          </div>
          <div
            className="c7"
            is={null}
          >
            <div
              className="c29"
            >
              <div
                className="DayPickerInput"
                onMouseDown={[Function]}
              >
                <div
                  className="c30 c14"
                  is={null}
                >
                  <input
                    className="c8 c9 c10"
                    disabled={false}
                    is={null}
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": "Required",
                        "form": "User",
                        "initial": undefined,
                        "invalid": true,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": false,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    name="moonDate"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDragStart={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyUp={[Function]}
                    placeholder="MM/DD/YYYY"
                    s="medium"
                    type="text"
                    value=""
                  />
                  <span
                    className="c31 c32 c33"
                    icon="calendar"
                    is={null}
                    onClick={undefined}
                    s={undefined}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <label
        className="c1 c2 c3"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c6"
            is={null}
          >
            Have you been to the Moon?
          </div>
          <div
            className="c7"
            is={null}
          >
            <div
              className="c14"
              is={null}
            >
              <div
                className="Select c34 Select--single is-clearable is-searchable"
                style={undefined}
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  style={undefined}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-2--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      className="Select-input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <style
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "input#undefined::-ms-clear {display: none;}",
                          }
                        }
                      />
                      <input
                        aria-activedescendant="react-select-2--value"
                        aria-describedby={undefined}
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        aria-owns=""
                        className={undefined}
                        id={undefined}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        style={
                          Object {
                            "boxSizing": "content-box",
                            "width": "5px",
                          }
                        }
                        tabIndex={undefined}
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </span>
                  <span
                    aria-label="Clear value"
                    className="Select-clear-zone"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    title="Clear value"
                  >
                    <span
                      className="Select-clear"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "&times;",
                        }
                      }
                    />
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <label
        className="c1 c2 c3"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c6"
            is={null}
          >
            Which other planets have you visited?
          </div>
          <div
            className="c7"
            is={null}
          >
            <div
              className="c14"
              is={null}
            >
              <div
                className="Select c34 Select--multi is-clearable is-searchable"
                style={undefined}
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  style={undefined}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-3--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      className="Select-input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <style
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "input#undefined::-ms-clear {display: none;}",
                          }
                        }
                      />
                      <input
                        aria-activedescendant="react-select-3--value"
                        aria-describedby={undefined}
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        aria-owns=""
                        className={undefined}
                        id={undefined}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        style={
                          Object {
                            "boxSizing": "content-box",
                            "width": "5px",
                          }
                        }
                        tabIndex={undefined}
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <div
        className="c11 c12"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c4 c5"
          is={null}
        >
          <div
            className="c13"
            is={null}
          >
            <button
              className="c35 c36"
              disabled={true}
              is={null}
              mode="primary"
              s="medium"
              type="submit"
            >
              <p
                className="c37 c25 c38"
                hide={false}
                is={null}
              >
                Sign Up
              </p>
              <span
                className="c39 c40 c41"
                hide={true}
                icon="spinner"
                is={null}
                spin={true}
              />
            </button>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>
`;

exports[`Storyshots Form with graphql 1`] = `
.c1 {
  box-sizing: border-box;
}

.c0 {
  box-sizing: border-box;
  width: 100%;
  padding: 8px;
}

.c6 {
  box-sizing: border-box;
  margin-left: -8px;
  margin-right: -8px;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
}

.c7 {
  box-sizing: border-box;
  width: 100%;
  margin-bottom: 8px;
  margin-top: 0px;
  padding-left: 8px;
  padding-right: 8px;
}

.c8 {
  box-sizing: border-box;
  width: 100%;
  padding-left: 8px;
  padding-right: 8px;
}

.c13 {
  box-sizing: border-box;
  margin-bottom: 0px;
  margin-top: 24px;
  margin-left: 24px;
  margin-right: 24px;
}

.c14 {
  box-sizing: border-box;
  width: 100%;
  padding-left: 8px;
  padding-right: 8px;
}

.c19 {
  box-sizing: border-box;
  width: 100%;
  margin-bottom: 8px;
  margin-top: 0px;
  padding-left: 8px;
  padding-right: 8px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c38 {
  margin: 0px;
}

.c27 {
  margin: 0px;
  margin-top: 8px;
  color: #8D9BA7;
}

.c26 {
  font-weight: 400;
}

.c16 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c4 {
  margin-bottom: 0px;
  margin-top: 24px;
  margin-left: 24px;
  margin-right: 24px;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c11 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c10 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c10:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c10:disabled {
  opacity: 0.25;
}

.c24 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c23 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c23:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c23:disabled {
  opacity: 0.25;
}

.c41 {
  font-size: 24px;
  color: inherit;
}

.c34 {
  font-size: inherit;
  color: inherit;
}

.c29 {
  margin-right: 4px;
  font-size: inherit;
  color: inherit;
}

.c40::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f3ec';
  -webkit-animation: zmdi-spin 1.5s infinite linear;
  animation: zmdi-spin 1.5s infinite linear;
}

.c33::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f332';
}

.c28::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f1f7';
}

.c37 {
  visibility: visible;
}

.c39 {
  position: absolute;
  top: -2px;
  left: 0;
  display: inline-block;
  margin-left: calc(50% - 12px);
  padding-top: inherit;
  pointer-events: none;
  visibility: hidden;
}

.c36 {
  background-color: #FF5745;
  color: #FFF;
}

.c35 {
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c35:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c35:focus:not(:disabled),
.c35:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c35:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c35:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c17 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c17 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c17::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c17:hover,
.c17:focus,
.c17:active {
  border-color: #8D9BA7;
}

.c17:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c17:checked ~ span {
  color: #1C2534;
}

.c17:checked::after {
  content: '\\f26b';
}

.c17:checked:hover,
.c17:checked:focus {
  background-color: #12AED3;
  border-color: #12AED3;
}

.c17:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c17:checked:disabled,
.c17:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c17:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c17:disabled,
.c17:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c17:disabled ~ span,
.c17:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c17.error {
  border-color: #C00316;
}

.c17.error:hover {
  border-color: #C00316;
}

.c15 {
  display: block;
  line-height: 1.5;
}

.c9 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c9::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c9::-moz-placeholder {
  color: #8D9BA7;
}

.c9:-ms-input-placeholder {
  color: #8D9BA7;
}

.c9::placeholder {
  color: #8D9BA7;
}

.c9:hover,
.c9:active {
  border-color: #B4BDC5;
}

.c9:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c9:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c9.error {
  border-color: #C00316;
}

.c31 {
  position: relative;
}

.c31 input {
  padding-right: 32px;
}

.c32 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c30 .DayPickerInput {
  display: inherit;
}

.c30 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c30 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c30 .DayPicker {
  color: #1C2534;
}

.c30 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c30 .DayPicker-NavButton--prev,
.c30 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c30 .DayPicker-NavButton--prev::after,
.c30 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c30 .DayPicker-NavButton--prev {
  left: 0;
}

.c30 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c30 .DayPicker-NavButton--next {
  right: 0;
}

.c30 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c30 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c30 .DayPicker-Caption > div {
  font-size: inherit;
}

.c30 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c30 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c30 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c30 .DayPicker-Day--today {
  color: inherit;
}

.c30 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c30 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c30 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c30 .DayPicker-Day--outside {
  color: #B4BDC5;
}

.c30 .DayPicker-Day--disabled {
  background-color: #F1F7F9;
  color: #8D9BA7;
}

.c25 {
  font-family: Circular,serif;
  font-size: 12px;
  line-height: 1;
  font-weight: 600;
}

.c2 {
  font-family: Circular,serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
}

.c12 {
  font-family: Circular,serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
}

.c21 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c21 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c21:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c21:checked ~ span {
  color: #1C2534;
}

.c21:checked:hover {
  background: radial-gradient(circle at center,#12AED3 0,#12AED3 35%,transparent 40%);
}

.c21:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c21:checked:disabled,
.c21:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c21:disabled,
.c21:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c21:disabled ~ span,
.c21:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c21:hover,
.c21:focus,
.c21:active {
  border-color: #8D9BA7;
}

.c21.error {
  border-color: #C00316;
}

.c21.error:checked,
.c21.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c20 {
  display: block;
  line-height: 1.5;
}

.c22 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c22::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c22::-moz-placeholder {
  color: #8D9BA7;
}

.c22:-ms-input-placeholder {
  color: #8D9BA7;
}

.c22::placeholder {
  color: #8D9BA7;
}

.c22:hover,
.c22:active {
  border-color: #B4BDC5;
}

.c22:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c22:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c22.error {
  border-color: #C00316;
}

.c18 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c18 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c18 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c18 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c18 .Select-control::placeholder {
  color: #8D9BA7;
}

.c18 .Select-control:hover,
.c18 .Select-control:active {
  border-color: #B4BDC5;
}

.c18 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c18 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c18 .Select-control.error {
  border-color: #C00316;
}

.c18 .Select-control:hover {
  box-shadow: none;
}

.c18 .Select-input {
  padding: 0;
}

.c18 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c18.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c18.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c18.error > .Select-control {
  border-color: #C00316 !important;
}

.c18 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c18 .Select-placeholder,
.c18.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c18 .Select-value-label {
  font-weight: normal;
}

.c18 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c18 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c18 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c18.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c18.Select--multi .Select-value-icon:hover,
.c18.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c18.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c7 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c7 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c7 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c7 {
    margin-bottom: 0px;
    margin-top: 8px;
  }
}

@media screen and (min-width:32em) {
  .c8 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:48em) {
  .c8 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:64em) {
  .c8 {
    width: 75%;
  }
}

@media screen and (min-width:32em) {
  .c19 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c19 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c19 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c19 {
    margin-bottom: 0px;
  }
}

<div>
  <p>
    Forms should be used for any data input.
  </p>
  <div
    className="c0"
    is={null}
  >
    <h2>
      Create new user
    </h2>
    <div
      className="c1"
      is={null}
    >
      Example of loading data with graphql:
      <br />
      Employee count: 
      ...
    </div>
    <form
      onSubmit={[Function]}
    >
      <label
        className="c2 c3 c4"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c7"
            is={null}
          >
            Username
          </div>
          <div
            className="c8"
            is={null}
          >
            <input
              className="c9 c10 c11"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "form4",
                  "initial": undefined,
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              name="username"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              required={true}
              s="medium"
              type="text"
              value=""
            />
          </div>
        </div>
      </label>
      <label
        className="c2 c3 c4"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c7"
            is={null}
          >
            Email
          </div>
          <div
            className="c8"
            is={null}
          >
            <input
              className="c9 c10 c11"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "form4",
                  "initial": undefined,
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              name="email"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              s="medium"
              type="email"
              value=""
            />
          </div>
        </div>
      </label>
      <div
        className="c12 c13"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c14"
            is={null}
          >
            <div
              className="c1"
              is={null}
            >
              <label
                className="c15 c3 c16"
                is={null}
              >
                <input
                  checked=""
                  className="c17"
                  name="newsletterEnabled"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  type="checkbox"
                  value=""
                />
                <span>
                  Sign up for newsletter
                </span>
              </label>
            </div>
          </div>
        </div>
      </div>
      <label
        className="c2 c3 c4"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c7"
            is={null}
          >
            Test
          </div>
          <div
            className="c8"
            is={null}
          >
            <div
              className="c1"
              is={null}
            >
              <div
                className="Select c18 Select--single is-clearable is-searchable"
                style={undefined}
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  style={undefined}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-4--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      className="Select-input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <style
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "input#undefined::-ms-clear {display: none;}",
                          }
                        }
                      />
                      <input
                        aria-activedescendant="react-select-4--value"
                        aria-describedby={undefined}
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        aria-owns=""
                        className={undefined}
                        id={undefined}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        style={
                          Object {
                            "boxSizing": "content-box",
                            "width": "5px",
                          }
                        }
                        tabIndex={undefined}
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </span>
                  <span
                    aria-label="Clear value"
                    className="Select-clear-zone"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    title="Clear value"
                  >
                    <span
                      className="Select-clear"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "&times;",
                        }
                      }
                    />
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <div
        className="c12 c13"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c19"
            is={null}
          >
            Favorite Game
          </div>
          <div
            className="c8"
            is={null}
          >
            <label
              checked={false}
              className="c20 c3 c16"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "form4",
                  "initial": undefined,
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              onDragStart={[Function]}
              onDrop={[Function]}
              type="radio"
            >
              <input
                checked={false}
                className="c21"
                label="Camel Up"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="camel-up"
              />
               
              <span>
                Camel Up
              </span>
            </label>
            <label
              checked={false}
              className="c20 c3 c16"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "form4",
                  "initial": undefined,
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              onDragStart={[Function]}
              onDrop={[Function]}
              type="radio"
            >
              <input
                checked={false}
                className="c21"
                label="Risk"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="risk"
              />
               
              <span>
                Risk
              </span>
            </label>
            <label
              checked={false}
              className="c20 c3 c16"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "form4",
                  "initial": undefined,
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              onDragStart={[Function]}
              onDrop={[Function]}
              type="radio"
            >
              <input
                checked={false}
                className="c21"
                label="Settlers of Catan"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="catan"
              />
               
              <span>
                Settlers of Catan
              </span>
            </label>
          </div>
        </div>
      </div>
      <label
        className="c2 c3 c4"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c7"
            is={null}
          >
            Comment
          </div>
          <div
            className="c8"
            is={null}
          >
            <textarea
              className="c22 c23 c24"
              is={null}
              meta={
                Object {
                  "active": false,
                  "asyncValidating": false,
                  "autofilled": false,
                  "dirty": false,
                  "dispatch": [Function],
                  "error": undefined,
                  "form": "form4",
                  "initial": undefined,
                  "invalid": false,
                  "pristine": true,
                  "submitFailed": false,
                  "submitting": false,
                  "touched": false,
                  "valid": true,
                  "visited": false,
                  "warning": undefined,
                }
              }
              name="comment"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              rows={4}
              s="medium"
              type="text"
              value=""
            />
            <p
              className="c25 c26 c27"
              fontStyle="controls.s"
              is={null}
            >
              <span
                className="c28 c29"
                icon="info-outline"
                is={null}
              />
              Tell us something
            </p>
          </div>
        </div>
      </label>
      <label
        className="c2 c3 c4"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c7"
            is={null}
          >
            Most recent moon voyage
          </div>
          <div
            className="c8"
            is={null}
          >
            <div
              className="c30"
            >
              <div
                className="DayPickerInput"
                onMouseDown={[Function]}
              >
                <div
                  className="c31 c1"
                  is={null}
                >
                  <input
                    className="c9 c10 c11"
                    disabled={false}
                    is={null}
                    meta={
                      Object {
                        "active": false,
                        "asyncValidating": false,
                        "autofilled": false,
                        "dirty": false,
                        "dispatch": [Function],
                        "error": undefined,
                        "form": "form4",
                        "initial": undefined,
                        "invalid": false,
                        "pristine": true,
                        "submitFailed": false,
                        "submitting": false,
                        "touched": false,
                        "valid": true,
                        "visited": false,
                        "warning": undefined,
                      }
                    }
                    name="moonDate"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDragStart={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyUp={[Function]}
                    placeholder="MM/DD/YYYY"
                    s="medium"
                    type="text"
                    value=""
                  />
                  <span
                    className="c32 c33 c34"
                    icon="calendar"
                    is={null}
                    onClick={undefined}
                    s={undefined}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <label
        className="c2 c3 c4"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c7"
            is={null}
          >
            Have you been to the Moon?
          </div>
          <div
            className="c8"
            is={null}
          >
            <div
              className="c1"
              is={null}
            >
              <div
                className="Select c18 Select--single is-clearable is-searchable"
                style={undefined}
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  style={undefined}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-5--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      className="Select-input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <style
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "input#undefined::-ms-clear {display: none;}",
                          }
                        }
                      />
                      <input
                        aria-activedescendant="react-select-5--value"
                        aria-describedby={undefined}
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        aria-owns=""
                        className={undefined}
                        id={undefined}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        style={
                          Object {
                            "boxSizing": "content-box",
                            "width": "5px",
                          }
                        }
                        tabIndex={undefined}
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </span>
                  <span
                    aria-label="Clear value"
                    className="Select-clear-zone"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    title="Clear value"
                  >
                    <span
                      className="Select-clear"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "&times;",
                        }
                      }
                    />
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <div
        className="c12 c13"
        fontStyle="controls.m"
        is={null}
      >
        <div
          className="c5 c6"
          is={null}
        >
          <div
            className="c14"
            is={null}
          >
            <button
              className="c35 c36"
              disabled={false}
              is={null}
              mode="primary"
              s="medium"
              type="submit"
            >
              <p
                className="c37 c26 c38"
                hide={false}
                is={null}
              >
                Sign Up
              </p>
              <span
                className="c39 c40 c41"
                hide={true}
                icon="spinner"
                is={null}
                spin={true}
              />
            </button>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>
`;

exports[`Storyshots InitialsAvatar InitialsAvatar Sizes 1`] = `
.c1 {
  box-sizing: border-box;
}

.c3 {
  box-sizing: border-box;
  margin-right: 8px;
}

.c10 {
  box-sizing: border-box;
  margin-top: 8px;
  margin-bottom: 8px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-box-pack: space-evenly;
  -webkit-justify-content: space-evenly;
  -ms-flex-pack: space-evenly;
  justify-content: space-evenly;
}

.c6 {
  color: #303162;
}

.c15 {
  color: #155457;
}

.c20 {
  color: #446384;
}

.c25 {
  color: #3998AA;
}

.c30 {
  color: #1E7C7F;
}

.c35 {
  color: #26A5A8;
}

.c9 {
  margin: 0px;
}

.c8 {
  font-weight: 400;
}

.c12 {
  display: inline-block;
  width: 48px;
  height: 48px;
  border-radius: 99999px;
}

.c7 {
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 24px;
  text-align: center;
  padding-top: 24px;
}

.c16 {
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 19px;
  text-align: center;
  padding-top: 18px;
}

.c21 {
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 16px;
  text-align: center;
  padding-top: 12px;
}

.c26 {
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 14px;
  text-align: center;
  padding-top: 10px;
}

.c31 {
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 12px;
  text-align: center;
  padding-top: 8px;
}

.c36 {
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 12px;
  text-align: center;
  padding-top: 4px;
}

.c11 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
}

.c17 {
  box-sizing: border-box;
  width: 64px;
  height: 64px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
}

.c22 {
  box-sizing: border-box;
  width: 48px;
  height: 48px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
}

.c27 {
  box-sizing: border-box;
  width: 40px;
  height: 40px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
}

.c32 {
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
}

.c37 {
  box-sizing: border-box;
  width: 24px;
  height: 24px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
}

.c5 {
  color: #303162;
}

.c14 {
  color: #155457;
}

.c19 {
  color: #446384;
}

.c24 {
  color: #3998AA;
}

.c29 {
  color: #1E7C7F;
}

.c34 {
  color: #26A5A8;
}

.c4 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #303162;
  opacity: 1;
}

.c13 {
  box-sizing: border-box;
  width: 64px;
  height: 64px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #155457;
  opacity: 1;
}

.c18 {
  box-sizing: border-box;
  width: 48px;
  height: 48px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #446384;
  opacity: 1;
}

.c23 {
  box-sizing: border-box;
  width: 40px;
  height: 40px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #3998AA;
  opacity: 1;
}

.c28 {
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #1E7C7F;
  opacity: 1;
}

.c33 {
  box-sizing: border-box;
  width: 24px;
  height: 24px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #26A5A8;
  opacity: 1;
}

<div
  className="c0 c1"
  is={null}
>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      <div
        className="c4 c5 c6 c1"
        color="#303162"
        disabled={false}
        is={null}
        s="xxlarge"
      >
        <p
          className="c7 c8 c9"
          is={null}
          s="xxlarge"
          title="Nname Rname"
        >
          NR
        </p>
      </div>
    </div>
    <div
      className="c10"
      is={null}
    >
      XXL
    </div>
    <div
      className="c1"
      is={null}
    >
      <img
        alt="Nname Rname's picture"
        className="c11 c12 "
        disabled={false}
        is={null}
        s="xxlarge"
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="Nname Rname's picture"
      />
    </div>
  </div>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      <div
        className="c13 c14 c15 c1"
        color="#155457"
        disabled={false}
        is={null}
        s="xlarge"
      >
        <p
          className="c16 c8 c9"
          is={null}
          s="xlarge"
          title="Mname Rname"
        >
          MR
        </p>
      </div>
    </div>
    <div
      className="c10"
      is={null}
    >
      XL
    </div>
    <div
      className="c1"
      is={null}
    >
      <img
        alt="Mname Rname's picture"
        className="c17 c12 "
        disabled={false}
        is={null}
        s="xlarge"
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="Mname Rname's picture"
      />
    </div>
  </div>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      <div
        className="c18 c19 c20 c1"
        color="#446384"
        disabled={false}
        is={null}
        s="large"
      >
        <p
          className="c21 c8 c9"
          is={null}
          s="large"
          title="Tname Fname"
        >
          TF
        </p>
      </div>
    </div>
    <div
      className="c10"
      is={null}
    >
      L
    </div>
    <div
      className="c1"
      is={null}
    >
      <img
        alt="Tname Rname's picture"
        className="c22 c12 "
        disabled={false}
        is={null}
        s="large"
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="Tname Rname's picture"
      />
    </div>
  </div>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      <div
        className="c23 c24 c25 c1"
        color="#3998AA"
        disabled={false}
        is={null}
        s="medium"
      >
        <p
          className="c26 c8 c9"
          is={null}
          s="medium"
          title="Mname Wname"
        >
          MW
        </p>
      </div>
    </div>
    <div
      className="c10"
      is={null}
    >
      M
    </div>
    <div
      className="c1"
      is={null}
    >
      <img
        alt="Mname Rname's picture"
        className="c27 c12 "
        disabled={false}
        is={null}
        s="medium"
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="Mname Rname's picture"
      />
    </div>
  </div>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      <div
        className="c28 c29 c30 c1"
        color="#1E7C7F"
        disabled={false}
        is={null}
        s="small"
      >
        <p
          className="c31 c8 c9"
          is={null}
          s="small"
          title="Kname Sname"
        >
          KS
        </p>
      </div>
    </div>
    <div
      className="c10"
      is={null}
    >
      S
    </div>
    <div
      className="c1"
      is={null}
    >
      <img
        alt="Kname Rname's picture"
        className="c32 c12 "
        disabled={false}
        is={null}
        s="small"
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="Kname Rname's picture"
      />
    </div>
  </div>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c1"
      is={null}
    >
      <div
        className="c33 c34 c35 c1"
        color="#26A5A8"
        disabled={false}
        is={null}
        s="xsmall"
      >
        <p
          className="c36 c8 c9"
          is={null}
          s="xsmall"
          title="Jname Sname"
        >
          JS
        </p>
      </div>
    </div>
    <div
      className="c10"
      is={null}
    >
      XS
    </div>
    <div
      className="c1"
      is={null}
    >
      <img
        alt="Jname Rname's picture"
        className="c37 c12 "
        disabled={false}
        is={null}
        s="xsmall"
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="Jname Rname's picture"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots InitialsAvatar InitialsAvatar states 1`] = `
.c1 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  margin-right: 8px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  color: #303162;
}

.c8 {
  margin: 0px;
}

.c7 {
  font-weight: 400;
}

.c11 {
  display: inline-block;
  width: 48px;
  height: 48px;
  border-radius: 99999px;
}

.c6 {
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 24px;
  text-align: center;
  padding-top: 24px;
}

.c10 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
}

.c12 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 0.5;
}

.c4 {
  color: #303162;
}

.c3 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #303162;
  opacity: 1;
}

.c9 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #303162;
  opacity: 0.5;
}

<div
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="c3 c4 c5 c1"
      color="#303162"
      disabled={false}
      is={null}
      s="xxlarge"
    >
      <p
        className="c6 c7 c8"
        is={null}
        s="xxlarge"
        title="Nname Rname"
      >
        NR
      </p>
    </div>
  </div>
  <div
    className="c2"
    is={null}
  >
    <div
      className="c9 c4 c5 c1"
      color="#303162"
      disabled={true}
      is={null}
      s="xxlarge"
    >
      <p
        className="c6 c7 c8"
        is={null}
        s="xxlarge"
        title="Nname Rname"
      >
        NR
      </p>
    </div>
  </div>
  <div
    className="c2"
    is={null}
  >
    <img
      alt="Nname Rname's picture"
      className="c10 c11 "
      disabled={false}
      is={null}
      s="xxlarge"
      src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
      title="Nname Rname's picture"
    />
  </div>
  <div
    className="c2"
    is={null}
  >
    <img
      alt="Nname Rname's picture"
      className="c12 c11 "
      disabled={true}
      is={null}
      s="xxlarge"
      src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
      title="Nname Rname's picture"
    />
  </div>
</div>
`;

exports[`Storyshots Input default 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <input
    className="c2 c3 c4"
    is={null}
    s="medium"
    type="text"
  />
</div>
`;

exports[`Storyshots Input default value 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <input
    className="c2 c3 c4"
    defaultValue="Default"
    is={null}
    s="medium"
    type="text"
  />
</div>
`;

exports[`Storyshots Input disabled 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <input
    className="c2 c3 c4"
    disabled={true}
    is={null}
    s="medium"
    type="text"
    value="Cannot be edited, focused or submitted"
  />
</div>
`;

exports[`Storyshots Input error 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <input
    className="error c2 c3 c4"
    defaultValue="Invalid input"
    is={null}
    s="medium"
    type="text"
  />
</div>
`;

exports[`Storyshots Input fires events 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <input
    className="c2 c3 c4"
    defaultValue="Try interacting"
    is={null}
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    s="medium"
    type="text"
  />
</div>
`;

exports[`Storyshots Input placeholder 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <input
    className="c2 c3 c4"
    is={null}
    placeholder="Placeholder"
    s="medium"
    type="text"
  />
</div>
`;

exports[`Storyshots Input readOnly 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <input
    className="c2 c3 c4"
    is={null}
    readOnly={true}
    s="medium"
    type="text"
    value="Cannot be edited, but can be focused and submitted"
  />
</div>
`;

exports[`Storyshots Input rebass props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  margin-top: 50px;
  margin-bottom: 50px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <input
    className="c2 c3 c4"
    is={null}
    placeholder="Placeholder"
    s="medium"
    type="text"
  />
</div>
`;

exports[`Storyshots Input sizes 1`] = `
.c3 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c4 {
  box-sizing: border-box;
  width: 33.33333333333333%;
}

.c5 {
  box-sizing: border-box;
  width: 66.66666666666666%;
  margin-bottom: 5px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  background-color: white;
}

.c8 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c7 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c7:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c7:disabled {
  opacity: 0.25;
}

.c9 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c9::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c9::-moz-placeholder {
  color: #8D9BA7;
}

.c9:-ms-input-placeholder {
  color: #8D9BA7;
}

.c9::placeholder {
  color: #8D9BA7;
}

.c9:hover,
.c9:active {
  border-color: #B4BDC5;
}

.c9:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c9:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c9.error {
  border-color: #C00316;
}

.c6 {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 48px;
  line-height: 1.43;
}

.c6::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c6::-moz-placeholder {
  color: #8D9BA7;
}

.c6:-ms-input-placeholder {
  color: #8D9BA7;
}

.c6::placeholder {
  color: #8D9BA7;
}

.c6:hover,
.c6:active {
  border-color: #B4BDC5;
}

.c6:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c6:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c6.error {
  border-color: #C00316;
}

.c10 {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  height: 32px;
  line-height: 1.43;
}

.c10::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c10::-moz-placeholder {
  color: #8D9BA7;
}

.c10:-ms-input-placeholder {
  color: #8D9BA7;
}

.c10::placeholder {
  color: #8D9BA7;
}

.c10:hover,
.c10:active {
  border-color: #B4BDC5;
}

.c10:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c10:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c10.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c4"
      is={null}
    >
      Large
    </div>
    <div
      className="c5"
      is={null}
    >
      <input
        className="c6 c7 c8"
        is={null}
        placeholder="Placeholder"
        s="large"
        type="text"
      />
    </div>
    <div
      className="c4"
      is={null}
    >
      Medium
    </div>
    <div
      className="c5"
      is={null}
    >
      <input
        className="c9 c7 c8"
        is={null}
        placeholder="Placeholder"
        s="medium"
        type="text"
      />
    </div>
    <div
      className="c4"
      is={null}
    >
      Small
    </div>
    <div
      className="c5"
      is={null}
    >
      <input
        className="c10 c7 c8"
        is={null}
        placeholder="Placeholder"
        s="small"
        type="text"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Input with icon 1`] = `
.c4 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c2 {
  box-sizing: border-box;
  margin-bottom: 16px;
}

.c0 {
  background-color: white;
}

.c7 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  font-size: inherit;
  color: inherit;
  background-color: transparent;
}

.c6 {
  font-family: inherit;
  line-height: inherit;
  display: inline-block;
  vertical-align: middle;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c6:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c6:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: inherit;
  color: inherit;
}

.c9::after {
  display: inline-block;
  font-family: Material-Design-Iconic-Font;
  text-align: center;
  content: '\\f1c3';
}

.c11 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c11::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c11::-moz-placeholder {
  color: #8D9BA7;
}

.c11:-ms-input-placeholder {
  color: #8D9BA7;
}

.c11::placeholder {
  color: #8D9BA7;
}

.c11:hover,
.c11:active {
  border-color: #B4BDC5;
}

.c11:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c11:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c11.error {
  border-color: #C00316;
}

.c13 {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 48px;
  line-height: 1.43;
}

.c13::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c13::-moz-placeholder {
  color: #8D9BA7;
}

.c13:-ms-input-placeholder {
  color: #8D9BA7;
}

.c13::placeholder {
  color: #8D9BA7;
}

.c13:hover,
.c13:active {
  border-color: #B4BDC5;
}

.c13:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c13:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c13.error {
  border-color: #C00316;
}

.c5 {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  height: 32px;
  line-height: 1.43;
}

.c5::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5::-moz-placeholder {
  color: #8D9BA7;
}

.c5:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5::placeholder {
  color: #8D9BA7;
}

.c5:hover,
.c5:active {
  border-color: #B4BDC5;
}

.c5:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c5.error {
  border-color: #C00316;
}

.c3 {
  position: relative;
}

.c3 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 8px;
  cursor: pointer;
}

.c12 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  cursor: pointer;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="c3 c4"
      is={null}
    >
      <input
        className="c5 c6 c7"
        is={null}
        placeholder="Search..."
        s="small"
        type="text"
      />
      <span
        className="c8 c9 c10"
        icon="search"
        is={null}
        onClick={[Function]}
        s="small"
      />
    </div>
    <div
      className="c3 c4"
      is={null}
    >
      <input
        className="c11 c6 c7"
        is={null}
        placeholder="Search..."
        s="medium"
        type="text"
      />
      <span
        className="c12 c9 c10"
        icon="search"
        is={null}
        onClick={[Function]}
        s="medium"
      />
    </div>
    <div
      className="c3 c4"
      is={null}
    >
      <input
        className="c13 c6 c7"
        is={null}
        placeholder="Search..."
        s="large"
        type="text"
      />
      <span
        className="c12 c9 c10"
        icon="search"
        is={null}
        onClick={[Function]}
        s="large"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Link default 1`] = `
.c1 {
  padding-top: 4px;
  padding-bottom: 4px;
}

.c0 {
  text-decoration: none;
}

.c0:link,
.c0:visited {
  color: #12AED3;
}

.c0:hover {
  color: #0081AA;
}

.c0:active {
  color: #144E6F;
}

<a
  className="c0 c1"
  href="https://help.zenefits.com/"
  is={null}
  rel="noreferrer noopener "
  target="_blank"
>
  This is a link. It'll go to help.zenefits.com
</a>
`;

exports[`Storyshots NavBar product and list 1`] = `
.c0 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  margin-right: 16px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c11 {
  background-color: #123466;
}

.c6 {
  margin-right: 16px;
  padding-bottom: 8px;
  padding-top: 8px;
  font-size: 14px;
}

.c5 {
  text-decoration: none;
  font-weight: 600;
  color: blue;
  border-bottom-width: 2;
  border-bottom-style: solid;
}

.c5:hover {
  color: blue;
}

.c8 {
  text-decoration: none;
  font-weight: 600;
  color: inherit;
  border-bottom-width: 0;
  border-bottom-style: solid;
}

.c8:hover {
  color: blue;
}

.c4 {
  cursor: pointer;
  border-bottom: 2px solid #FF5745;
  text-decoration: none;
  font-size: 14px;
  font-weight: 500;
  padding: 14px 0;
  margin: 0 16px;
  color: inherit;
  opacity: 1;
}

.c4:hover {
  opacity: 1;
  color: inherit;
}

.c7 {
  cursor: pointer;
  border-bottom: 2px solid transparent;
  text-decoration: none;
  font-size: 14px;
  font-weight: 500;
  padding: 14px 0;
  margin: 0 16px;
  color: inherit;
  opacity: 0.65;
}

.c7:hover {
  opacity: 1;
  color: inherit;
}

.c10 {
  background-color: #123466;
}

.c2 {
  color: #123466;
}

.c9 {
  color: #FFF;
}

<div
  className="c0"
  is={null}
>
  <div
    className="c1"
    is={null}
  >
    <div
      className="c2 c3 c0"
      is={null}
      mode="link"
    >
      <a
        className="c4 c5 c6"
        is={null}
      >
        Tab 1
      </a>
      <a
        className="c7 c8 c6"
        is={null}
      >
        Tab 2
      </a>
      <a
        className="c7 c8 c6"
        is={null}
      >
        Tab 3
      </a>
    </div>
    <div
      bg="#123466"
      className="c9 c10 c11 c3 c0"
      is={null}
      mode="product"
    >
      <a
        className="c4 c5 c6"
        is={null}
      >
        Tab 1
      </a>
      <a
        className="c7 c8 c6"
        is={null}
      >
        Tab 2
      </a>
      <a
        className="c7 c8 c6"
        is={null}
      >
        Tab 3
      </a>
    </div>
  </div>
  <div
    className="c0"
    is={null}
  >
    <p>
      To Link to a react-router RouterNavLink:
    </p>
    <pre>
      &lt;NavBar mode="product"&gt;
  &lt;NavBar.RouterNavLink to={\`/some/\${id}\`}&gt;Go to some route&lt;/NavBar.RouteNavLink&gt;
&lt;/NavBar&gt;
    </pre>
  </div>
</div>
`;

exports[`Storyshots Popover default 1`] = `
.c1 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  margin: 50px;
}

.c4 {
  box-sizing: border-box;
  width: auto;
  padding: 10px;
}

.c5 {
  box-sizing: border-box;
  margin-left: 50px;
  margin-right: 50px;
  margin-top: 300px;
  margin-bottom: 300px;
}

.c6 {
  box-sizing: border-box;
  margin-left: 50px;
  margin-right: 50px;
  margin-top: 100px;
  margin-bottom: 100px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  background-color: lightblue;
}

<div
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div>
      <div
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <div
          bg="lightblue"
          className="c3 c4"
          is={null}
        >
          Click me (bottom)
        </div>
      </div>
    </div>
  </div>
  <div
    className="c2"
    is={null}
  >
    <div>
      <div
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <div
          bg="lightblue"
          className="c3 c4"
          is={null}
        >
          Hover me
        </div>
      </div>
    </div>
  </div>
  <div
    className="c5"
    is={null}
  >
    <div>
      <div
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <div
          bg="lightblue"
          className="c3 c4"
          is={null}
        >
          Click me (top)
        </div>
      </div>
    </div>
  </div>
  <div
    className="c6"
    is={null}
  >
    <div>
      <div
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <div
          bg="lightblue"
          className="c3 c4"
          is={null}
        >
          Click me (left)
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Popover open by default 1`] = `
.c5 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: auto;
  padding: 10px;
}

.c0 {
  box-sizing: border-box;
  width: 20%;
  margin: 50px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 {
  background-color: lightblue;
}

.c8 {
  margin: 0px;
  padding: 10px;
}

.c7 {
  font-weight: 400;
}

.c6 {
  margin: 8px;
  border-radius: 2px;
  background-color: #FFF;
  box-shadow: 0 2px 8px 0 rgba(18,52,102,0.2),0 0 0 1px rgba(18,52,102,0.15);
}

.c3 .popper-arrow {
  height: 0;
  width: 0;
  border-style: solid;
  position: absolute;
}

.c3 .popper[data-placement^='right'] .popper-arrow {
  border-width: 5px 5px 5px 0;
  border-color: transparent #000 transparent transparent;
}

.c3 .popper[data-placement^='top'] .popper-arrow {
  border-width: 5px 5px 0 5px;
  border-color: #000 transparent transparent transparent;
  bottom: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.c3 .popper[data-placement^='left'] .popper-arrow {
  border-width: 5px 0 5px 5px;
  border-color: transparent transparent transparent #000;
  right: 0;
  margin-left: 0;
  margin-right: 0;
}

.c3 .popper[data-placement^='bottom'] .popper-arrow {
  border-width: 0 5px 5px 5px;
  border-color: transparent transparent #000 transparent;
}

<div
  className="c0"
  is={null}
>
  <div>
    <div
      onClick={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      <div
        bg="lightblue"
        className="c1 c2"
        is={null}
      >
        Click me
      </div>
    </div>
    <div
      className="c3 c4 c5"
      is={null}
    >
      <div
        className="popper"
        data-placement={undefined}
        data-x-out-of-boundaries={undefined}
        style={
          Object {
            "opacity": 0,
            "pointerEvents": "none",
            "position": "absolute",
          }
        }
      >
        <span
          className="popper-arrow"
          style={Object {}}
        />
        <div
          className="c6 c4 c5"
          is={null}
        >
          <p
            className="c7 c8"
            is={null}
          >
            I am a popover... 
            click
             to hide.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio default 1`] = `
.c6 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c5 {
  box-sizing: border-box;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c0 {
  background-color: white;
}

.c8 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c4 {
  margin-bottom: 4px;
  width: 100%;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c9 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c9:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c9:checked ~ span {
  color: #1C2534;
}

.c9:checked:hover {
  background: radial-gradient(circle at center,#12AED3 0,#12AED3 35%,transparent 40%);
}

.c9:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c9:checked:disabled,
.c9:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c9:disabled,
.c9:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c9:disabled ~ span,
.c9:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c9:hover,
.c9:focus,
.c9:active {
  border-color: #8D9BA7;
}

.c9.error {
  border-color: #C00316;
}

.c9.error:checked,
.c9.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c7 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c5 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c4 {
    width: 33.33333333333333%;
  }
}

<div
  bg="white"
  className="c0 c1 c2"
  is={null}
>
  <label
    className="c3 c4"
    is={null}
  >
    Label
  </label>
  <div
    className="c5"
    is={null}
  >
    <div
      className="c6"
      is={null}
    >
      <label
        className="c7 c3 c8"
        is={null}
      >
        <input
          className="c9"
          label="Option 1"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Option 1
        </span>
      </label>
      <label
        className="c7 c3 c8"
        is={null}
      >
        <input
          className="c9"
          label="Option 2"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Option 2
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio default value 1`] = `
.c6 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c5 {
  box-sizing: border-box;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c0 {
  background-color: white;
}

.c8 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c4 {
  margin-bottom: 4px;
  width: 100%;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c9 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c9:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c9:checked ~ span {
  color: #1C2534;
}

.c9:checked:hover {
  background: radial-gradient(circle at center,#12AED3 0,#12AED3 35%,transparent 40%);
}

.c9:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c9:checked:disabled,
.c9:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c9:disabled,
.c9:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c9:disabled ~ span,
.c9:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c9:hover,
.c9:focus,
.c9:active {
  border-color: #8D9BA7;
}

.c9.error {
  border-color: #C00316;
}

.c9.error:checked,
.c9.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c7 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c5 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c4 {
    width: 33.33333333333333%;
  }
}

<div
  bg="white"
  className="c0 c1 c2"
  is={null}
>
  <label
    className="c3 c4"
    is={null}
  >
    Label
  </label>
  <div
    className="c5"
    is={null}
  >
    <div
      className="c6"
      is={null}
    >
      <label
        className="c7 c3 c8"
        is={null}
      >
        <input
          className="c9"
          label="Option 1"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Option 1
        </span>
      </label>
      <label
        className="c7 c3 c8"
        defaultChecked={true}
        is={null}
      >
        <input
          className="c9"
          defaultChecked={true}
          label="Option 2 (default)"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Option 2 (default)
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio disabled 1`] = `
.c6 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c5 {
  box-sizing: border-box;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c0 {
  background-color: white;
}

.c8 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c4 {
  margin-bottom: 4px;
  width: 100%;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c9 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c9:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c9:checked ~ span {
  color: #1C2534;
}

.c9:checked:hover {
  background: radial-gradient(circle at center,#12AED3 0,#12AED3 35%,transparent 40%);
}

.c9:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c9:checked:disabled,
.c9:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c9:disabled,
.c9:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c9:disabled ~ span,
.c9:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c9:hover,
.c9:focus,
.c9:active {
  border-color: #8D9BA7;
}

.c9.error {
  border-color: #C00316;
}

.c9.error:checked,
.c9.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c7 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c5 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c4 {
    width: 33.33333333333333%;
  }
}

<div
  bg="white"
  className="c0 c1 c2"
  is={null}
>
  <label
    className="c3 c4"
    is={null}
  >
    Label
  </label>
  <div
    className="c5"
    is={null}
  >
    <div
      className="c6"
      is={null}
    >
      <label
        className="c7 c3 c8"
        disabled={true}
        is={null}
      >
        <input
          className="c9"
          disabled={true}
          label="Disabled"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Disabled
        </span>
      </label>
      <label
        className="c7 c3 c8"
        is={null}
      >
        <input
          className="c9"
          label="Okay"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Okay
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio error 1`] = `
.c6 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c5 {
  box-sizing: border-box;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c0 {
  background-color: white;
}

.c8 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c4 {
  margin-bottom: 4px;
  width: 100%;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c9 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c9:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c9:checked ~ span {
  color: #1C2534;
}

.c9:checked:hover {
  background: radial-gradient(circle at center,#12AED3 0,#12AED3 35%,transparent 40%);
}

.c9:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c9:checked:disabled,
.c9:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c9:disabled,
.c9:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c9:disabled ~ span,
.c9:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c9:hover,
.c9:focus,
.c9:active {
  border-color: #8D9BA7;
}

.c9.error {
  border-color: #C00316;
}

.c9.error:checked,
.c9.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c7 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c5 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c4 {
    width: 33.33333333333333%;
  }
}

<div
  bg="white"
  className="c0 c1 c2"
  is={null}
>
  <label
    className="c3 c4"
    is={null}
  >
    Label
  </label>
  <div
    className="c5"
    is={null}
  >
    <div
      className="c6"
      is={null}
    >
      <label
        className="error c7 c3 c8"
        is={null}
      >
        <input
          className="error c9"
          label="Error"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Error
        </span>
      </label>
      <label
        className="c7 c3 c8"
        is={null}
      >
        <input
          className="c9"
          label="Okay"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Okay
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio handles events 1`] = `
.c6 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c5 {
  box-sizing: border-box;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c0 {
  background-color: white;
}

.c8 {
  margin-bottom: 4px;
  font-size: 14px;
}

.c4 {
  margin-bottom: 4px;
  width: 100%;
  font-size: 14px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c9 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c9:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c9:checked ~ span {
  color: #1C2534;
}

.c9:checked:hover {
  background: radial-gradient(circle at center,#12AED3 0,#12AED3 35%,transparent 40%);
}

.c9:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c9:checked:disabled,
.c9:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c9:disabled,
.c9:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c9:disabled ~ span,
.c9:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c9:hover,
.c9:focus,
.c9:active {
  border-color: #8D9BA7;
}

.c9.error {
  border-color: #C00316;
}

.c9.error:checked,
.c9.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c7 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c5 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c4 {
    width: 33.33333333333333%;
  }
}

<div
  bg="white"
  className="c0 c1 c2"
  is={null}
>
  <label
    className="c3 c4"
    is={null}
  >
    Label
  </label>
  <div
    className="c5"
    is={null}
  >
    <div
      className="c6"
      is={null}
    >
      <label
        className="c7 c3 c8"
        is={null}
        onKeyUp={[Function]}
      >
        <input
          className="c9"
          label="Option 1"
          name="option"
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          type="radio"
          value="one"
        />
         
        <span>
          Option 1
        </span>
      </label>
      <label
        className="c7 c3 c8"
        is={null}
        onKeyUp={[Function]}
      >
        <input
          className="c9"
          label="Option 2"
          name="option"
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          type="radio"
          value="two"
        />
         
        <span>
          Option 2
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio supports rebass 1`] = `
.c6 {
  box-sizing: border-box;
}

.c2 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c5 {
  box-sizing: border-box;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: start;
}

.c0 {
  background-color: white;
}

.c4 {
  margin-bottom: 4px;
  width: 100%;
  font-size: 14px;
}

.c8 {
  margin-bottom: 20px;
  margin-top: 20px;
  font-size: 14px;
}

.c10 {
  margin-bottom: 4px;
  font-size: 24px;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c9 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c9 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c9:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c9:checked ~ span {
  color: #1C2534;
}

.c9:checked:hover {
  background: radial-gradient(circle at center,#12AED3 0,#12AED3 35%,transparent 40%);
}

.c9:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c9:checked:disabled,
.c9:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c9:disabled,
.c9:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c9:disabled ~ span,
.c9:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c9:hover,
.c9:focus,
.c9:active {
  border-color: #8D9BA7;
}

.c9.error {
  border-color: #C00316;
}

.c9.error:checked,
.c9.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c7 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c5 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c4 {
    width: 33.33333333333333%;
  }
}

<div
  bg="white"
  className="c0 c1 c2"
  is={null}
>
  <label
    className="c3 c4"
    is={null}
  >
    Label
  </label>
  <div
    className="c5"
    is={null}
  >
    <div
      className="c6"
      is={null}
    >
      <label
        className="c7 c3 c8"
        is={null}
      >
        <input
          className="c9"
          label="Option 1 (margin)"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Option 1 (margin)
        </span>
      </label>
      <label
        className="c7 c3 c10"
        is={null}
      >
        <input
          className="c9"
          label="Option 2 (font)"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Option 2 (font)
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select autoFocus 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select c3 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-14--value"
        >
          <div
            className="Select-placeholder"
          >
            Select...
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-14--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select default 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select c3 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-6--value"
        >
          <div
            className="Select-placeholder"
          >
            Select...
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-6--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select default value 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select c3 Select--single is-clearable is-searchable has-value"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-12--value"
        >
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-12--value-item"
              role="option"
            >
              No
            </span>
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-12--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          aria-label="Clear value"
          className="Select-clear-zone"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          title="Clear value"
        >
          <span
            className="Select-clear"
            dangerouslySetInnerHTML={
              Object {
                "__html": "&times;",
              }
            }
          />
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select disabled 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select c3 Select--single is-clearable is-disabled is-searchable has-value"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-13--value"
        >
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-13--value-item"
              role="option"
            >
              Yes
            </span>
          </div>
          <div
            aria-activedescendant="react-select-13--value"
            aria-expanded={false}
            aria-owns=""
            aria-readonly="true"
            className="Select-input"
            onBlur={[Function]}
            onFocus={[Function]}
            role="combobox"
            style={
              Object {
                "border": 0,
                "display": "inline-block",
                "width": 1,
              }
            }
            tabIndex={0}
          />
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select error 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select error c3 Select--single is-clearable is-searchable has-value"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-16--value"
        >
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-16--value-item"
              role="option"
            >
              No
            </span>
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-16--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          aria-label="Clear value"
          className="Select-clear-zone"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          title="Clear value"
        >
          <span
            className="Select-clear"
            dangerouslySetInnerHTML={
              Object {
                "__html": "&times;",
              }
            }
          />
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select fires events 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select c3 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-17--value"
        >
          <div
            className="Select-placeholder"
          >
            Try interacting
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-17--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select multi 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select c3 Select--multi is-clearable is-searchable has-value"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-15--value"
        >
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-hidden="true"
              className="Select-value-icon"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              ×
            </span>
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-15--value-0"
              role="option"
            >
              Yes
              <span
                className="Select-aria-only"
              >
                 
              </span>
            </span>
          </div>
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-hidden="true"
              className="Select-value-icon"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              ×
            </span>
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-15--value-1"
              role="option"
            >
              Maybe
              <span
                className="Select-aria-only"
              >
                 
              </span>
            </span>
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-15--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          aria-label="Clear all"
          className="Select-clear-zone"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          title="Clear all"
        >
          <span
            className="Select-clear"
            dangerouslySetInnerHTML={
              Object {
                "__html": "&times;",
              }
            }
          />
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select placeholder 1`] = `
.c2 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select c3 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-7--value"
        >
          <div
            className="Select-placeholder"
          >
            Placeholder
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-7--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select rebass props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c2 {
  box-sizing: border-box;
  margin-top: 50px;
  margin-bottom: 50px;
}

.c0 {
  background-color: white;
}

.c3 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c3 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3 .Select-control::placeholder {
  color: #8D9BA7;
}

.c3 .Select-control:hover,
.c3 .Select-control:active {
  border-color: #B4BDC5;
}

.c3 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c3 .Select-control.error {
  border-color: #C00316;
}

.c3 .Select-control:hover {
  box-shadow: none;
}

.c3 .Select-input {
  padding: 0;
}

.c3 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c3.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c3.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c3.error > .Select-control {
  border-color: #C00316 !important;
}

.c3 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c3 .Select-placeholder,
.c3.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c3 .Select-value-label {
  font-weight: normal;
}

.c3 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c3 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c3 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c3.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c3.Select--multi .Select-value-icon:hover,
.c3.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c3.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2"
    is={null}
  >
    <div
      className="Select c3 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-8--value"
        >
          <div
            className="Select-placeholder"
          >
            Placeholder
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-8--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select sizes 1`] = `
.c3 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c4 {
  box-sizing: border-box;
  width: 33.33333333333333%;
}

.c5 {
  box-sizing: border-box;
  width: 66.66666666666666%;
  margin-bottom: 4px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  background-color: white;
}

.c7 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c7 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c7 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c7 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c7 .Select-control::placeholder {
  color: #8D9BA7;
}

.c7 .Select-control:hover,
.c7 .Select-control:active {
  border-color: #B4BDC5;
}

.c7 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c7 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c7 .Select-control.error {
  border-color: #C00316;
}

.c7 .Select-control:hover {
  box-shadow: none;
}

.c7 .Select-input {
  padding: 0;
}

.c7 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c7.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c7.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c7.error > .Select-control {
  border-color: #C00316 !important;
}

.c7 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c7 .Select-placeholder,
.c7.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c7 .Select-value-label {
  font-weight: normal;
}

.c7 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c7 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c7 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c7.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c7.Select--multi .Select-value-icon:hover,
.c7.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c7.Select--multi .Select-value:first-child {
  margin-left: 0;
}

.c6 .Select-control {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 48px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c6 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c6 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c6 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c6 .Select-control::placeholder {
  color: #8D9BA7;
}

.c6 .Select-control:hover,
.c6 .Select-control:active {
  border-color: #B4BDC5;
}

.c6 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c6 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c6 .Select-control.error {
  border-color: #C00316;
}

.c6 .Select-control:hover {
  box-shadow: none;
}

.c6 .Select-input {
  padding: 0;
}

.c6 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c6.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c6.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c6.error > .Select-control {
  border-color: #C00316 !important;
}

.c6 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
}

.c6 .Select-placeholder,
.c6 .Select-input > input {
  padding: 0;
  line-height: 2.9;
}

.c6 .Select-placeholder,
.c6.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c6 .Select-value-label {
  font-weight: normal;
}

.c6 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c6 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c6 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 16px;
}

.c6.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c6.Select--multi .Select-value-icon:hover,
.c6.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c6.Select--multi .Select-value:first-child {
  margin-left: 0;
}

.c8 .Select-control {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  padding-right: 0;
  height: 32px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c8 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c8 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c8 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c8 .Select-control::placeholder {
  color: #8D9BA7;
}

.c8 .Select-control:hover,
.c8 .Select-control:active {
  border-color: #B4BDC5;
}

.c8 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c8 .Select-control:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c8 .Select-control.error {
  border-color: #C00316;
}

.c8 .Select-control:hover {
  box-shadow: none;
}

.c8 .Select-input {
  padding: 0;
}

.c8 .Select-placeholder + .Select-input {
  margin-left: 0;
}

.c8.Select.is-disabled > .Select-control {
  border-color: #F1F7F9 !important;
  background-color: #F1F7F9 !important;
}

.c8.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c8.error > .Select-control {
  border-color: #C00316 !important;
}

.c8 .Select-placeholder {
  padding-left: 8px;
  color: #8D9BA7;
  font-weight: normal;
}

.c8 .Select-placeholder,
.c8.Select--single > .Select-control .Select-value {
  padding-left: 8px;
}

.c8 .Select-value-label {
  font-weight: normal;
}

.c8 .Select-option {
  padding-left: 8px;
  border-radius: 0;
}

.c8 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c8 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 12px;
}

.c8.Select--multi .Select-value {
  padding-left: 0;
  color: #12AED3;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c8.Select--multi .Select-value-icon:hover,
.c8.Select--multi .Select-value-icon:focus {
  color: #12AED3;
  background-color: #8BDDDF;
}

.c8.Select--multi .Select-value:first-child {
  margin-left: 0;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c4"
      is={null}
    >
      Large
    </div>
    <div
      className="c5"
      is={null}
    >
      <div
        className="c3"
        is={null}
      >
        <div
          className="Select c6 Select--single is-clearable is-searchable"
          style={undefined}
        >
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={undefined}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-9--value"
            >
              <div
                className="Select-placeholder"
              >
                Placeholder
              </div>
              <div
                className="Select-input"
                style={
                  Object {
                    "display": "inline-block",
                  }
                }
              >
                <style
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "input#undefined::-ms-clear {display: none;}",
                    }
                  }
                />
                <input
                  aria-activedescendant="react-select-9--value"
                  aria-describedby={undefined}
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-label={undefined}
                  aria-labelledby={undefined}
                  aria-owns=""
                  className={undefined}
                  id={undefined}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  style={
                    Object {
                      "boxSizing": "content-box",
                      "width": "5px",
                    }
                  }
                  tabIndex={undefined}
                  value=""
                />
                <div
                  style={
                    Object {
                      "height": 0,
                      "left": 0,
                      "overflow": "scroll",
                      "position": "absolute",
                      "top": 0,
                      "visibility": "hidden",
                      "whiteSpace": "pre",
                    }
                  }
                >
                  
                </div>
              </div>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c4"
      is={null}
    >
      Medium
    </div>
    <div
      className="c5"
      is={null}
    >
      <div
        className="c3"
        is={null}
      >
        <div
          className="Select c7 Select--single is-clearable is-searchable"
          style={undefined}
        >
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={undefined}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-10--value"
            >
              <div
                className="Select-placeholder"
              >
                Placeholder
              </div>
              <div
                className="Select-input"
                style={
                  Object {
                    "display": "inline-block",
                  }
                }
              >
                <style
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "input#undefined::-ms-clear {display: none;}",
                    }
                  }
                />
                <input
                  aria-activedescendant="react-select-10--value"
                  aria-describedby={undefined}
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-label={undefined}
                  aria-labelledby={undefined}
                  aria-owns=""
                  className={undefined}
                  id={undefined}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  style={
                    Object {
                      "boxSizing": "content-box",
                      "width": "5px",
                    }
                  }
                  tabIndex={undefined}
                  value=""
                />
                <div
                  style={
                    Object {
                      "height": 0,
                      "left": 0,
                      "overflow": "scroll",
                      "position": "absolute",
                      "top": 0,
                      "visibility": "hidden",
                      "whiteSpace": "pre",
                    }
                  }
                >
                  
                </div>
              </div>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c4"
      is={null}
    >
      Small
    </div>
    <div
      className="c5"
      is={null}
    >
      <div
        className="c3"
        is={null}
      >
        <div
          className="Select c8 Select--single is-clearable is-searchable"
          style={undefined}
        >
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={undefined}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-11--value"
            >
              <div
                className="Select-placeholder"
              >
                Placeholder
              </div>
              <div
                className="Select-input"
                style={
                  Object {
                    "display": "inline-block",
                  }
                }
              >
                <style
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "input#undefined::-ms-clear {display: none;}",
                    }
                  }
                />
                <input
                  aria-activedescendant="react-select-11--value"
                  aria-describedby={undefined}
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-label={undefined}
                  aria-labelledby={undefined}
                  aria-owns=""
                  className={undefined}
                  id={undefined}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  style={
                    Object {
                      "boxSizing": "content-box",
                      "width": "5px",
                    }
                  }
                  tabIndex={undefined}
                  value=""
                />
                <div
                  style={
                    Object {
                      "height": 0,
                      "left": 0,
                      "overflow": "scroll",
                      "position": "absolute",
                      "top": 0,
                      "visibility": "hidden",
                      "whiteSpace": "pre",
                    }
                  }
                >
                  
                </div>
              </div>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Textarea default 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    is={null}
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea default value 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    defaultValue="Default"
    is={null}
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea disabled 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    defaultValue="Cannot be edited, focused or submitted"
    disabled={true}
    is={null}
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea error 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="error c2 c3 c4"
    defaultValue="Invalid input"
    is={null}
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea fires events 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    defaultValue="Try interacting"
    is={null}
    onBlur={[Function]}
    onChange={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea maxLength 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    defaultValue="Max 12 chars"
    is={null}
    maxLength={12}
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea placeholder 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    is={null}
    placeholder="Placeholder"
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea readOnly 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    defaultValue="Cannot be edited, but can be focused and submitted"
    is={null}
    readOnly={true}
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea rebass props 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  margin-top: 50px;
  margin-bottom: 50px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    is={null}
    placeholder="Placeholder"
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea resize 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: none;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    defaultValue="Cannot be resized by dragging corner"
    is={null}
    resize="none"
    rows={2}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea rows 1`] = `
.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c0 {
  background-color: white;
}

.c4 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c3 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c3:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c3:disabled {
  opacity: 0.25;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c2.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <textarea
    className="c2 c3 c4"
    defaultValue="1
2
3
4"
    is={null}
    rows={4}
    s="medium"
  />
</div>
`;

exports[`Storyshots Textarea sizes 1`] = `
.c3 {
  box-sizing: border-box;
}

.c1 {
  box-sizing: border-box;
  width: 100%;
  padding: 20px;
}

.c4 {
  box-sizing: border-box;
  width: 33.33333333333333%;
}

.c5 {
  box-sizing: border-box;
  width: 66.66666666666666%;
  margin-bottom: 4px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  background-color: white;
}

.c8 {
  margin: 0px;
  padding: 4px;
  width: 100%;
  color: inherit;
  background-color: transparent;
}

.c7 {
  font-family: inherit;
  font-size: inherit;
  border: 0;
  box-shadow: inset 0 0 0 1px gray2;
  border-radius: 2px;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c7:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c7:disabled {
  opacity: 0.25;
}

.c9 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c9::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c9::-moz-placeholder {
  color: #8D9BA7;
}

.c9:-ms-input-placeholder {
  color: #8D9BA7;
}

.c9::placeholder {
  color: #8D9BA7;
}

.c9:hover,
.c9:active {
  border-color: #B4BDC5;
}

.c9:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c9:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c9.error {
  border-color: #C00316;
}

.c6 {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c6::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c6::-moz-placeholder {
  color: #8D9BA7;
}

.c6:-ms-input-placeholder {
  color: #8D9BA7;
}

.c6::placeholder {
  color: #8D9BA7;
}

.c6:hover,
.c6:active {
  border-color: #B4BDC5;
}

.c6:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c6:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c6.error {
  border-color: #C00316;
}

.c10 {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c10::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c10::-moz-placeholder {
  color: #8D9BA7;
}

.c10:-ms-input-placeholder {
  color: #8D9BA7;
}

.c10::placeholder {
  color: #8D9BA7;
}

.c10:hover,
.c10:active {
  border-color: #B4BDC5;
}

.c10:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c10:disabled {
  background-color: #F1F7F9;
  border-color: #F1F7F9;
}

.c10.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 50%;
  }
}

<div
  bg="white"
  className="c0 c1"
  is={null}
>
  <div
    className="c2 c3"
    is={null}
  >
    <div
      className="c4"
      is={null}
    >
      Large
    </div>
    <div
      className="c5"
      is={null}
    >
      <textarea
        className="c6 c7 c8"
        is={null}
        placeholder="Placeholder"
        rows={2}
        s="large"
      />
    </div>
    <div
      className="c4"
      is={null}
    >
      Medium
    </div>
    <div
      className="c5"
      is={null}
    >
      <textarea
        className="c9 c7 c8"
        is={null}
        placeholder="Placeholder"
        rows={2}
        s="medium"
      />
    </div>
    <div
      className="c4"
      is={null}
    >
      Small
    </div>
    <div
      className="c5"
      is={null}
    >
      <textarea
        className="c10 c7 c8"
        is={null}
        placeholder="Placeholder"
        rows={2}
        s="small"
      />
    </div>
  </div>
</div>
`;
