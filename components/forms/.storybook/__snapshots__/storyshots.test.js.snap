// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots Avatar preserves aspect ratio 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 {
  margin-bottom: 8px;
  display: block;
  max-width: 100%;
  height: auto;
}

.c3 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c4 {
  box-sizing: border-box;
  width: 64px;
  height: 64px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c5 {
  box-sizing: border-box;
  width: 48px;
  height: 48px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 66.66666666666666%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <img
      className="c2 "
      src="https://placeimg.com/300/100/people"
    />
    <img
      alt={null}
      className="c3 c2 "
      disabled={false}
      src="https://placeimg.com/300/100/people"
      title={null}
    />
    <img
      alt={null}
      className="c4 c2 "
      disabled={false}
      src="https://placeimg.com/300/100/people"
      title={null}
    />
    <img
      alt={null}
      className="c5 c2 "
      disabled={false}
      src="https://placeimg.com/300/100/people"
      title={null}
    />
  </div>
</div>
`;

exports[`Storyshots Avatar sizes 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c5 {
  margin-top: 8px;
  margin-bottom: 8px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c2 {
  margin-right: 8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: space-around;
  -webkit-justify-content: space-around;
  -ms-flex-pack: space-around;
  justify-content: space-around;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c7 {
  display: block;
  max-width: 100%;
  height: auto;
}

.c4 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 24px;
  text-align: center;
  padding-top: 24px;
}

.c9 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 19px;
  text-align: center;
  padding-top: 18px;
}

.c12 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 16px;
  text-align: center;
  padding-top: 12px;
}

.c15 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 14px;
  text-align: center;
  padding-top: 10px;
}

.c18 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 12px;
  text-align: center;
  padding-top: 8px;
}

.c21 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 12px;
  text-align: center;
  padding-top: 4px;
}

.c6 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c10 {
  box-sizing: border-box;
  width: 64px;
  height: 64px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c13 {
  box-sizing: border-box;
  width: 48px;
  height: 48px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c16 {
  box-sizing: border-box;
  width: 40px;
  height: 40px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c19 {
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c22 {
  box-sizing: border-box;
  width: 24px;
  height: 24px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c3 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #303162;
  opacity: 1;
  object-fit: cover;
}

.c8 {
  box-sizing: border-box;
  width: 64px;
  height: 64px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #155457;
  opacity: 1;
  object-fit: cover;
}

.c11 {
  box-sizing: border-box;
  width: 48px;
  height: 48px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #446384;
  opacity: 1;
  object-fit: cover;
}

.c14 {
  box-sizing: border-box;
  width: 40px;
  height: 40px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #3998AA;
  opacity: 1;
  object-fit: cover;
}

.c17 {
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #1E7C7F;
  opacity: 1;
  object-fit: cover;
}

.c20 {
  box-sizing: border-box;
  width: 24px;
  height: 24px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #26A5A8;
  opacity: 1;
  object-fit: cover;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 66.66666666666666%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      <div
        className=""
      >
        <div
          className="c3 "
          disabled={false}
        >
          <span
            className="c4 "
            s="xxlarge"
            title="Nname Rname"
          >
            NR
          </span>
        </div>
      </div>
      <div
        className="c5 "
      >
        XXL
      </div>
      <div
        className=""
      >
        <img
          alt="Nname Rname's picture"
          className="c6 c7 "
          disabled={false}
          src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
          title="Nname Rname's picture"
        />
      </div>
    </div>
    <div
      className="c2 "
    >
      <div
        className=""
      >
        <div
          className="c8 "
          disabled={false}
        >
          <span
            className="c9 "
            s="xlarge"
            title="Mname Rname"
          >
            MR
          </span>
        </div>
      </div>
      <div
        className="c5 "
      >
        XL
      </div>
      <div
        className=""
      >
        <img
          alt="Mname Rname's picture"
          className="c10 c7 "
          disabled={false}
          src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
          title="Mname Rname's picture"
        />
      </div>
    </div>
    <div
      className="c2 "
    >
      <div
        className=""
      >
        <div
          className="c11 "
          disabled={false}
        >
          <span
            className="c12 "
            s="large"
            title="Tname Fname"
          >
            TF
          </span>
        </div>
      </div>
      <div
        className="c5 "
      >
        L
      </div>
      <div
        className=""
      >
        <img
          alt="Tname Rname's picture"
          className="c13 c7 "
          disabled={false}
          src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
          title="Tname Rname's picture"
        />
      </div>
    </div>
    <div
      className="c2 "
    >
      <div
        className=""
      >
        <div
          className="c14 "
          disabled={false}
        >
          <span
            className="c15 "
            s="medium"
            title="Mname Wname"
          >
            MW
          </span>
        </div>
      </div>
      <div
        className="c5 "
      >
        M
      </div>
      <div
        className=""
      >
        <img
          alt="Mname Rname's picture"
          className="c16 c7 "
          disabled={false}
          src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
          title="Mname Rname's picture"
        />
      </div>
    </div>
    <div
      className="c2 "
    >
      <div
        className=""
      >
        <div
          className="c17 "
          disabled={false}
        >
          <span
            className="c18 "
            s="small"
            title="Kname Sname"
          >
            KS
          </span>
        </div>
      </div>
      <div
        className="c5 "
      >
        S
      </div>
      <div
        className=""
      >
        <img
          alt="Kname Rname's picture"
          className="c19 c7 "
          disabled={false}
          src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
          title="Kname Rname's picture"
        />
      </div>
    </div>
    <div
      className="c2 "
    >
      <div
        className=""
      >
        <div
          className="c20 "
          disabled={false}
        >
          <span
            className="c21 "
            s="xsmall"
            title="Jname Sname"
          >
            JS
          </span>
        </div>
      </div>
      <div
        className="c5 "
      >
        XS
      </div>
      <div
        className=""
      >
        <img
          alt="Jname Rname's picture"
          className="c22 c7 "
          disabled={false}
          src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
          title="Jname Rname's picture"
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Avatar states 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  margin-right: 8px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c7 {
  display: block;
  max-width: 100%;
  height: auto;
}

.c4 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 24px;
  text-align: center;
  padding-top: 24px;
}

.c6 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c8 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 0.5;
  object-fit: cover;
}

.c3 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #303162;
  opacity: 1;
  object-fit: cover;
}

.c5 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #303162;
  opacity: 0.5;
  object-fit: cover;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 66.66666666666666%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      <div
        className="c3 "
        disabled={false}
      >
        <span
          className="c4 "
          s="xxlarge"
          title="Nname Rname"
        >
          NR
        </span>
      </div>
    </div>
    <div
      className="c2 "
    >
      <div
        className="c5 "
        disabled={true}
      >
        <span
          className="c4 "
          s="xxlarge"
          title="Nname Rname"
        >
          NR
        </span>
      </div>
    </div>
    <div
      className="c2 "
    >
      <img
        alt="Nname Rname's picture"
        className="c6 c7 "
        disabled={false}
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="Nname Rname's picture"
      />
    </div>
    <div
      className="c2 "
    >
      <img
        alt="Nname Rname's picture"
        className="c8 c7 "
        disabled={true}
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="Nname Rname's picture"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Avatar util props 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c3 {
  margin: 16px;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c6 {
  margin: 16px;
  display: block;
  max-width: 100%;
  height: auto;
}

.c4 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 24px;
  text-align: center;
  padding-top: 24px;
}

.c5 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

.c2 {
  box-sizing: border-box;
  width: 80px;
  height: 80px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #1E7C7F;
  opacity: 1;
  object-fit: cover;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 66.66666666666666%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 c3 "
      disabled={false}
    >
      <span
        className="c4 "
        s="xxlarge"
        title="John Doe"
      >
        JD
      </span>
    </div>
    <img
      alt={null}
      className="c5 c6 "
      disabled={false}
      src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
      title={null}
    />
  </div>
</div>
`;

exports[`Storyshots Button Button Sizes 1`] = `
.c1 {
  margin-bottom: 5px;
  width: 80%;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c9 {
  margin-right: 0px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c9::before {
  content: '\\f158';
}

.c3 {
  background-color: #D6DEE9;
  color: #53616E;
  margin: 8px;
}

.c6 {
  background-color: #FF5745;
  color: #FFF;
  margin: 8px;
}

.c8 {
  background-color: transparent;
  color: #8D9BA7;
  margin: 8px;
}

.c4 {
  visibility: visible;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c2:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c2:focus:not(:disabled),
.c2:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c2:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c5:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c5:focus:not(:disabled),
.c5:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c5:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c5:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c7 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.26;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 19px;
  padding: 12px 12px;
}

.c7:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c7:focus:not(:disabled),
.c7:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c7:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c7:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c10 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c10:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c10:focus:not(:disabled),
.c10:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c10:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c10:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c11:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c11:focus:not(:disabled),
.c11:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c11:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c11:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c12 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c12:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c12:focus:not(:disabled),
.c12:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c12:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c12:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c13 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 32px;
  min-width: 32px;
  font-size: 12px;
  padding: 6px 12px;
}

.c13:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c13:focus:not(:disabled),
.c13:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c13:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c13:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c14 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 32px;
  min-width: 32px;
  font-size: 12px;
  padding: 6px 12px;
}

.c14:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c14:focus:not(:disabled),
.c14:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c14:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c14:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c15 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.14;
  text-align: center;
  height: 32px;
  min-width: 32px;
  font-size: 14px;
  padding: 8px 8px;
}

.c15:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c15:focus:not(:disabled),
.c15:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c15:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c15:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c16 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 24px;
  min-width: 24px;
  font-size: 12px;
  padding: 4px 8px;
}

.c16:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c16:focus:not(:disabled),
.c16:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c16:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c16:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c17 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 24px;
  min-width: 24px;
  font-size: 12px;
  padding: 4px 8px;
}

.c17:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c17:focus:not(:disabled),
.c17:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c17:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c17:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c18 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.33;
  text-align: center;
  height: 24px;
  min-width: 24px;
  font-size: 12px;
  padding: 4px 4px;
}

.c18:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c18:focus:not(:disabled),
.c18:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c18:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c18:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className=""
    >
      Large
    </div>
    <button
      className="c2 c3 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Standard Large
      </div>
    </button>
    <button
      className="c5 c6 "
      disabled={false}
      mode="primary"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Primary Large
      </div>
    </button>
    <button
      className="c7 c8 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Transparent Large
      </div>
    </button>
    <button
      className="c7 c8 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        <i
          className="c9 "
        />
      </div>
    </button>
  </div>
  <div
    className="c1 "
  >
    <div
      className=""
    >
      Medium (Default Size)
    </div>
    <button
      className="c10 c3 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Standard Medium
      </div>
    </button>
    <button
      className="c11 c6 "
      disabled={false}
      mode="primary"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Primary Medium
      </div>
    </button>
    <button
      className="c12 c8 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Transparent Medium
      </div>
    </button>
    <button
      className="c12 c8 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        <i
          className="c9 "
        />
      </div>
    </button>
  </div>
  <div
    className="c1 "
  >
    <div
      className=""
    >
      Small
    </div>
    <button
      className="c13 c3 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Standard Small
      </div>
    </button>
    <button
      className="c14 c6 "
      disabled={false}
      mode="primary"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Primary Small
      </div>
    </button>
    <button
      className="c15 c8 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Transparent Small
      </div>
    </button>
    <button
      className="c15 c8 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        <i
          className="c9 "
        />
      </div>
    </button>
  </div>
  <div
    className="c1 "
  >
    <div
      className=""
    >
      XSmall
    </div>
    <button
      className="c16 c3 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Standard XSmall
      </div>
    </button>
    <button
      className="c17 c6 "
      disabled={false}
      mode="primary"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Primary XSmall
      </div>
    </button>
    <button
      className="c18 c8 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        Transparent XSmall
      </div>
    </button>
    <button
      className="c18 c8 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        <i
          className="c9 "
        />
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots Button Button modes and states 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  margin-bottom: 4px;
  width: 80%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c10 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c10::before {
  content: '\\f158';
}

.c11 {
  margin-right: 0px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c11::before {
  content: '\\f158';
}

.c4 {
  background-color: #D6DEE9;
  color: #53616E;
  margin: 8px;
}

.c7 {
  background-color: #FF5745;
  color: #FFF;
  margin: 8px;
}

.c9 {
  background-color: transparent;
  color: #8D9BA7;
  margin: 8px;
}

.c5 {
  visibility: visible;
}

.c3 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c3:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c3:focus:not(:disabled),
.c3:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c3:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c6:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c6:focus:not(:disabled),
.c6:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c6:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c6:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.26;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 19px;
  padding: 12px 12px;
}

.c8:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c8:focus:not(:disabled),
.c8:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c8:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c8:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

@media screen and (min-width:32em) {
  .c0 {
    width: 66.66666666666666%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      <p>
        Standard Button Mode (Default)
      </p>
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c5 "
        >
          Button Large
        </div>
      </button>
      <button
        className="c3 c4 "
        disabled={true}
        mode="normal"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c5 "
        >
          Can't touch this
        </div>
      </button>
    </div>
    <div
      className="c2 "
    >
      <p>
        Primary Button Mode
      </p>
      <button
        className="c6 c7 "
        disabled={false}
        mode="primary"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c5 "
        >
          Button Large
        </div>
      </button>
      <button
        className="c6 c7 "
        disabled={true}
        mode="primary"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c5 "
        >
          Can't touch this
        </div>
      </button>
    </div>
    <div
      className="c2 "
    >
      <p>
        Transparent Button Mode
      </p>
      <button
        className="c8 c9 "
        disabled={false}
        mode="transparent"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c5 "
        >
          Button Large
        </div>
      </button>
      <button
        className="c8 c9 "
        disabled={true}
        mode="transparent"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c5 "
        >
          Can't touch this
        </div>
      </button>
    </div>
    <div
      className="c2 "
    >
      <p>
        IconButton
      </p>
      <button
        className="c8 c9 "
        disabled={false}
        mode="transparent"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c5 "
        >
          <i
            className="c10 "
          />
          Edit
        </div>
      </button>
      <button
        className="c8 c9 "
        disabled={true}
        mode="transparent"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c5 "
        >
          <i
            className="c11 "
          />
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Button Button.Link 1`] = `
.c1 {
  background-color: #D6DEE9;
  color: #53616E;
  margin-right: 16px;
}

.c3 {
  background-color: #FF5745;
  color: #FFF;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c0:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c0:focus:not(:disabled),
.c0:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c0:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c2:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c2:focus:not(:disabled),
.c2:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c2:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div>
  <h1>
    Button.Link
  </h1>
  <p>
    Button.Link is a regular HTML link (&lt;a href="..."&gt;text here&lt;/a&gt;) that looks like a button
  </p>
  <h3>
    Link to URL
  </h3>
  <a
    className="c0 c1"
    href="/some/url"
    mode="normal"
    s="medium"
  >
    Go to some URL (normal)
  </a>
  <a
    className="c2 c3"
    href="/some/url"
    mode="primary"
    s="medium"
  >
    Go to some URL (primary)
  </a>
</div>
`;

exports[`Storyshots Button Button.RouteLink 1`] = `
.c1 {
  background-color: #D6DEE9;
  color: #53616E;
  margin-right: 16px;
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c1:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c1:focus:not(:disabled),
.c1:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c1:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c2 {
  background-color: #FF5745;
  color: #FFF;
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c2:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c2:focus:not(:disabled),
.c2:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c2:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c0 {
  text-decoration: none;
  color: #009BC0;
  cursor: pointer;
}

.c0:link,
.c0:visited {
  color: #009BC0;
}

.c0:hover {
  color: #0081AA;
}

.c0:active {
  color: #144E6F;
}

<div
  className=""
>
  <h1>
    Button.RouteLink
  </h1>
  <p>
    Button.RouteLink uses
     
    <a
      className="c0 "
      href="https://reacttraining.com/react-router/web/api/Link"
      rel="noreferrer noopener "
      target="_blank"
    >
      react-router-dom's Link component
    </a>
     
    but looks like a button
  </p>
  <h3>
    Link to a react-router route
  </h3>
  <a
    className="c1"
    href="#/reviews/foo"
    mode="normal"
    onClick={[Function]}
    s="medium"
  >
    Go to some route (normal)
  </a>
  <a
    className="c2"
    href="#/reviews/bar"
    mode="primary"
    onClick={[Function]}
    s="medium"
  >
    Go to some route (primary)
  </a>
</div>
`;

exports[`Storyshots Button ButtonGroup 1`] = `
.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c7 {
  background-color: #D6DEE9;
  color: #53616E;
}

.c4 {
  background-color: #D6DEE9;
  color: #53616E;
}

.c5 {
  visibility: visible;
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c6:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c6:focus:not(:disabled),
.c6:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c6:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c6:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c3 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c3:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c3:focus:not(:disabled),
.c3:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c3:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c3:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c1 > *:first-child:not(:last-child),
.c1 > *:first-child:not(:last-child) .button-group-child-item {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c1 > *:not(:first-child) {
  border-left: 1px solid #FFF;
}

.c1 > *:not(:first-child):not(:last-child),
.c1 > *:not(:first-child):not(:last-child) .button-group-child-item {
  border-radius: 0;
}

.c1 > *:last-child:not(:first-child),
.c1 > *:last-child:not(:first-child) .button-group-child-item {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c0 {
  display: inline-block;
}

<div>
  <h1>
    ButtonGroups
  </h1>
  <h3>
    One Button
  </h3>
  <div
    className="c0 "
  >
    <div
      className="c1 c2 "
    >
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        type="button"
      >
        <div
          className="c5 "
        >
          Click!
        </div>
      </button>
    </div>
  </div>
  <h3>
    Two Buttons
  </h3>
  <div
    className="c0 "
  >
    <div
      className="c1 c2 "
    >
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        type="button"
      >
        <div
          className="c5 "
        >
          Click!
        </div>
      </button>
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        type="button"
      >
        <div
          className="c5 "
        >
          Click!
        </div>
      </button>
    </div>
  </div>
  <h3>
    Three Buttons
  </h3>
  <div
    className="c0 "
  >
    <div
      className="c1 c2 "
    >
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        type="button"
      >
        <div
          className="c5 "
        >
          Click!
        </div>
      </button>
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        type="button"
      >
        <div
          className="c5 "
        >
          Click!
        </div>
      </button>
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        type="button"
      >
        <div
          className="c5 "
        >
          Click!
        </div>
      </button>
    </div>
  </div>
  <h3>
    Mix of Buttons and Button Links
  </h3>
  <div
    className="c0 "
  >
    <div
      className="c1 c2 "
    >
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        type="button"
      >
        <div
          className="c5 "
        >
          Click!
        </div>
      </button>
      <a
        className="c6 c7"
        mode="normal"
        s="medium"
      >
        Click!
      </a>
      <button
        className="c3 c4 "
        disabled={false}
        mode="normal"
        type="button"
      >
        <div
          className="c5 "
        >
          Click!
        </div>
      </button>
      <a
        className="c6 c7"
        mode="normal"
        s="medium"
      >
        Click!
      </a>
    </div>
  </div>
</div>
`;

exports[`Storyshots Button Dropdown custom target 1`] = `
.c3 {
  color: #FF5745;
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  font-size: 14px;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c3::before {
  content: '\\f197';
}

.c1 {
  background-color: #D6DEE9;
  color: #53616E;
  font-size: 14px;
}

.c2 {
  visibility: visible;
}

.c0 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c0:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c0:focus:not(:disabled),
.c0:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c0:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c0:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div>
  <div>
    <button
      className="button-group-child-item c0 c1 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      target={
        <Button
          disabled={false}
          inProgress={false}
          mode="normal"
          s="medium"
          type="button"
        >
          <I
            color="primary.a"
            iconName="menu"
            mr={2}
            s="small"
          />
           Click me!
        </Button>
      }
      type="button"
    >
      <div
        className="c2 "
      >
        <i
          className="c3 "
        />
         Click me!
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots Button Dropdown default 1`] = `
.c0 {
  padding: 8px;
}

.c2 {
  margin-right: 16px;
}

.c4 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
}

.c10 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  font-size: 14px;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c10::before {
  content: '\\f19b';
}

.c6 {
  background-color: #D6DEE9;
  color: #53616E;
  font-size: 14px;
}

.c9 {
  background-color: #FF5745;
  color: #FFF;
  font-size: 14px;
}

.c12 {
  background-color: transparent;
  color: #8D9BA7;
  font-size: 14px;
  margin-right: 16px;
}

.c7 {
  visibility: visible;
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c5:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c5:focus:not(:disabled),
.c5:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c5:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c5:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c8:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c8:focus:not(:disabled),
.c8:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c8:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c8:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c11:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c11:focus:not(:disabled),
.c11:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c11:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c11:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c3 > *:first-child:not(:last-child),
.c3 > *:first-child:not(:last-child) .button-group-child-item {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}

.c3 > *:not(:first-child) {
  border-left: 1px solid #FFF;
}

.c3 > *:not(:first-child):not(:last-child),
.c3 > *:not(:first-child):not(:last-child) .button-group-child-item {
  border-radius: 0;
}

.c3 > *:last-child:not(:first-child),
.c3 > *:last-child:not(:first-child) .button-group-child-item {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
}

.c1 {
  display: inline-block;
}

<div
  className="c0 "
>
  <h1>
    Button Dropdown
  </h1>
  <div
    className="c1 c2 "
  >
    <div
      className="c3 c4 "
    >
      <button
        className="c5 c6 "
        disabled={false}
        mode="normal"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c7 "
        >
          Main Action
        </div>
      </button>
      <div>
        <div>
          <button
            className="button-group-child-item c8 c9 "
            disabled={false}
            mode="primary"
            onClick={[Function]}
            type="button"
          >
            <div
              className="c7 "
            >
              <i
                className="c10 "
              />
            </div>
          </button>
        </div>
      </div>
    </div>
  </div>
  <div>
    <div>
      <button
        className="button-group-child-item c11 c12 "
        disabled={false}
        mode="transparent"
        onClick={[Function]}
        target={
          <Button
            disabled={false}
            inProgress={false}
            mode="normal"
            s="medium"
            type="button"
          >
            Or click me!
          </Button>
        }
        type="button"
      >
        <div
          className="c7 "
        >
          Or click me!
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Button Dropdown non-button target 1`] = `
.c0 {
  font-size: 14px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  margin-left: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c3::before {
  content: '\\f2f9';
}

.c2 {
  display: block;
  max-width: 100%;
  height: auto;
}

.c1 {
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  opacity: 1;
  object-fit: cover;
}

<div>
  <div>
    <div
      className="button-group-child-item c0 "
      onClick={[Function]}
      style={
        Object {
          "cursor": "pointer",
        }
      }
      target={
        <Flex
          align="center"
          borderColor="grayscale.f"
          style={
            Object {
              "cursor": "pointer",
            }
          }
        >
          <Avatar
            disabled={false}
            firstName="First"
            isSquare={false}
            lastName="Last"
            photoUrl="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
            s="small"
          />
          <I
            iconName="chevron-down"
            ml={2}
          />
        </Flex>
      }
    >
      <img
        alt="First Last's picture"
        className="c1 c2 "
        disabled={false}
        src="http://cdn3-www.dogtime.com/assets/uploads/gallery/30-impossibly-cute-puppies/impossibly-cute-puppy-30.jpg"
        title="First Last's picture"
      />
      <i
        className="c3 "
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Button IconButton 1`] = `
.c1 {
  margin-bottom: 4px;
  width: 80%;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c5 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c5::before {
  content: '\\f158';
}

.c6 {
  margin-right: 0px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f158';
}

.c3 {
  background-color: transparent;
  color: #8D9BA7;
  margin: 8px;
}

.c4 {
  visibility: visible;
}

.c2 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c2:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c2:focus:not(:disabled),
.c2:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c2:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c2:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <p>
      With label
    </p>
    <button
      className="c2 c3 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        <i
          className="c5 "
        />
        Edit
      </div>
    </button>
    <p>
      Without label
    </p>
    <button
      className="c2 c3 "
      disabled={false}
      mode="transparent"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c4 "
      >
        <i
          className="c6 "
        />
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots Button Show progress indicator 1`] = `
.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-start;
  -webkit-box-align: flex-start;
  -ms-flex-align: flex-start;
  align-items: flex-start;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
}

.c2 {
  background-color: #D6DEE9;
  color: #53616E;
  margin-bottom: 16px;
}

.c3 {
  visibility: visible;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 16px;
  padding: 12px 16px;
}

.c1:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c1:focus:not(:disabled),
.c1:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c1:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c4:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c4:focus:not(:disabled),
.c4:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c4:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c4:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c5 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 32px;
  min-width: 32px;
  font-size: 12px;
  padding: 6px 12px;
}

.c5:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c5:focus:not(:disabled),
.c5:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c5:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c5:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c6 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.67;
  text-align: center;
  height: 24px;
  min-width: 24px;
  font-size: 12px;
  padding: 4px 8px;
}

.c6:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c6:focus:not(:disabled),
.c6:hover:not(:disabled) {
  color: #53616E;
  background-color: #C8D0DB;
}

.c6:active:not(:disabled) {
  color: #53616E;
  background-color: #BCC4CF;
}

.c6:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

<div>
  <h1>
    Progress Indicator
  </h1>
  <div
    className="c0 "
  >
    <button
      className="c1 c2 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c3 "
      >
        Click me
      </div>
    </button>
    <button
      className="c4 c2 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c3 "
      >
        Click me
      </div>
    </button>
    <button
      className="c5 c2 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c3 "
      >
        Click me
      </div>
    </button>
    <button
      className="c6 c2 "
      disabled={false}
      mode="normal"
      onClick={[Function]}
      type="button"
    >
      <div
        className="c3 "
      >
        Click me
      </div>
    </button>
  </div>
</div>
`;

exports[`Storyshots Checkbox default 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c3 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c3::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c3:hover,
.c3:focus,
.c3:active {
  border-color: #8D9BA7;
}

.c3:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c3:checked ~ span {
  color: #1C2534;
}

.c3:checked::after {
  content: '\\f26b';
}

.c3:checked:hover,
.c3:checked:focus {
  background-color: #009BC0;
  border-color: #009BC0;
}

.c3:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c3:checked:disabled,
.c3:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c3:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c3:disabled,
.c3:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c3:disabled ~ span,
.c3:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c3.error:hover {
  border-color: #C00316;
}

.c1 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 c2 "
  >
    <input
      className="c3"
      type="checkbox"
    />
    <span>
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Checkbox default value 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c3 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c3::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c3:hover,
.c3:focus,
.c3:active {
  border-color: #8D9BA7;
}

.c3:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c3:checked ~ span {
  color: #1C2534;
}

.c3:checked::after {
  content: '\\f26b';
}

.c3:checked:hover,
.c3:checked:focus {
  background-color: #009BC0;
  border-color: #009BC0;
}

.c3:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c3:checked:disabled,
.c3:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c3:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c3:disabled,
.c3:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c3:disabled ~ span,
.c3:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c3.error:hover {
  border-color: #C00316;
}

.c1 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 c2 "
  >
    <input
      className="c3"
      defaultChecked={true}
      name="name"
      type="checkbox"
    />
    <span>
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Checkbox disabled 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c3 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c3::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c3:hover,
.c3:focus,
.c3:active {
  border-color: #8D9BA7;
}

.c3:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c3:checked ~ span {
  color: #1C2534;
}

.c3:checked::after {
  content: '\\f26b';
}

.c3:checked:hover,
.c3:checked:focus {
  background-color: #009BC0;
  border-color: #009BC0;
}

.c3:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c3:checked:disabled,
.c3:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c3:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c3:disabled,
.c3:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c3:disabled ~ span,
.c3:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c3.error:hover {
  border-color: #C00316;
}

.c1 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <label
      className="c1 c2 "
    >
      <input
        className="c3"
        disabled={true}
        type="checkbox"
      />
      <span>
        Label
      </span>
    </label>
    <label
      className="c1 c2 "
    >
      <input
        checked={true}
        className="c3"
        disabled={true}
        type="checkbox"
      />
      <span>
        Label
      </span>
    </label>
  </div>
</div>
`;

exports[`Storyshots Checkbox error 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c3 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c3::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c3:hover,
.c3:focus,
.c3:active {
  border-color: #8D9BA7;
}

.c3:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c3:checked ~ span {
  color: #1C2534;
}

.c3:checked::after {
  content: '\\f26b';
}

.c3:checked:hover,
.c3:checked:focus {
  background-color: #009BC0;
  border-color: #009BC0;
}

.c3:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c3:checked:disabled,
.c3:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c3:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c3:disabled,
.c3:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c3:disabled ~ span,
.c3:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c3.error:hover {
  border-color: #C00316;
}

.c1 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 c2 "
  >
    <input
      className="error c3"
      type="checkbox"
    />
    <span>
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Checkbox fires events 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c3 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c3::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c3:hover,
.c3:focus,
.c3:active {
  border-color: #8D9BA7;
}

.c3:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c3:checked ~ span {
  color: #1C2534;
}

.c3:checked::after {
  content: '\\f26b';
}

.c3:checked:hover,
.c3:checked:focus {
  background-color: #009BC0;
  border-color: #009BC0;
}

.c3:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c3:checked:disabled,
.c3:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c3:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c3:disabled,
.c3:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c3:disabled ~ span,
.c3:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c3.error:hover {
  border-color: #C00316;
}

.c1 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 c2 "
  >
    <input
      className="c3"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onKeyUp={[Function]}
      type="checkbox"
    />
    <span>
      Try interacting
    </span>
  </label>
</div>
`;

exports[`Storyshots Checkbox util props 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  font-size: 14px;
  margin-top: 50px;
  margin-bottom: 50px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c3 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c3 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c3::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c3:hover,
.c3:focus,
.c3:active {
  border-color: #8D9BA7;
}

.c3:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c3:checked ~ span {
  color: #1C2534;
}

.c3:checked::after {
  content: '\\f26b';
}

.c3:checked:hover,
.c3:checked:focus {
  background-color: #009BC0;
  border-color: #009BC0;
}

.c3:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c3:checked:disabled,
.c3:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c3:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c3:disabled,
.c3:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c3:disabled ~ span,
.c3:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c3.error:hover {
  border-color: #C00316;
}

.c1 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 c2 "
  >
    <input
      className="c3"
      type="checkbox"
    />
    <span>
      Label
    </span>
  </label>
</div>
`;

exports[`Storyshots Custom Tile Input Basic 1`] = `
.c2 {
  margin-right: 24px;
  width: 100%;
}

.c9 {
  background-color: #FFF;
  width: 100%;
}

.c11 {
  border-bottom-color: #DBDFE3;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}

.c12 {
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  padding: 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c16 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c16::before {
  content: '\\f26b';
}

.c4 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  padding-top: 24px;
  padding-left: 24px;
  padding-right: 24px;
  padding-bottom: 32px;
}

.c10:last-of-type {
  border-bottom: none;
}

.c8 {
  border: 1px solid #DBDFE3;
  margin-bottom: 16px;
  overflow: visible;
  border-radius: 2px;
}

.c3 {
  cursor: pointer;
}

.c15 {
  vertical-align: middle;
  color: #FFF;
}

.c14 {
  visibility: hidden;
  background-color: #2FCDD0;
  width: 24px;
  height: 24px;
  border-radius: 16px;
  text-align: center;
  position: absolute;
  top: -8px;
  right: -8px;
}

.c7 {
  border: unset;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.15);
  background-color: #FFF;
  border-radius: 2px;
  outline: none;
  position: relative;
}

.c5 {
  height: 0;
  opacity: 0;
  width: 0;
  padding: 0;
  margin: 0;
}

.c5:checked ~ .c6 {
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5),inset 0 0 0 1px #2FCDD0;
}

.c5:disabled ~ .c6 {
  cursor: not-allowed;
  background-color: #f3f3f3;
  color: #B4BDC5;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.15);
}

.c5:hover:not(:disabled):not(:checked) ~ .c6 {
  box-shadow: 0 0 0 1px #B4BDC5;
}

.c5:active:not(:disabled):not(:checked) ~ .c6 {
  box-shadow: 0 0 0 1px #8D9BA7;
}

.c5:checked ~ .c6 > .c13 {
  visibility: visible;
}

.c5.error ~ .c6 {
  box-shadow: 0 0 0 1px #C00316;
  cursor: not-allowed;
}

.c5.error ~ .c6 > .c13 {
  visibility: hidden;
}

.c5.error:checked ~ .c6 {
  box-shadow: 0 0 0 1px #C00316;
  cursor: not-allowed;
}

.c5.error:checked ~ .c6 > .c13 {
  visibility: hidden;
}

.c5.error:hover:not(:checked) ~ .c6 {
  box-shadow: 0 0 0 1px #C00316;
  cursor: not-allowed;
}

.c5.error:hover:not(:checked) ~ .c6 > .c13 {
  visibility: hidden;
}

.c5.error:active:not(:checked) ~ .c6 {
  box-shadow: 0 0 0 1px #C00316;
  cursor: not-allowed;
}

.c5.error:active:not(:checked) ~ .c6 > .c13 {
  visibility: hidden;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c12 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      Radios
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="Radios"
          type="radio"
          value="one"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c10 c11 "
          >
            radio1
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="Radios"
          type="radio"
          value="two"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c10 c11 "
          >
            radio2
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="Radios"
          type="radio"
          value="three"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c10 c11 "
          >
            radio3
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="Radios"
          type="radio"
          value="four"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c10 c11 "
          >
            radio4
          </div>
        </div>
      </label>
    </div>
    <div
      className="c12 "
    >
      Checkboxes
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="Checkboxes"
          type="checkbox"
          value="one"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c13 c14 "
          >
            <i
              className="c15 c16 "
            />
          </div>
          <div
            className="c10 c11 "
          >
            checkbox1
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="Checkboxes"
          type="checkbox"
          value="two"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c13 c14 "
          >
            <i
              className="c15 c16 "
            />
          </div>
          <div
            className="c10 c11 "
          >
            checkbox2
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="Checkboxes"
          type="checkbox"
          value="three"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c13 c14 "
          >
            <i
              className="c15 c16 "
            />
          </div>
          <div
            className="c10 c11 "
          >
            checkbox3
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="Checkboxes"
          type="checkbox"
          value="four"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c13 c14 "
          >
            <i
              className="c15 c16 "
            />
          </div>
          <div
            className="c10 c11 "
          >
            checkbox4
          </div>
        </div>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Custom Tile Input Custom Tile states 1`] = `
.c2 {
  margin-right: 24px;
  width: 100%;
}

.c9 {
  background-color: #FFF;
  width: 100%;
}

.c11 {
  border-bottom-color: #DBDFE3;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}

.c12 {
  width: 100%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c0 {
  padding: 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c16 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c16::before {
  content: '\\f26b';
}

.c4 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  padding-top: 24px;
  padding-left: 24px;
  padding-right: 24px;
  padding-bottom: 32px;
}

.c10:last-of-type {
  border-bottom: none;
}

.c8 {
  border: 1px solid #DBDFE3;
  margin-bottom: 16px;
  overflow: visible;
  border-radius: 2px;
}

.c3 {
  cursor: pointer;
}

.c15 {
  vertical-align: middle;
  color: #FFF;
}

.c14 {
  visibility: hidden;
  background-color: #2FCDD0;
  width: 24px;
  height: 24px;
  border-radius: 16px;
  text-align: center;
  position: absolute;
  top: -8px;
  right: -8px;
}

.c7 {
  border: unset;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.15);
  background-color: #FFF;
  border-radius: 2px;
  outline: none;
  position: relative;
}

.c5 {
  height: 0;
  opacity: 0;
  width: 0;
  padding: 0;
  margin: 0;
}

.c5:checked ~ .c6 {
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5),inset 0 0 0 1px #2FCDD0;
}

.c5:disabled ~ .c6 {
  cursor: not-allowed;
  background-color: #f3f3f3;
  color: #B4BDC5;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.15);
}

.c5:hover:not(:disabled):not(:checked) ~ .c6 {
  box-shadow: 0 0 0 1px #B4BDC5;
}

.c5:active:not(:disabled):not(:checked) ~ .c6 {
  box-shadow: 0 0 0 1px #8D9BA7;
}

.c5:checked ~ .c6 > .c13 {
  visibility: visible;
}

.c5.error ~ .c6 {
  box-shadow: 0 0 0 1px #C00316;
  cursor: not-allowed;
}

.c5.error ~ .c6 > .c13 {
  visibility: hidden;
}

.c5.error:checked ~ .c6 {
  box-shadow: 0 0 0 1px #C00316;
  cursor: not-allowed;
}

.c5.error:checked ~ .c6 > .c13 {
  visibility: hidden;
}

.c5.error:hover:not(:checked) ~ .c6 {
  box-shadow: 0 0 0 1px #C00316;
  cursor: not-allowed;
}

.c5.error:hover:not(:checked) ~ .c6 > .c13 {
  visibility: hidden;
}

.c5.error:active:not(:checked) ~ .c6 {
  box-shadow: 0 0 0 1px #C00316;
  cursor: not-allowed;
}

.c5.error:active:not(:checked) ~ .c6 > .c13 {
  visibility: hidden;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c12 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      Radios
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="radioStates"
          type="radio"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c10 c11 "
          >
            Normal
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          defaultChecked={true}
          name="radioStates"
          type="radio"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c10 c11 "
          >
            Default Checked (Normal)
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          disabled={true}
          name="radioStates"
          type="radio"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c10 c11 "
          >
            Disabled
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="error c5"
          name="radioStates"
          type="radio"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c10 c11 "
          >
            Error
          </div>
        </div>
      </label>
    </div>
    <div
      className="c12 "
    >
      Checkboxes
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="checkboxStates"
          type="checkbox"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c13 c14 "
          >
            <i
              className="c15 c16 "
            />
          </div>
          <div
            className="c10 c11 "
          >
            Normal
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          defaultChecked={true}
          name="checkboxStates"
          type="checkbox"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c13 c14 "
          >
            <i
              className="c15 c16 "
            />
          </div>
          <div
            className="c10 c11 "
          >
            Default Checked (Normal)
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          disabled={true}
          name="checkboxStates"
          type="checkbox"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c13 c14 "
          >
            <i
              className="c15 c16 "
            />
          </div>
          <div
            className="c10 c11 "
          >
            Disabled
          </div>
        </div>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="error c5"
          name="checkboxStates"
          type="checkbox"
        />
        <div
          className="c6 c7 c8 c9 "
        >
          <div
            className="c13 c14 "
          >
            <i
              className="c15 c16 "
            />
          </div>
          <div
            className="c10 c11 "
          >
            Error
          </div>
        </div>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker autofocus 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f332';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c3 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c1 .DayPickerInput {
  display: inherit;
}

.c1 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c1 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c1 .DayPicker {
  color: #53616E;
}

.c1 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c1 .DayPicker-NavButton--prev,
.c1 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c1 .DayPicker-NavButton--prev::after,
.c1 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c1 .DayPicker-NavButton--prev {
  left: 0;
}

.c1 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c1 .DayPicker-NavButton--next {
  right: 0;
}

.c1 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c1 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c1 .DayPicker-Caption > div {
  font-size: inherit;
}

.c1 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c1 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c1 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c1 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c1 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c1 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c2 "
      >
        <input
          autoFocus={true}
          className="c3 c4 "
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          type="text"
          value=""
        />
        <i
          className="c5 c6 "
          onClick={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker custom date format 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f332';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c3 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c1 .DayPickerInput {
  display: inherit;
}

.c1 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c1 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c1 .DayPicker {
  color: #53616E;
}

.c1 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c1 .DayPicker-NavButton--prev,
.c1 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c1 .DayPicker-NavButton--prev::after,
.c1 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c1 .DayPicker-NavButton--prev {
  left: 0;
}

.c1 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c1 .DayPicker-NavButton--next {
  right: 0;
}

.c1 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c1 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c1 .DayPicker-Caption > div {
  font-size: inherit;
}

.c1 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c1 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c1 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c1 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c1 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c1 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c2 "
      >
        <input
          className="c3 c4 "
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="Month day, year"
          type="text"
          value="January 2, 2010"
        />
        <i
          className="c5 c6 "
          onClick={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker default 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f332';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c3 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c1 .DayPickerInput {
  display: inherit;
}

.c1 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c1 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c1 .DayPicker {
  color: #53616E;
}

.c1 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c1 .DayPicker-NavButton--prev,
.c1 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c1 .DayPicker-NavButton--prev::after,
.c1 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c1 .DayPicker-NavButton--prev {
  left: 0;
}

.c1 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c1 .DayPicker-NavButton--next {
  right: 0;
}

.c1 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c1 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c1 .DayPicker-Caption > div {
  font-size: inherit;
}

.c1 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c1 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c1 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c1 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c1 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c1 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c2 "
      >
        <input
          className="c3 c4 "
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          type="text"
          value=""
        />
        <i
          className="c5 c6 "
          onClick={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker disabled 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f332';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c3 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c1 .DayPickerInput {
  display: inherit;
}

.c1 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c1 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c1 .DayPicker {
  color: #53616E;
}

.c1 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c1 .DayPicker-NavButton--prev,
.c1 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c1 .DayPicker-NavButton--prev::after,
.c1 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c1 .DayPicker-NavButton--prev {
  left: 0;
}

.c1 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c1 .DayPicker-NavButton--next {
  right: 0;
}

.c1 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c1 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c1 .DayPicker-Caption > div {
  font-size: inherit;
}

.c1 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c1 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c1 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c1 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c1 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c1 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c2 "
      >
        <input
          className="c3 c4 "
          disabled={true}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          type="text"
          value=""
        />
        <i
          className="c5 c6 "
          onClick={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker disabled dates 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f332';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c3 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c1 .DayPickerInput {
  display: inherit;
}

.c1 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c1 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c1 .DayPicker {
  color: #53616E;
}

.c1 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c1 .DayPicker-NavButton--prev,
.c1 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c1 .DayPicker-NavButton--prev::after,
.c1 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c1 .DayPicker-NavButton--prev {
  left: 0;
}

.c1 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c1 .DayPicker-NavButton--next {
  right: 0;
}

.c1 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c1 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c1 .DayPicker-Caption > div {
  font-size: inherit;
}

.c1 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c1 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c1 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c1 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c1 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c1 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c2 "
      >
        <input
          className="c3 c4 "
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          type="text"
          value=""
        />
        <i
          className="c5 c6 "
          onClick={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker field - initial value 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c3 {
  margin-top: 0px;
  margin-bottom: 8px;
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c4 {
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c2 {
  margin-left: -8px;
  margin-right: -8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c10 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c10::before {
  content: '\\f332';
}

.c8 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c8:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c8:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  margin-left: 24px;
  margin-right: 24px;
  margin-top: 24px;
  margin-bottom: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c12 {
  background-color: #FF5745;
  color: #FFF;
}

.c13 {
  visibility: visible;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c11:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c11:focus:not(:disabled),
.c11:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c11:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c11:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c7 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c7::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c7::-moz-placeholder {
  color: #8D9BA7;
}

.c7:-ms-input-placeholder {
  color: #8D9BA7;
}

.c7::placeholder {
  color: #8D9BA7;
}

.c7:hover,
.c7:active {
  border-color: #B4BDC5;
}

.c7:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c7:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c7:required {
  box-shadow: none;
}

.c7.error {
  border-color: #C00316;
}

.c6 {
  position: relative;
}

.c6 input {
  padding-right: 32px;
}

.c9 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c5 .DayPickerInput {
  display: inherit;
}

.c5 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c5 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c5 .DayPicker {
  color: #53616E;
}

.c5 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c5 .DayPicker-NavButton--prev,
.c5 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c5 .DayPicker-NavButton--prev::after,
.c5 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c5 .DayPicker-NavButton--prev {
  left: 0;
}

.c5 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c5 .DayPicker-NavButton--next {
  right: 0;
}

.c5 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c5 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c5 .DayPicker-Caption > div {
  font-size: inherit;
}

.c5 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c5 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c5 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c5 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c5 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c5 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c5 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c5 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c5 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    margin-top: 8px;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    margin-bottom: 0px;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c3 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c4 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:48em) {
  .c4 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:64em) {
  .c4 {
    width: 75%;
  }
}

<div
  className="c0 "
>
  <form
    onSubmit={[Function]}
  >
    <label
      className="c1 "
    >
      <div
        className="c2 "
      >
        <div
          className="c3 "
        >
          Choose date
        </div>
        <div
          className="c4 "
        >
          <div
            className="c5"
          >
            <div
              className="DayPickerInput"
              onMouseDown={[Function]}
            >
              <div
                className="c6 "
              >
                <input
                  className="c7 c8 "
                  disabled={false}
                  name="chosenDate"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  placeholder="MM/DD/YYYY"
                  type="text"
                  value="01/02/2010"
                />
                <i
                  className="c9 c10 "
                  onClick={undefined}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </label>
    <button
      className="c11 c12 "
      disabled={false}
      mode="primary"
      type="submit"
    >
      <div
        className="c13 "
      >
        Submit
      </div>
    </button>
  </form>
</div>
`;

exports[`Storyshots DatePicker field - required 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c3 {
  margin-top: 0px;
  margin-bottom: 8px;
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c4 {
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c2 {
  margin-left: -8px;
  margin-right: -8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c10 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c10::before {
  content: '\\f332';
}

.c8 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c8:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c8:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  margin-left: 24px;
  margin-right: 24px;
  margin-top: 24px;
  margin-bottom: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c12 {
  background-color: #FF5745;
  color: #FFF;
}

.c13 {
  visibility: visible;
}

.c11 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c11:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c11:focus:not(:disabled),
.c11:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c11:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c11:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c7 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c7::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c7::-moz-placeholder {
  color: #8D9BA7;
}

.c7:-ms-input-placeholder {
  color: #8D9BA7;
}

.c7::placeholder {
  color: #8D9BA7;
}

.c7:hover,
.c7:active {
  border-color: #B4BDC5;
}

.c7:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c7:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c7:required {
  box-shadow: none;
}

.c7.error {
  border-color: #C00316;
}

.c6 {
  position: relative;
}

.c6 input {
  padding-right: 32px;
}

.c9 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c5 .DayPickerInput {
  display: inherit;
}

.c5 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c5 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c5 .DayPicker {
  color: #53616E;
}

.c5 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c5 .DayPicker-NavButton--prev,
.c5 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c5 .DayPicker-NavButton--prev::after,
.c5 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c5 .DayPicker-NavButton--prev {
  left: 0;
}

.c5 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c5 .DayPicker-NavButton--next {
  right: 0;
}

.c5 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c5 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c5 .DayPicker-Caption > div {
  font-size: inherit;
}

.c5 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c5 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c5 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c5 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c5 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c5 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c5 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c5 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c5 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    margin-top: 8px;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    margin-bottom: 0px;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c3 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c4 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:48em) {
  .c4 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:64em) {
  .c4 {
    width: 75%;
  }
}

<div
  className="c0 "
>
  <form
    onSubmit={[Function]}
  >
    <label
      className="c1 "
    >
      <div
        className="c2 "
      >
        <div
          className="c3 "
        >
          Choose date
        </div>
        <div
          className="c4 "
        >
          <div
            className="c5"
          >
            <div
              className="DayPickerInput"
              onMouseDown={[Function]}
            >
              <div
                className="c6 "
              >
                <input
                  className="c7 c8 "
                  disabled={false}
                  name="chosenDate"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onClick={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  onKeyDown={[Function]}
                  onKeyUp={[Function]}
                  placeholder="MM/DD/YYYY"
                  type="text"
                  value=""
                />
                <i
                  className="c9 c10 "
                  onClick={undefined}
                />
              </div>
            </div>
          </div>
        </div>
      </div>
    </label>
    <button
      className="c11 c12 "
      disabled={true}
      mode="primary"
      type="submit"
    >
      <div
        className="c13 "
      >
        Submit
      </div>
    </button>
  </form>
</div>
`;

exports[`Storyshots DatePicker fires events 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f332';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c3 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c1 .DayPickerInput {
  display: inherit;
}

.c1 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c1 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c1 .DayPicker {
  color: #53616E;
}

.c1 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c1 .DayPicker-NavButton--prev,
.c1 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c1 .DayPicker-NavButton--prev::after,
.c1 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c1 .DayPicker-NavButton--prev {
  left: 0;
}

.c1 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c1 .DayPicker-NavButton--next {
  right: 0;
}

.c1 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c1 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c1 .DayPicker-Caption > div {
  font-size: inherit;
}

.c1 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c1 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c1 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c1 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c1 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c1 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c2 "
      >
        <input
          className="c3 c4 "
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          type="text"
          value=""
        />
        <i
          className="c5 c6 "
          onClick={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker placeholder 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f332';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c3 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c1 .DayPickerInput {
  display: inherit;
}

.c1 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c1 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c1 .DayPicker {
  color: #53616E;
}

.c1 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c1 .DayPicker-NavButton--prev,
.c1 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c1 .DayPicker-NavButton--prev::after,
.c1 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c1 .DayPicker-NavButton--prev {
  left: 0;
}

.c1 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c1 .DayPicker-NavButton--next {
  right: 0;
}

.c1 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c1 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c1 .DayPicker-Caption > div {
  font-size: inherit;
}

.c1 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c1 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c1 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c1 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c1 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c1 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c2 "
      >
        <input
          className="c3 c4 "
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="Custom placeholder"
          type="text"
          value=""
        />
        <i
          className="c5 c6 "
          onClick={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker sizes 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  width: 33.33333333333333%;
}

.c3 {
  margin-bottom: 5px;
  width: 66.66666666666666%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c9 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  font-size: 24px;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c9::before {
  content: '\\f332';
}

.c11 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  font-size: 16px;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c11::before {
  content: '\\f332';
}

.c14 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  font-size: 14px;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c14::before {
  content: '\\f332';
}

.c7 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c7:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c7:disabled {
  opacity: 0.25;
}

.c10 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c10::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c10::-moz-placeholder {
  color: #8D9BA7;
}

.c10:-ms-input-placeholder {
  color: #8D9BA7;
}

.c10::placeholder {
  color: #8D9BA7;
}

.c10:hover,
.c10:active {
  border-color: #B4BDC5;
}

.c10:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c10:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c10:required {
  box-shadow: none;
}

.c10.error {
  border-color: #C00316;
}

.c6 {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 48px;
  line-height: 1.43;
}

.c6::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c6::-moz-placeholder {
  color: #8D9BA7;
}

.c6:-ms-input-placeholder {
  color: #8D9BA7;
}

.c6::placeholder {
  color: #8D9BA7;
}

.c6:hover,
.c6:active {
  border-color: #B4BDC5;
}

.c6:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c6:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c6:required {
  box-shadow: none;
}

.c6.error {
  border-color: #C00316;
}

.c12 {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  height: 32px;
  line-height: 1.43;
}

.c12::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c12::-moz-placeholder {
  color: #8D9BA7;
}

.c12:-ms-input-placeholder {
  color: #8D9BA7;
}

.c12::placeholder {
  color: #8D9BA7;
}

.c12:hover,
.c12:active {
  border-color: #B4BDC5;
}

.c12:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c12:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c12:required {
  box-shadow: none;
}

.c12.error {
  border-color: #C00316;
}

.c5 {
  position: relative;
}

.c5 input {
  padding-right: 32px;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c13 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 8px;
  pointer-events: none;
}

.c4 .DayPickerInput {
  display: inherit;
}

.c4 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c4 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c4 .DayPicker {
  color: #53616E;
}

.c4 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c4 .DayPicker-NavButton--prev,
.c4 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c4 .DayPicker-NavButton--prev::after,
.c4 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c4 .DayPicker-NavButton--prev {
  left: 0;
}

.c4 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c4 .DayPicker-NavButton--next {
  right: 0;
}

.c4 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c4 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c4 .DayPicker-Caption > div {
  font-size: inherit;
}

.c4 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c4 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c4 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c4 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c4 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c4 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c4 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c4 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c4 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      Large
    </div>
    <div
      className="c3 "
    >
      <div
        className="c4"
      >
        <div
          className="DayPickerInput"
          onMouseDown={[Function]}
        >
          <div
            className="c5 "
          >
            <input
              className="c6 c7 "
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              placeholder="MM/DD/YYYY"
              type="text"
              value=""
            />
            <i
              className="c8 c9 "
              onClick={undefined}
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="c2 "
    >
      Medium
    </div>
    <div
      className="c3 "
    >
      <div
        className="c4"
      >
        <div
          className="DayPickerInput"
          onMouseDown={[Function]}
        >
          <div
            className="c5 "
          >
            <input
              className="c10 c7 "
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              placeholder="MM/DD/YYYY"
              type="text"
              value=""
            />
            <i
              className="c8 c11 "
              onClick={undefined}
            />
          </div>
        </div>
      </div>
    </div>
    <div
      className="c2 "
    >
      Small
    </div>
    <div
      className="c3 "
    >
      <div
        className="c4"
      >
        <div
          className="DayPickerInput"
          onMouseDown={[Function]}
        >
          <div
            className="c5 "
          >
            <input
              className="c12 c7 "
              disabled={false}
              onBlur={[Function]}
              onChange={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onKeyDown={[Function]}
              onKeyUp={[Function]}
              placeholder="MM/DD/YYYY"
              type="text"
              value=""
            />
            <i
              className="c13 c14 "
              onClick={undefined}
            />
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots DatePicker util props 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f332';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  margin-top: 50px;
  margin-bottom: 50px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c3 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c1 .DayPickerInput {
  display: inherit;
}

.c1 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c1 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c1 .DayPicker {
  color: #53616E;
}

.c1 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c1 .DayPicker-NavButton--prev,
.c1 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c1 .DayPicker-NavButton--prev::after,
.c1 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c1 .DayPicker-NavButton--prev {
  left: 0;
}

.c1 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c1 .DayPicker-NavButton--next {
  right: 0;
}

.c1 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c1 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c1 .DayPicker-Caption > div {
  font-size: inherit;
}

.c1 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c1 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c1 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c1 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c1 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c1 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c1 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1"
  >
    <div
      className="DayPickerInput"
      onMouseDown={[Function]}
    >
      <div
        className="c2 "
      >
        <input
          className="c3 c4 "
          disabled={false}
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyDown={[Function]}
          onKeyUp={[Function]}
          placeholder="MM/DD/YYYY"
          type="text"
          value=""
        />
        <i
          className="c5 c6 "
          onClick={undefined}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Drawer default 1`] = `
.c18 {
  border-bottom-color: #DBDFE3;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}

.c20 {
  margin-top: 16px;
  margin-bottom: 4px;
}

.c9 {
  background-color: #FFF;
}

.c11 {
  font-size: 16px;
  padding-left: 24px;
  padding-right: 24px;
  padding-top: 16px;
  padding-bottom: 16px;
  border-bottom-color: #DBDFE3;
  border-bottom-width: 1px;
  border-bottom-style: solid;
}

.c12 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c0 {
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c2::before {
  content: '\\f197';
}

.c15 {
  margin-left: 64px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c15::before {
  content: '\\f136';
}

.c13 {
  width: 12px;
  display: block;
  max-width: 100%;
  height: auto;
}

.c14 {
  color: #123466;
  margin: 0px;
  margin-left: 8px;
  font-family: Circular,sans-serif;
  font-size: 19px;
  line-height: 1.47;
  font-weight: 400;
}

.c19 {
  color: #8D9BA7;
  margin: 0px;
  margin-bottom: 16px;
  padding-left: 24px;
  padding-right: 24px;
  padding-top: 24px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c21 {
  color: #53616E;
  margin: 0px;
  margin-bottom: 8px;
  padding-left: 24px;
  padding-right: 24px;
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 700;
  text-transform: uppercase;
}

.c10 {
  font-weight: 600;
}

.c17 {
  padding-top: 0px;
  padding-left: 0px;
  padding-right: 0px;
  padding-bottom: 32px;
}

.c17:last-of-type {
  border-bottom: none;
}

.c8 {
  border: 1px solid #DBDFE3;
  margin-bottom: 16px;
  overflow: visible;
  border-radius: 2px;
}

.c23 {
  text-decoration: none;
  color: #009BC0;
  cursor: pointer;
}

.c23:link,
.c23:visited {
  color: #009BC0;
}

.c23:hover {
  color: #0081AA;
}

.c23:active {
  color: #144E6F;
}

.c5 {
  width: 100%;
  height: 100%;
  -webkit-transition: all 0.2s ease-in;
  transition: all 0.2s ease-in;
  opacity: 0;
}

.c7 {
  background-color: #FFF;
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 200px;
  border-radius: unset;
  -webkit-transform: translateX(-100%);
  -ms-transform: translateX(-100%);
  transform: translateX(-100%);
  -webkit-transition: all 0.2s ease-in;
  transition: all 0.2s ease-in;
}

.c3 {
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  overflow: hidden;
  visibility: hidden;
  z-index: 1031;
}

.c3.show {
  visibility: visible;
}

.c3.show > .c4 {
  -webkit-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
  opacity: 1;
  background-color: rgba(0,0,0,0.5);
}

.c3.show > .c6 {
  -webkit-transform: none;
  -ms-transform: none;
  transform: none;
  -webkit-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
}

.c16 {
  overflow-y: auto;
  height: 100%;
}

.c1 {
  cursor: pointer;
  font-family: Circular,sans-serif;
  font-size: 16px;
  line-height: 1.25;
  font-weight: 600;
  color: #B4BDC5;
}

.c22 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c22:hover,
.c22:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c22:link,
.c22:visited {
  color: #8D9BA7;
}

.c22:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c22.active-class {
  color: #000;
}

.c24 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c24:hover,
.c24:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c24:link,
.c24:visited {
  color: #8D9BA7;
}

.c24:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c24.active-class {
  color: #000;
}

.c25 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c25:hover,
.c25:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c25:link,
.c25:visited {
  color: #8D9BA7;
}

.c25:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c25.active-class {
  color: #000;
}

.c26 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c26:hover,
.c26:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c26:link,
.c26:visited {
  color: #8D9BA7;
}

.c26:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c26.active-class {
  color: #000;
}

.c27 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c27:hover,
.c27:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c27:link,
.c27:visited {
  color: #8D9BA7;
}

.c27:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c27.active-class {
  color: #000;
}

.c28 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c28:hover,
.c28:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c28:link,
.c28:visited {
  color: #8D9BA7;
}

.c28:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c28.active-class {
  color: #000;
}

.c29 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c29:hover,
.c29:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c29:link,
.c29:visited {
  color: #8D9BA7;
}

.c29:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c29.active-class {
  color: #000;
}

.c30 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c30:hover,
.c30:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c30:link,
.c30:visited {
  color: #8D9BA7;
}

.c30:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c30.active-class {
  color: #000;
}

.c31 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c31:hover,
.c31:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c31:link,
.c31:visited {
  color: #8D9BA7;
}

.c31:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c31.active-class {
  color: #000;
}

.c32 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c32:hover,
.c32:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c32:link,
.c32:visited {
  color: #8D9BA7;
}

.c32:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c32.active-class {
  color: #000;
}

.c33 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c33:hover,
.c33:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c33:link,
.c33:visited {
  color: #8D9BA7;
}

.c33:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c33.active-class {
  color: #000;
}

.c34 {
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  color: #8D9BA7;
  display: block;
  padding: 8px 24px;
  text-decoration: none;
}

.c34:hover,
.c34:focus {
  background-color: #f3f3f3;
  color: #53616E;
  outline: none;
}

.c34:link,
.c34:visited {
  color: #8D9BA7;
}

.c34:active {
  background-color: #D3F3F3;
  color: #0081AA;
}

.c34.active-class {
  color: #000;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <i
      className="c1 c2 "
      onClick={[Function]}
    />
    <div
      className="c3 "
    >
      <div
        className="c4 c5 "
      />
      <div
        className="c6 c7 c8 c9 "
      >
        <div
          className="c10 c11 "
        >
          <div
            className="c12 "
          >
            <img
              className="c13 "
              src="https://www.zenefits.com/static/images/logos/icon-footer-zenefits.svg"
            />
            <p
              className="c14"
            >
              zenefits
            </p>
            <i
              className="c1 c15 "
              onClick={[Function]}
            />
          </div>
        </div>
        <div
          className="c16 c17 c18 "
        >
          <p
            className="c19"
          >
            Dashboard
          </p>
          <div
            className="c20 "
          >
            <p
              className="c21"
            >
              Section 1
            </p>
            <a
              active={true}
              className="active-class c22 c23 "
              href="https://google.com"
              rel="noreferrer noopener "
              target="_blank"
            >
              Link 1 (active)
            </a>
            <a
              className="c24 c23 "
              href="https://google.com"
              rel="noreferrer noopener "
              target="_blank"
            >
              Link 2
            </a>
            <a
              className="c25 c23 "
              href="https://google.com"
              rel="noreferrer noopener "
              target="_blank"
            >
              Link 3
            </a>
            <a
              className="c26 c23 "
              href="https://google.com"
              rel="noreferrer noopener "
              target="_blank"
            >
              Link 4
            </a>
            <a
              className="c27 c23 "
              href="https://google.com"
              rel="noreferrer noopener "
              target="_blank"
            >
              Link 5
            </a>
            <a
              className="c28 c23 "
              href="https://google.com"
              rel="noreferrer noopener "
              target="_blank"
            >
              Link 6
            </a>
          </div>
          <div
            className="c20 "
          >
            <p
              className="c21"
            >
              Section 2
            </p>
            <a
              aria-current={false}
              className="c29"
              href="#/sdfsd1"
              onClick={[Function]}
              style={undefined}
            >
               NavLink 1 
            </a>
            <a
              aria-current={false}
              className="c30"
              href="#/sdfsd2"
              onClick={[Function]}
              style={undefined}
            >
               NavLink 2 
            </a>
            <a
              aria-current={false}
              className="c31"
              href="#/sdfsd3"
              onClick={[Function]}
              style={undefined}
            >
               NavLink 3 
            </a>
            <a
              aria-current={false}
              className="c32"
              href="#/sdfsd4"
              onClick={[Function]}
              style={undefined}
            >
               NavLink 4 
            </a>
            <a
              aria-current={false}
              className="c33"
              href="#/sdfsd5"
              onClick={[Function]}
              style={undefined}
            >
               NavLink 5 
            </a>
            <a
              aria-current={false}
              className="c34"
              href="#/sdfsd6"
              onClick={[Function]}
              style={undefined}
            >
               NavLink 6 
            </a>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Form simple redux form 1`] = `
.c3 {
  margin-top: 0px;
  margin-bottom: 8px;
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c7 {
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c0 {
  padding: 8px;
  width: 100%;
}

.c10 {
  margin-left: 24px;
  margin-right: 24px;
  margin-top: 24px;
  margin-bottom: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
}

.c11 {
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c15 {
  margin-top: 0px;
  margin-bottom: 8px;
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c28 {
  padding-left: 8px;
  padding-right: 8px;
  width: 50%;
}

.c29 {
  padding-left: 8px;
  padding-right: 8px;
  width: 50%;
}

.c30 {
  width: 100%;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  margin-left: -8px;
  margin-right: -8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c27 {
  margin-left: -8px;
  margin-right: -8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c25 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c25::before {
  content: '\\f332';
}

.c6 {
  color: #8D9BA7;
  margin-left: 4px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f1f5';
}

.c21 {
  margin-right: 4px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c21::before {
  content: '\\f1f7';
}

.c20 {
  color: #8D9BA7;
  margin: 0px;
  margin-top: 8px;
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1;
  font-weight: 600;
}

.c19 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c19:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c19:disabled {
  opacity: 0.25;
}

.c9 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c9:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c9:disabled {
  opacity: 0.25;
}

.c13 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  font-size: 14px;
  margin-left: 24px;
  margin-right: 24px;
  margin-top: 24px;
  margin-bottom: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c32 {
  background-color: #FF5745;
  color: #FFF;
}

.c33 {
  visibility: visible;
}

.c31 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c31:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c31:focus:not(:disabled),
.c31:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c31:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c31:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c14 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c14 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c14::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c14:hover,
.c14:focus,
.c14:active {
  border-color: #8D9BA7;
}

.c14:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c14:checked ~ span {
  color: #1C2534;
}

.c14:checked::after {
  content: '\\f26b';
}

.c14:checked:hover,
.c14:checked:focus {
  background-color: #009BC0;
  border-color: #009BC0;
}

.c14:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c14:checked:disabled,
.c14:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c14:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c14:disabled,
.c14:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c14:disabled ~ span,
.c14:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c14:required {
  box-shadow: none;
}

.c14.error {
  border-color: #C00316;
}

.c14.error:hover {
  border-color: #C00316;
}

.c12 {
  display: block;
  line-height: 1.5;
}

.c8 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c8::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c8::-moz-placeholder {
  color: #8D9BA7;
}

.c8:-ms-input-placeholder {
  color: #8D9BA7;
}

.c8::placeholder {
  color: #8D9BA7;
}

.c8:hover,
.c8:active {
  border-color: #B4BDC5;
}

.c8:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c8:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c8:required {
  box-shadow: none;
}

.c8.error {
  border-color: #C00316;
}

.c23 {
  position: relative;
}

.c23 input {
  padding-right: 32px;
}

.c24 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c22 .DayPickerInput {
  display: inherit;
}

.c22 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c22 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c22 .DayPicker {
  color: #53616E;
}

.c22 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c22 .DayPicker-NavButton--prev,
.c22 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c22 .DayPicker-NavButton--prev::after,
.c22 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c22 .DayPicker-NavButton--prev {
  left: 0;
}

.c22 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c22 .DayPicker-NavButton--next {
  right: 0;
}

.c22 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c22 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c22 .DayPicker-Caption > div {
  font-size: inherit;
}

.c22 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c22 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c22 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c22 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c22 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c22 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c22 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c22 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c22 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

.c4 {
  display: inline-block;
  vertical-align: bottom;
}

.c4 .popper-container {
  background-color: #123466;
  color: #FFF;
  box-shadow: unset;
}

.c4 .popper {
  z-index: 1070;
}

.c4 .popper[data-placement^='right'] .popper-arrow {
  left: 3px;
  border-color: transparent #123466 transparent transparent;
}

.c4 .popper[data-placement^='top'] .popper-arrow {
  border-color: #123466 transparent transparent transparent;
  bottom: 3px;
}

.c4 .popper[data-placement^='left'] .popper-arrow {
  border-color: transparent transparent transparent #123466;
  right: 3px;
}

.c4 .popper[data-placement^='bottom'] .popper-arrow {
  top: 3px;
  border-color: transparent transparent #123466 transparent;
}

.c17 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c17 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c17:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c17:checked ~ span {
  color: #1C2534;
}

.c17:checked:hover {
  background: radial-gradient(circle at center,#009BC0 0,#009BC0 35%,transparent 40%);
}

.c17:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c17:checked:disabled,
.c17:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c17:disabled,
.c17:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c17:disabled ~ span,
.c17:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c17:required {
  box-shadow: none;
}

.c17:hover,
.c17:focus,
.c17:active {
  border-color: #8D9BA7;
}

.c17.error {
  border-color: #C00316;
}

.c17.error:checked,
.c17.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c16 {
  display: block;
  line-height: 1.5;
}

.c18 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c18::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c18::-moz-placeholder {
  color: #8D9BA7;
}

.c18:-ms-input-placeholder {
  color: #8D9BA7;
}

.c18::placeholder {
  color: #8D9BA7;
}

.c18:hover,
.c18:active {
  border-color: #B4BDC5;
}

.c18:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c18:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c18:required {
  box-shadow: none;
}

.c18.error {
  border-color: #C00316;
}

.c26 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c26 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c26 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c26 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c26 .Select-control::placeholder {
  color: #8D9BA7;
}

.c26 .Select-control:hover,
.c26 .Select-control:active {
  border-color: #B4BDC5;
}

.c26 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c26 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c26 .Select-control:required {
  box-shadow: none;
}

.c26 .Select-control.error {
  border-color: #C00316;
}

.c26 .Select-control:hover {
  box-shadow: none;
}

.c26 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c26.Select--multi .Select-input,
.c26 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c26.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c26.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c26.error > .Select-control {
  border-color: #C00316 !important;
}

.c26 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c26 .Select-placeholder,
.c26 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c26 .Select-placeholder,
.c26.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c26 .Select-value-label {
  font-weight: normal;
}

.c26:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c26 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c26 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c26 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c26.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c26.Select--multi .Select-value-icon:hover,
.c26.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c3 {
    margin-top: 8px;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    margin-bottom: 0px;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c3 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c7 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:48em) {
  .c7 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:64em) {
  .c7 {
    width: 75%;
  }
}

@media screen and (min-width:32em) {
  .c0 {
    width: 80%;
  }
}

@media screen and (min-width:48em) {
  .c0 {
    width: 75%;
  }
}

@media screen and (min-width:64em) {
  .c0 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c15 {
    margin-bottom: 0px;
  }
}

@media screen and (min-width:32em) {
  .c15 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c15 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c15 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c28 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:32em) {
  .c29 {
    width: 66.66666666666666%;
  }
}

<div>
  <p>
    Forms should be used for any data input.
  </p>
  <div
    className="c0 "
  >
    <h2>
      Create new user
    </h2>
    <form
      onSubmit={[Function]}
    >
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Username *
            <div
              className="c4 c5 "
            >
              <div>
                <div
                  onClick={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <i
                    className="c6 "
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            className="c7 "
          >
            <input
              aria-invalid={false}
              className="c8 c9 "
              maxLength={20}
              minLength={5}
              name="username"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              required={true}
              type="text"
              value=""
            />
          </div>
        </div>
      </label>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Email
            <div
              className="c4 c5 "
            >
              <div>
                <div
                  onClick={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <i
                    className="c6 "
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            className="c7 "
          >
            <input
              aria-invalid={false}
              className="c8 c9 "
              minLength={3}
              name="email"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              required={true}
              type="email"
              value=""
            />
          </div>
        </div>
      </label>
      <div
        className="c10 "
      >
        <div
          className="c2 "
        >
          <div
            className="c11 "
          >
            <label
              className="c12 c13 "
            >
              <input
                checked=""
                className="c14"
                name="newsletterEnabled"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="checkbox"
                value=""
              />
              <span>
                Sign up for newsletter
              </span>
            </label>
          </div>
        </div>
      </div>
      <div
        className="c10 "
      >
        <div
          className="c2 "
        >
          <div
            className="c15 "
          >
            Favorite Game
          </div>
          <div
            className="c7 "
          >
            <label
              className="c16 c13 "
            >
              <input
                checked={false}
                className="c17"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="camel-up"
              />
               
              <span>
                Camel Up
              </span>
            </label>
            <label
              className="c16 c13 "
            >
              <input
                checked={false}
                className="c17"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="risk"
              />
               
              <span>
                Risk
              </span>
            </label>
            <label
              className="c16 c13 "
            >
              <input
                checked={true}
                className="c17"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="catan"
              />
               
              <span>
                Settlers of Catan
              </span>
            </label>
          </div>
        </div>
      </div>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Comment
          </div>
          <div
            className="c7 "
          >
            <textarea
              className="c18 c19 "
              name="comment"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              rows={4}
              type="text"
              value=""
            />
            <p
              className="c20"
            >
              <i
                className="c21 "
              />
              Tell us something
            </p>
          </div>
        </div>
      </label>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Most recent moon voyage *
          </div>
          <div
            className="c7 "
          >
            <div
              className="c22"
            >
              <div
                className="DayPickerInput"
                onMouseDown={[Function]}
              >
                <div
                  className="c23 "
                >
                  <input
                    className="c8 c9 "
                    disabled={false}
                    name="moonDate"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDragStart={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    placeholder="MM/DD/YYYY"
                    type="text"
                    value=""
                  />
                  <i
                    className="c24 c25 "
                    onClick={undefined}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Have you been to the Moon?
          </div>
          <div
            className="c7 "
          >
            <div
              className=""
            >
              <div
                className="Select c26 Select--single is-clearable is-searchable"
                style={undefined}
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  style={undefined}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-2--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      className="Select-input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <style
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "input#undefined::-ms-clear {display: none;}",
                          }
                        }
                      />
                      <input
                        aria-activedescendant="react-select-2--value"
                        aria-describedby={undefined}
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        aria-owns=""
                        className={undefined}
                        id={undefined}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        style={
                          Object {
                            "boxSizing": "content-box",
                            "width": "5px",
                          }
                        }
                        tabIndex={undefined}
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </span>
                  <span
                    aria-label="Clear value"
                    className="Select-clear-zone"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    title="Clear value"
                  >
                    <span
                      className="Select-clear"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "&times;",
                        }
                      }
                    />
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Which other planets have you visited?
          </div>
          <div
            className="c7 "
          >
            <div
              className=""
            >
              <div
                className="Select c26 Select--multi is-clearable is-searchable"
                style={undefined}
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  style={undefined}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-3--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      className="Select-input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <style
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "input#undefined::-ms-clear {display: none;}",
                          }
                        }
                      />
                      <input
                        aria-activedescendant="react-select-3--value"
                        aria-describedby={undefined}
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        aria-owns=""
                        className={undefined}
                        id={undefined}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        style={
                          Object {
                            "boxSizing": "content-box",
                            "width": "5px",
                          }
                        }
                        tabIndex={undefined}
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <div
        className="c10 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            How tall are you?
          </div>
          <div
            className="c7 "
          >
            <div
              className="c27 "
            >
              <div
                className="c28 "
              >
                <input
                  aria-invalid={false}
                  className="c8 c9 "
                  name="height"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  type="text"
                  value=""
                />
              </div>
              <div
                className="c29 "
              >
                <div
                  className="c30 "
                >
                  <div
                    className="Select c26 Select--single is-clearable is-searchable"
                    style={undefined}
                  >
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={undefined}
                    >
                      <span
                        className="Select-multi-value-wrapper"
                        id="react-select-4--value"
                      >
                        <div
                          className="Select-placeholder"
                        >
                          Select...
                        </div>
                        <div
                          className="Select-input"
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <style
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "input#undefined::-ms-clear {display: none;}",
                              }
                            }
                          />
                          <input
                            aria-activedescendant="react-select-4--value"
                            aria-describedby={undefined}
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-label={undefined}
                            aria-labelledby={undefined}
                            aria-owns=""
                            className={undefined}
                            id={undefined}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            style={
                              Object {
                                "boxSizing": "content-box",
                                "width": "5px",
                              }
                            }
                            tabIndex={undefined}
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          >
                            
                          </div>
                        </div>
                      </span>
                      <span
                        aria-label="Clear value"
                        className="Select-clear-zone"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        title="Clear value"
                      >
                        <span
                          className="Select-clear"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "&times;",
                            }
                          }
                        />
                      </span>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}
                      >
                        <span
                          className="Select-arrow"
                          onMouseDown={[Function]}
                        />
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c10 "
      >
        <div
          className="c2 "
        >
          <div
            className="c11 "
          >
            <button
              className="c31 c32 "
              disabled={true}
              mode="primary"
              type="submit"
            >
              <div
                className="c33 "
              >
                Sign Up
              </div>
            </button>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>
`;

exports[`Storyshots Form with graphql 1`] = `
.c3 {
  margin-top: 0px;
  margin-bottom: 8px;
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c7 {
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c0 {
  padding: 8px;
  width: 100%;
}

.c10 {
  margin-left: 24px;
  margin-right: 24px;
  margin-top: 24px;
  margin-bottom: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
}

.c11 {
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c15 {
  margin-top: 0px;
  margin-bottom: 8px;
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
}

.c28 {
  padding-left: 8px;
  padding-right: 8px;
  width: 50%;
}

.c29 {
  padding-left: 8px;
  padding-right: 8px;
  width: 50%;
}

.c30 {
  width: 100%;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  margin-left: -8px;
  margin-right: -8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c27 {
  margin-left: -8px;
  margin-right: -8px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c25 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c25::before {
  content: '\\f332';
}

.c6 {
  color: #8D9BA7;
  margin-left: 4px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f1f5';
}

.c21 {
  margin-right: 4px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c21::before {
  content: '\\f1f7';
}

.c20 {
  color: #8D9BA7;
  margin: 0px;
  margin-top: 8px;
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1;
  font-weight: 600;
}

.c19 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c19:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c19:disabled {
  opacity: 0.25;
}

.c9 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c9:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c9:disabled {
  opacity: 0.25;
}

.c13 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  font-size: 14px;
  margin-left: 24px;
  margin-right: 24px;
  margin-top: 24px;
  margin-bottom: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c32 {
  background-color: #FF5745;
  color: #FFF;
}

.c33 {
  visibility: visible;
}

.c31 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.43;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 14px;
  padding: 10px 16px;
}

.c31:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c31:focus:not(:disabled),
.c31:hover:not(:disabled) {
  color: #FFF;
  background-color: #F25341;
}

.c31:active:not(:disabled) {
  color: #FFF;
  background-color: #E64F3E;
}

.c31:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c14 {
  width: 16px;
  height: 16px;
  margin: 0 8px 0 0;
  padding: 0;
  border: 2px solid #B4BDC5;
  border-radius: 2px;
  outline: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c14 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c14::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 16px;
  font-weight: bold;
  color: #FFF;
  position: relative;
  top: -2.5px;
}

.c14:hover,
.c14:focus,
.c14:active {
  border-color: #8D9BA7;
}

.c14:checked {
  background-color: #2FCDD0;
  border-color: #2FCDD0;
}

.c14:checked ~ span {
  color: #1C2534;
}

.c14:checked::after {
  content: '\\f26b';
}

.c14:checked:hover,
.c14:checked:focus {
  background-color: #009BC0;
  border-color: #009BC0;
}

.c14:checked:active {
  background-color: #0081AA;
  border-color: #0081AA;
}

.c14:checked:disabled,
.c14:checked:disabled:hover {
  background-color: #DBDFE3;
  border-color: #DBDFE3;
}

.c14:checked.error {
  background-color: #C00316;
  border-color: #C00316;
}

.c14:disabled,
.c14:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c14:disabled ~ span,
.c14:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c14:required {
  box-shadow: none;
}

.c14.error {
  border-color: #C00316;
}

.c14.error:hover {
  border-color: #C00316;
}

.c12 {
  display: block;
  line-height: 1.5;
}

.c8 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c8::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c8::-moz-placeholder {
  color: #8D9BA7;
}

.c8:-ms-input-placeholder {
  color: #8D9BA7;
}

.c8::placeholder {
  color: #8D9BA7;
}

.c8:hover,
.c8:active {
  border-color: #B4BDC5;
}

.c8:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c8:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c8:required {
  box-shadow: none;
}

.c8.error {
  border-color: #C00316;
}

.c23 {
  position: relative;
}

.c23 input {
  padding-right: 32px;
}

.c24 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  pointer-events: none;
}

.c22 .DayPickerInput {
  display: inherit;
}

.c22 .DayPickerInput-Overlay {
  margin-top: 4px;
  border-radius: 2px;
  box-shadow: 0 0 0 1px rgba(18,52,102,0.2),0 1px 4px 0 rgba(18,52,102,0.2);
}

.c22 .DayPicker-wrapper {
  padding-bottom: 10px;
}

.c22 .DayPicker {
  color: #53616E;
}

.c22 .DayPicker-Month {
  margin: 0;
  border-collapse: separate;
  border-spacing: 6px 4px;
}

.c22 .DayPicker-NavButton--prev,
.c22 .DayPicker-NavButton--next {
  background: none;
  width: auto;
  height: 64px;
  left: auto;
  right: auto;
  padding-left: 12px;
  padding-right: 12px;
  margin: 0;
  top: 0;
}

.c22 .DayPicker-NavButton--prev::after,
.c22 .DayPicker-NavButton--next::after {
  font-family: Material-Design-Iconic-Font;
  font-size: 24px;
  color: #B4BDC5;
  line-height: 64px;
}

.c22 .DayPicker-NavButton--prev {
  left: 0;
}

.c22 .DayPicker-NavButton--prev::after {
  content: '\\f2fa';
}

.c22 .DayPicker-NavButton--next {
  right: 0;
}

.c22 .DayPicker-NavButton--next::after {
  content: '\\f2fb';
}

.c22 .DayPicker-Caption {
  font-size: 14px;
  line-height: 64px;
  text-align: center;
  margin: 0;
  padding: 0;
}

.c22 .DayPicker-Caption > div {
  font-size: inherit;
}

.c22 .DayPicker-Weekdays {
  display: table-caption;
  border-top: 1px solid #B4BDC5;
  border-bottom: 1px solid #B4BDC5;
  margin: 0;
  line-height: 8px;
}

.c22 .DayPicker-Weekday {
  color: #B4BDC5;
  font-size: 12px;
  padding: 6px 9px;
}

.c22 .DayPicker-Day {
  padding: 4px;
  font-size: 14px;
}

.c22 .DayPicker-Day--today {
  color: #000;
  font-weight: 700;
}

.c22 .DayPicker:not(.DayPicker--interactionDisabled) .DayPicker-Day:not(.DayPicker-Day--disabled):not(.DayPicker-Day--selected):not(.DayPicker-Day--outside):hover {
  border-radius: 4px;
  background-color: #D3F3F3;
}

.c22 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside) {
  border-radius: 4px;
  background-color: #2FCDD0;
}

.c22 .DayPicker-Day--selected:not(.DayPicker-Day--disabled):not(.DayPicker-Day--outside):hover {
  background-color: #2FCDD0;
}

.c22 .DayPicker-Day--outside {
  color: #8D9BA7;
}

.c22 .DayPicker-Day--disabled {
  color: #B4BDC5;
}

.c4 {
  display: inline-block;
  vertical-align: bottom;
}

.c4 .popper-container {
  background-color: #123466;
  color: #FFF;
  box-shadow: unset;
}

.c4 .popper {
  z-index: 1070;
}

.c4 .popper[data-placement^='right'] .popper-arrow {
  left: 3px;
  border-color: transparent #123466 transparent transparent;
}

.c4 .popper[data-placement^='top'] .popper-arrow {
  border-color: #123466 transparent transparent transparent;
  bottom: 3px;
}

.c4 .popper[data-placement^='left'] .popper-arrow {
  border-color: transparent transparent transparent #123466;
  right: 3px;
}

.c4 .popper[data-placement^='bottom'] .popper-arrow {
  top: 3px;
  border-color: transparent transparent #123466 transparent;
}

.c17 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c17 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c17:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c17:checked ~ span {
  color: #1C2534;
}

.c17:checked:hover {
  background: radial-gradient(circle at center,#009BC0 0,#009BC0 35%,transparent 40%);
}

.c17:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c17:checked:disabled,
.c17:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c17:disabled,
.c17:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c17:disabled ~ span,
.c17:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c17:required {
  box-shadow: none;
}

.c17:hover,
.c17:focus,
.c17:active {
  border-color: #8D9BA7;
}

.c17.error {
  border-color: #C00316;
}

.c17.error:checked,
.c17.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c16 {
  display: block;
  line-height: 1.5;
}

.c18 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c18::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c18::-moz-placeholder {
  color: #8D9BA7;
}

.c18:-ms-input-placeholder {
  color: #8D9BA7;
}

.c18::placeholder {
  color: #8D9BA7;
}

.c18:hover,
.c18:active {
  border-color: #B4BDC5;
}

.c18:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c18:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c18:required {
  box-shadow: none;
}

.c18.error {
  border-color: #C00316;
}

.c26 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c26 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c26 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c26 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c26 .Select-control::placeholder {
  color: #8D9BA7;
}

.c26 .Select-control:hover,
.c26 .Select-control:active {
  border-color: #B4BDC5;
}

.c26 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c26 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c26 .Select-control:required {
  box-shadow: none;
}

.c26 .Select-control.error {
  border-color: #C00316;
}

.c26 .Select-control:hover {
  box-shadow: none;
}

.c26 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c26.Select--multi .Select-input,
.c26 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c26.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c26.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c26.error > .Select-control {
  border-color: #C00316 !important;
}

.c26 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c26 .Select-placeholder,
.c26 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c26 .Select-placeholder,
.c26.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c26 .Select-value-label {
  font-weight: normal;
}

.c26:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c26 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c26 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c26 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c26.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c26.Select--multi .Select-value-icon:hover,
.c26.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c3 {
    margin-top: 8px;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    margin-bottom: 0px;
  }
}

@media screen and (min-width:32em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c3 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c3 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c7 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:48em) {
  .c7 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:64em) {
  .c7 {
    width: 75%;
  }
}

@media screen and (min-width:32em) {
  .c0 {
    width: 80%;
  }
}

@media screen and (min-width:48em) {
  .c0 {
    width: 75%;
  }
}

@media screen and (min-width:64em) {
  .c0 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c15 {
    margin-bottom: 0px;
  }
}

@media screen and (min-width:32em) {
  .c15 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:48em) {
  .c15 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:64em) {
  .c15 {
    width: 25%;
  }
}

@media screen and (min-width:32em) {
  .c28 {
    width: 33.33333333333333%;
  }
}

@media screen and (min-width:32em) {
  .c29 {
    width: 66.66666666666666%;
  }
}

<div>
  <p>
    Forms should be used for any data input.
  </p>
  <div
    className="c0 "
  >
    <h2>
      Create new user
    </h2>
    <div
      className=""
    >
      Example of loading data with graphql:
      <br />
      Employee count: 
      ...
    </div>
    <form
      onSubmit={[Function]}
    >
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Username
            <div
              className="c4 c5 "
            >
              <div>
                <div
                  onClick={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <i
                    className="c6 "
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            className="c7 "
          >
            <input
              aria-invalid={false}
              className="c8 c9 "
              name="username"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              required={true}
              type="text"
              value=""
            />
          </div>
        </div>
      </label>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Email
            <div
              className="c4 c5 "
            >
              <div>
                <div
                  onClick={[Function]}
                  onMouseOut={[Function]}
                  onMouseOver={[Function]}
                >
                  <i
                    className="c6 "
                  />
                </div>
              </div>
            </div>
          </div>
          <div
            className="c7 "
          >
            <input
              aria-invalid={false}
              className="c8 c9 "
              name="email"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              type="email"
              value=""
            />
          </div>
        </div>
      </label>
      <div
        className="c10 "
      >
        <div
          className="c2 "
        >
          <div
            className="c11 "
          >
            <label
              className="c12 c13 "
            >
              <input
                checked=""
                className="c14"
                name="newsletterEnabled"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="checkbox"
                value=""
              />
              <span>
                Sign up for newsletter
              </span>
            </label>
          </div>
        </div>
      </div>
      <div
        className="c10 "
      >
        <div
          className="c2 "
        >
          <div
            className="c15 "
          >
            Favorite Game
          </div>
          <div
            className="c7 "
          >
            <label
              className="c16 c13 "
            >
              <input
                checked={false}
                className="c17"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="camel-up"
              />
               
              <span>
                Camel Up
              </span>
            </label>
            <label
              className="c16 c13 "
            >
              <input
                checked={false}
                className="c17"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="risk"
              />
               
              <span>
                Risk
              </span>
            </label>
            <label
              className="c16 c13 "
            >
              <input
                checked={false}
                className="c17"
                name="game"
                onBlur={[Function]}
                onChange={[Function]}
                onDragStart={[Function]}
                onDrop={[Function]}
                onFocus={[Function]}
                type="radio"
                value="catan"
              />
               
              <span>
                Settlers of Catan
              </span>
            </label>
          </div>
        </div>
      </div>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Comment
          </div>
          <div
            className="c7 "
          >
            <textarea
              className="c18 c19 "
              name="comment"
              onBlur={[Function]}
              onChange={[Function]}
              onDragStart={[Function]}
              onDrop={[Function]}
              onFocus={[Function]}
              rows={4}
              type="text"
              value=""
            />
            <p
              className="c20"
            >
              <i
                className="c21 "
              />
              Tell us something
            </p>
          </div>
        </div>
      </label>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Most recent moon voyage *
          </div>
          <div
            className="c7 "
          >
            <div
              className="c22"
            >
              <div
                className="DayPickerInput"
                onMouseDown={[Function]}
              >
                <div
                  className="c23 "
                >
                  <input
                    className="c8 c9 "
                    disabled={false}
                    name="moonDate"
                    onBlur={[Function]}
                    onChange={[Function]}
                    onClick={[Function]}
                    onDragStart={[Function]}
                    onDrop={[Function]}
                    onFocus={[Function]}
                    onKeyDown={[Function]}
                    onKeyUp={[Function]}
                    placeholder="MM/DD/YYYY"
                    type="text"
                    value=""
                  />
                  <i
                    className="c24 c25 "
                    onClick={undefined}
                  />
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Have you been to the Moon?
          </div>
          <div
            className="c7 "
          >
            <div
              className=""
            >
              <div
                className="Select c26 Select--single is-clearable is-searchable"
                style={undefined}
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  style={undefined}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-5--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      className="Select-input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <style
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "input#undefined::-ms-clear {display: none;}",
                          }
                        }
                      />
                      <input
                        aria-activedescendant="react-select-5--value"
                        aria-describedby={undefined}
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        aria-owns=""
                        className={undefined}
                        id={undefined}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        style={
                          Object {
                            "boxSizing": "content-box",
                            "width": "5px",
                          }
                        }
                        tabIndex={undefined}
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </span>
                  <span
                    aria-label="Clear value"
                    className="Select-clear-zone"
                    onMouseDown={[Function]}
                    onTouchEnd={[Function]}
                    onTouchMove={[Function]}
                    onTouchStart={[Function]}
                    title="Clear value"
                  >
                    <span
                      className="Select-clear"
                      dangerouslySetInnerHTML={
                        Object {
                          "__html": "&times;",
                        }
                      }
                    />
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <label
        className="c1 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            Which other planets have you visited?
          </div>
          <div
            className="c7 "
          >
            <div
              className=""
            >
              <div
                className="Select c26 Select--multi is-clearable is-searchable"
                style={undefined}
              >
                <div
                  className="Select-control"
                  onKeyDown={[Function]}
                  onMouseDown={[Function]}
                  onTouchEnd={[Function]}
                  onTouchMove={[Function]}
                  onTouchStart={[Function]}
                  style={undefined}
                >
                  <span
                    className="Select-multi-value-wrapper"
                    id="react-select-6--value"
                  >
                    <div
                      className="Select-placeholder"
                    >
                      Select...
                    </div>
                    <div
                      className="Select-input"
                      style={
                        Object {
                          "display": "inline-block",
                        }
                      }
                    >
                      <style
                        dangerouslySetInnerHTML={
                          Object {
                            "__html": "input#undefined::-ms-clear {display: none;}",
                          }
                        }
                      />
                      <input
                        aria-activedescendant="react-select-6--value"
                        aria-describedby={undefined}
                        aria-expanded="false"
                        aria-haspopup="false"
                        aria-label={undefined}
                        aria-labelledby={undefined}
                        aria-owns=""
                        className={undefined}
                        id={undefined}
                        onBlur={[Function]}
                        onChange={[Function]}
                        onFocus={[Function]}
                        required={false}
                        role="combobox"
                        style={
                          Object {
                            "boxSizing": "content-box",
                            "width": "5px",
                          }
                        }
                        tabIndex={undefined}
                        value=""
                      />
                      <div
                        style={
                          Object {
                            "height": 0,
                            "left": 0,
                            "overflow": "scroll",
                            "position": "absolute",
                            "top": 0,
                            "visibility": "hidden",
                            "whiteSpace": "pre",
                          }
                        }
                      >
                        
                      </div>
                    </div>
                  </span>
                  <span
                    className="Select-arrow-zone"
                    onMouseDown={[Function]}
                  >
                    <span
                      className="Select-arrow"
                      onMouseDown={[Function]}
                    />
                  </span>
                </div>
              </div>
            </div>
          </div>
        </div>
      </label>
      <div
        className="c10 "
      >
        <div
          className="c2 "
        >
          <div
            className="c3 "
          >
            How tall are you?
          </div>
          <div
            className="c7 "
          >
            <div
              className="c27 "
            >
              <div
                className="c28 "
              >
                <input
                  aria-invalid={false}
                  className="c8 c9 "
                  name="height"
                  onBlur={[Function]}
                  onChange={[Function]}
                  onDragStart={[Function]}
                  onDrop={[Function]}
                  onFocus={[Function]}
                  type="text"
                  value=""
                />
              </div>
              <div
                className="c29 "
              >
                <div
                  className="c30 "
                >
                  <div
                    className="Select c26 Select--single is-clearable is-searchable"
                    style={undefined}
                  >
                    <div
                      className="Select-control"
                      onKeyDown={[Function]}
                      onMouseDown={[Function]}
                      onTouchEnd={[Function]}
                      onTouchMove={[Function]}
                      onTouchStart={[Function]}
                      style={undefined}
                    >
                      <span
                        className="Select-multi-value-wrapper"
                        id="react-select-7--value"
                      >
                        <div
                          className="Select-placeholder"
                        >
                          Select...
                        </div>
                        <div
                          className="Select-input"
                          style={
                            Object {
                              "display": "inline-block",
                            }
                          }
                        >
                          <style
                            dangerouslySetInnerHTML={
                              Object {
                                "__html": "input#undefined::-ms-clear {display: none;}",
                              }
                            }
                          />
                          <input
                            aria-activedescendant="react-select-7--value"
                            aria-describedby={undefined}
                            aria-expanded="false"
                            aria-haspopup="false"
                            aria-label={undefined}
                            aria-labelledby={undefined}
                            aria-owns=""
                            className={undefined}
                            id={undefined}
                            onBlur={[Function]}
                            onChange={[Function]}
                            onFocus={[Function]}
                            required={false}
                            role="combobox"
                            style={
                              Object {
                                "boxSizing": "content-box",
                                "width": "5px",
                              }
                            }
                            tabIndex={undefined}
                            value=""
                          />
                          <div
                            style={
                              Object {
                                "height": 0,
                                "left": 0,
                                "overflow": "scroll",
                                "position": "absolute",
                                "top": 0,
                                "visibility": "hidden",
                                "whiteSpace": "pre",
                              }
                            }
                          >
                            
                          </div>
                        </div>
                      </span>
                      <span
                        aria-label="Clear value"
                        className="Select-clear-zone"
                        onMouseDown={[Function]}
                        onTouchEnd={[Function]}
                        onTouchMove={[Function]}
                        onTouchStart={[Function]}
                        title="Clear value"
                      >
                        <span
                          className="Select-clear"
                          dangerouslySetInnerHTML={
                            Object {
                              "__html": "&times;",
                            }
                          }
                        />
                      </span>
                      <span
                        className="Select-arrow-zone"
                        onMouseDown={[Function]}
                      >
                        <span
                          className="Select-arrow"
                          onMouseDown={[Function]}
                        />
                      </span>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c10 "
      >
        <div
          className="c2 "
        >
          <div
            className="c11 "
          >
            <button
              className="c31 c32 "
              disabled={false}
              mode="primary"
              type="submit"
            >
              <div
                className="c33 "
              >
                Sign Up
              </div>
            </button>
          </div>
        </div>
      </div>
    </form>
  </div>
</div>
`;

exports[`Storyshots Input default 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <input
    className="c1 c2 "
    type="text"
  />
</div>
`;

exports[`Storyshots Input default value 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <input
    className="c1 c2 "
    defaultValue="Default"
    type="text"
  />
</div>
`;

exports[`Storyshots Input disabled 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <input
    className="c1 c2 "
    disabled={true}
    type="text"
    value="Cannot be edited, focused or submitted"
  />
</div>
`;

exports[`Storyshots Input error 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <input
    className="error c1 c2 "
    defaultValue="Invalid input"
    type="text"
  />
</div>
`;

exports[`Storyshots Input fires events 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <input
    className="c1 c2 "
    defaultValue="Try interacting"
    onBlur={[Function]}
    onChange={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    type="text"
  />
</div>
`;

exports[`Storyshots Input placeholder 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <input
    className="c1 c2 "
    placeholder="Placeholder"
    type="text"
  />
</div>
`;

exports[`Storyshots Input readOnly 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <input
    className="c1 c2 "
    readOnly={true}
    type="text"
    value="Cannot be edited, but can be focused and submitted"
  />
</div>
`;

exports[`Storyshots Input sizes 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  width: 33.33333333333333%;
}

.c3 {
  margin-bottom: 5px;
  width: 66.66666666666666%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c5 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c5:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c5:disabled {
  opacity: 0.25;
}

.c6 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c6::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c6::-moz-placeholder {
  color: #8D9BA7;
}

.c6:-ms-input-placeholder {
  color: #8D9BA7;
}

.c6::placeholder {
  color: #8D9BA7;
}

.c6:hover,
.c6:active {
  border-color: #B4BDC5;
}

.c6:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c6:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c6:required {
  box-shadow: none;
}

.c6.error {
  border-color: #C00316;
}

.c4 {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 48px;
  line-height: 1.43;
}

.c4::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c4::-moz-placeholder {
  color: #8D9BA7;
}

.c4:-ms-input-placeholder {
  color: #8D9BA7;
}

.c4::placeholder {
  color: #8D9BA7;
}

.c4:hover,
.c4:active {
  border-color: #B4BDC5;
}

.c4:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c4:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c4:required {
  box-shadow: none;
}

.c4.error {
  border-color: #C00316;
}

.c7 {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  height: 32px;
  line-height: 1.43;
}

.c7::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c7::-moz-placeholder {
  color: #8D9BA7;
}

.c7:-ms-input-placeholder {
  color: #8D9BA7;
}

.c7::placeholder {
  color: #8D9BA7;
}

.c7:hover,
.c7:active {
  border-color: #B4BDC5;
}

.c7:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c7:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c7:required {
  box-shadow: none;
}

.c7.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      Large
    </div>
    <div
      className="c3 "
    >
      <input
        className="c4 c5 "
        placeholder="Placeholder"
        type="text"
      />
    </div>
    <div
      className="c2 "
    >
      Medium
    </div>
    <div
      className="c3 "
    >
      <input
        className="c6 c5 "
        placeholder="Placeholder"
        type="text"
      />
    </div>
    <div
      className="c2 "
    >
      Small
    </div>
    <div
      className="c3 "
    >
      <input
        className="c7 c5 "
        placeholder="Placeholder"
        type="text"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Input util props 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  margin-top: 50px;
  margin-bottom: 50px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <input
    className="c1 c2 "
    placeholder="Placeholder"
    type="text"
  />
</div>
`;

exports[`Storyshots Input with icon 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 {
  margin-bottom: 16px;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  font-size: 14px;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f1c3';
}

.c9 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  font-size: 16px;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c9::before {
  content: '\\f1c3';
}

.c11 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  font-size: 24px;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c11::before {
  content: '\\f1c3';
}

.c4 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  display: inline-block;
  vertical-align: middle;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c4:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c4:disabled {
  opacity: 0.25;
}

.c7 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c7::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c7::-moz-placeholder {
  color: #8D9BA7;
}

.c7:-ms-input-placeholder {
  color: #8D9BA7;
}

.c7::placeholder {
  color: #8D9BA7;
}

.c7:hover,
.c7:active {
  border-color: #B4BDC5;
}

.c7:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c7:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c7:required {
  box-shadow: none;
}

.c7.error {
  border-color: #C00316;
}

.c10 {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 48px;
  line-height: 1.43;
}

.c10::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c10::-moz-placeholder {
  color: #8D9BA7;
}

.c10:-ms-input-placeholder {
  color: #8D9BA7;
}

.c10::placeholder {
  color: #8D9BA7;
}

.c10:hover,
.c10:active {
  border-color: #B4BDC5;
}

.c10:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c10:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c10:required {
  box-shadow: none;
}

.c10.error {
  border-color: #C00316;
}

.c3 {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  height: 32px;
  line-height: 1.43;
}

.c3::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c3::-moz-placeholder {
  color: #8D9BA7;
}

.c3:-ms-input-placeholder {
  color: #8D9BA7;
}

.c3::placeholder {
  color: #8D9BA7;
}

.c3:hover,
.c3:active {
  border-color: #B4BDC5;
}

.c3:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c3:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c3:required {
  box-shadow: none;
}

.c3.error {
  border-color: #C00316;
}

.c2 {
  position: relative;
}

.c2 input {
  padding-right: 32px;
}

.c5 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 8px;
  cursor: pointer;
}

.c8 {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  color: #B4BDC5;
  right: 16px;
  cursor: pointer;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      <input
        className="c3 c4 "
        placeholder="Search..."
        type="text"
      />
      <i
        className="c5 c6 "
        onClick={[Function]}
      />
    </div>
    <div
      className="c2 "
    >
      <input
        className="c7 c4 "
        placeholder="Search..."
        type="text"
      />
      <i
        className="c8 c9 "
        onClick={[Function]}
      />
    </div>
    <div
      className="c2 "
    >
      <input
        className="c10 c4 "
        placeholder="Search..."
        type="text"
      />
      <i
        className="c8 c11 "
        onClick={[Function]}
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Inputs with mask Number Inputs 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  width: 33.33333333333333%;
}

.c3 {
  margin-bottom: 5px;
  width: 66.66666666666666%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c4 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  height: 40px;
  line-height: 1.43;
}

.c4::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c4::-moz-placeholder {
  color: #8D9BA7;
}

.c4:-ms-input-placeholder {
  color: #8D9BA7;
}

.c4::placeholder {
  color: #8D9BA7;
}

.c4:hover,
.c4:active {
  border-color: #B4BDC5;
}

.c4:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c4:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c4:required {
  box-shadow: none;
}

.c4.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      Number Input
    </div>
    <div
      className="c3 "
    >
      <input
        className="c4"
        defaultValue="-333"
        onInput={[Function]}
        placeholder="number"
        s="medium"
      />
    </div>
    <div
      className="c2 "
    >
      Percentage Input
    </div>
    <div
      className="c3 "
    >
      <input
        className="c4"
        defaultValue="33"
        onInput={[Function]}
        placeholder="percentage"
        s="medium"
      />
    </div>
    <div
      className="c2 "
    >
      Money Input
    </div>
    <div
      className="c3 "
    >
      <input
        className="c4"
        defaultValue="33333"
        onInput={[Function]}
        placeholder="Enter amount"
        s="medium"
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Link default 1`] = `
.c0 {
  background-color: #FFF;
  padding: 24px;
}

.c1 {
  text-decoration: none;
  color: #009BC0;
  cursor: pointer;
}

.c1:link,
.c1:visited {
  color: #009BC0;
}

.c1:hover {
  color: #0081AA;
}

.c1:active {
  color: #144E6F;
}

<div
  className="c0 "
>
  <a
    className="c1 "
    href="https://help.zenefits.com/"
    rel="noreferrer noopener "
    target="_blank"
  >
    This is a link. It'll go to help.zenefits.com
  </a>
</div>
`;

exports[`Storyshots NavBar lists with icon 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c3 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c3::before {
  content: '\\f26b';
}

.c5 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c5::before {
  content: '';
}

.c18 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c18::before {
  content: '\\f190';
}

.c0 {
  color: #1C2534;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c0 ul,
.c0 ol {
  list-style: none;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0;
  padding: 0;
}

.c0 ol {
  list-style-position: inside;
  counter-reset: item;
}

.c0 li {
  display: list-item;
  position: relative;
}

.c0 li > * {
  margin: 8px 0;
  padding: 0 8px;
  border-left: 2px solid transparent;
}

.c0 ol li > *::before {
  content: counters(item,'.') '. ';
  counter-increment: item;
  width: 20px;
  display: inline-block;
}

.c0 ul ul,
.c0 ol ol {
  margin-left: 20px;
}

.c0 ul ul li > *::before,
.c0 ol ol li > *::before {
  width: auto;
}

.c0 .completed-link::before,
.c0 .disabled-link::before {
  content: '';
}

.c0 .active-link {
  opacity: 1;
  display: inline-block;
  border-left-color: #FF5745;
}

.c0 .nav-icon {
  position: absolute;
  left: 12px;
}

.c2 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c2:hover {
  opacity: 1;
  color: inherit;
}

.c4 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c4:hover {
  opacity: 1;
  color: inherit;
}

.c6 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c6:hover {
  opacity: 1;
  color: inherit;
}

.c7 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c7:hover {
  opacity: 1;
  color: inherit;
}

.c8 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c8:hover {
  opacity: 1;
  color: inherit;
}

.c9 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c9:hover {
  opacity: 1;
  color: inherit;
}

.c10 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c10:hover {
  opacity: 1;
  color: inherit;
}

.c11 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c11:hover {
  opacity: 1;
  color: inherit;
}

.c12 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c12:hover {
  opacity: 1;
  color: inherit;
}

.c13 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c13:hover {
  opacity: 1;
  color: inherit;
}

.c14 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c14:hover {
  opacity: 1;
  color: inherit;
}

.c15 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c15:hover {
  opacity: 1;
  color: inherit;
}

.c16 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c16:hover {
  opacity: 1;
  color: inherit;
}

.c17 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  pointer-events: none;
  opacity: 0.3;
  display: inline-block;
}

.c17:hover {
  opacity: 1;
  color: inherit;
}

<div
  className=""
>
  <div
    className="c0 c1 "
    mode="side"
  >
    <ol>
      <li>
        <a
          className="completed-link c2"
          disabled={undefined}
        >
          <i
            className="nav-icon c3 "
          />
           
          Completed Step
        </a>
      </li>
      <li>
        <a
          className="active-link c4"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c6"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c7"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c8"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c9"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c10"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c11"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c12"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c13"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c14"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c15"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Default Step
        </a>
      </li>
      <li>
        <a
          className="c16"
          disabled={undefined}
        >
          <i
            className="nav-icon c5 "
          />
           
          Disabled Step
        </a>
      </li>
      <li>
        <a
          className="disabled-link c17"
          disabled={true}
        >
          <i
            className="nav-icon c18 "
          />
           
          Disabled Step
        </a>
      </li>
    </ol>
  </div>
</div>
`;

exports[`Storyshots NavBar nested lists 1`] = `
.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c0 {
  color: #1C2534;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c0 ul,
.c0 ol {
  list-style: none;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0;
  padding: 0;
}

.c0 ol {
  list-style-position: inside;
  counter-reset: item;
}

.c0 li {
  display: list-item;
  position: relative;
}

.c0 li > * {
  margin: 8px 0;
  padding: 0 8px;
  border-left: 2px solid transparent;
}

.c0 ol li > *::before {
  content: counters(item,'.') '. ';
  counter-increment: item;
  width: 20px;
  display: inline-block;
}

.c0 ul ul,
.c0 ol ol {
  margin-left: 20px;
}

.c0 ul ul li > *::before,
.c0 ol ol li > *::before {
  width: auto;
}

.c0 .completed-link::before,
.c0 .disabled-link::before {
  content: '';
}

.c0 .active-link {
  opacity: 1;
  display: inline-block;
  border-left-color: #FF5745;
}

.c0 .nav-icon {
  position: absolute;
  left: 12px;
}

.c2 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c2:hover {
  opacity: 1;
  color: inherit;
}

.c3 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c3:hover {
  opacity: 1;
  color: inherit;
}

.c4 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c4:hover {
  opacity: 1;
  color: inherit;
}

.c5 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c5:hover {
  opacity: 1;
  color: inherit;
}

.c6 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c6:hover {
  opacity: 1;
  color: inherit;
}

.c7 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c7:hover {
  opacity: 1;
  color: inherit;
}

.c8 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c8:hover {
  opacity: 1;
  color: inherit;
}

.c9 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c9:hover {
  opacity: 1;
  color: inherit;
}

.c10 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c10:hover {
  opacity: 1;
  color: inherit;
}

.c11 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c11:hover {
  opacity: 1;
  color: inherit;
}

<div
  className=""
>
  <div
    className="c0 c1 "
    mode="side"
  >
    <ol>
      <li>
        <a
          className="c2"
          disabled={undefined}
        >
           
          Tab 1
        </a>
      </li>
      <li>
        <a
          className="c3"
          disabled={undefined}
        >
           
          Tab 2
        </a>
      </li>
      <div
        className="c0 c1 "
        mode="side"
      >
        <ol>
          <li>
            <a
              className="c4"
              disabled={undefined}
            >
               
              Nested Tab 1
            </a>
          </li>
          <li>
            <a
              className="c5"
              disabled={undefined}
            >
               
               Nested Tab 2
            </a>
          </li>
        </ol>
      </div>
      <li>
        <a
          className="c6"
          disabled={undefined}
        >
           
          Tab 3
        </a>
      </li>
      <div
        className="c0 c1 "
        mode="side"
      >
        <ol>
          <li>
            <a
              className="active-link c7"
              disabled={undefined}
            >
               
              Nested Tab 1
            </a>
          </li>
          <li>
            <a
              className="c8"
              disabled={undefined}
            >
               
               Nested Tab 2
            </a>
          </li>
          <div
            className="c0 c1 "
            mode="side"
          >
            <ol>
              <li>
                <a
                  className="c9"
                  disabled={undefined}
                >
                   
                  Nested Tab 1
                </a>
              </li>
              <li>
                <a
                  className="c10"
                  disabled={undefined}
                >
                   
                   Nested Tab 2
                </a>
              </li>
            </ol>
          </div>
        </ol>
      </div>
      <li>
        <a
          className="c11"
          disabled={undefined}
        >
           
          Tab 4
        </a>
      </li>
    </ol>
  </div>
</div>
`;

exports[`Storyshots NavBar product and list 1`] = `
.c0 {
  margin-right: 16px;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c9 {
  background-color: #123466;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c1 {
  color: #1C2534;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c1 ul,
.c1 ol {
  list-style: none;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  margin: 0;
  padding: 0;
}

.c1 ol {
  list-style-position: inside;
  counter-reset: item;
}

.c1 li {
  display: inline-block;
  position: relative;
}

.c1 li > * {
  margin: 0 16px;
  padding: 13px 0;
  border-bottom: 2px solid transparent;
}

.c1 ol li > *::before {
  content: counters(item,'.') '. ';
  counter-increment: item;
  width: 20px;
  display: inline-block;
}

.c1 ul ul,
.c1 ol ol {
  margin-left: 20px;
}

.c1 ul ul li > *::before,
.c1 ol ol li > *::before {
  width: auto;
}

.c1 .completed-link::before,
.c1 .disabled-link::before {
  content: '';
}

.c1 .active-link {
  opacity: 1;
  display: inline-block;
  border-bottom-color: #FF5745;
}

.c1 .nav-icon {
  position: absolute;
  left: 12px;
}

.c16 {
  color: #1C2534;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: flex-end;
  -webkit-box-align: flex-end;
  -ms-flex-align: flex-end;
  align-items: flex-end;
}

.c16 ul,
.c16 ol {
  list-style: none;
  -webkit-flex-direction: column;
  -ms-flex-direction: column;
  flex-direction: column;
  margin: 0;
  padding: 0;
}

.c16 ol {
  list-style-position: inside;
  counter-reset: item;
}

.c16 li {
  display: list-item;
  position: relative;
}

.c16 li > * {
  margin: 8px 0;
  padding: 0 8px;
  border-left: 2px solid transparent;
}

.c16 ol li > *::before {
  content: counters(item,'.') '. ';
  counter-increment: item;
  width: 20px;
  display: inline-block;
}

.c16 ul ul,
.c16 ol ol {
  margin-left: 20px;
}

.c16 ul ul li > *::before,
.c16 ol ol li > *::before {
  width: auto;
}

.c16 .completed-link::before,
.c16 .disabled-link::before {
  content: '';
}

.c16 .active-link {
  opacity: 1;
  display: inline-block;
  border-left-color: #FF5745;
}

.c16 .nav-icon {
  position: absolute;
  left: 12px;
}

.c3 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c3:hover {
  opacity: 1;
  color: inherit;
}

.c4 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c4:hover {
  opacity: 1;
  color: inherit;
}

.c5 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c5:hover {
  opacity: 1;
  color: inherit;
}

.c6 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c6:hover {
  opacity: 1;
  color: inherit;
}

.c7 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c7:hover {
  opacity: 1;
  color: inherit;
}

.c8 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c8:hover {
  opacity: 1;
  color: inherit;
}

.c10 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c10:hover {
  opacity: 1;
  color: inherit;
}

.c11 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c11:hover {
  opacity: 1;
  color: inherit;
}

.c12 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c12:hover {
  opacity: 1;
  color: inherit;
}

.c13 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c13:hover {
  opacity: 1;
  color: inherit;
}

.c14 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c14:hover {
  opacity: 1;
  color: inherit;
}

.c15 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c15:hover {
  opacity: 1;
  color: inherit;
}

.c17 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c17:hover {
  opacity: 1;
  color: inherit;
}

.c18 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c18:hover {
  opacity: 1;
  color: inherit;
}

.c19 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c19:hover {
  opacity: 1;
  color: inherit;
}

.c20 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c20:hover {
  opacity: 1;
  color: inherit;
}

.c21 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c21:hover {
  opacity: 1;
  color: inherit;
}

.c22 {
  opacity: 0.65;
  cursor: pointer;
  text-decoration: none;
  color: inherit;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
  display: inline-block;
}

.c22:hover {
  opacity: 1;
  color: inherit;
}

<div
  className=""
>
  <div
    className="c0 "
  >
    <div
      className="c0 "
    >
      <div
        className="c1 c2 "
        mode="list"
      >
        <ul>
           
          <li>
            <a
              className="c3"
              disabled={undefined}
              to="1url.com"
            >
               
              link1
            </a>
          </li>
          <li>
            <a
              className="c4"
              disabled={undefined}
              to="2url.com"
            >
               
              link2
            </a>
          </li>
          <li>
            <a
              className="c5"
              disabled={undefined}
              to="3url.com"
            >
               
              link3
            </a>
          </li>
          <li>
            <a
              className="c6"
              disabled={undefined}
              to="4url.com"
            >
               
              link4
            </a>
          </li>
          <li>
            <a
              className="active-link c7"
              disabled={undefined}
              to="5url.com"
            >
               
              link5
            </a>
          </li>
          <li>
            <a
              className="c8"
              disabled={undefined}
              to="6url.com"
            >
               
              link6
            </a>
          </li>
           
        </ul>
      </div>
      <div
        className="c1 c9 "
        mode="product"
      >
        <ul>
           
          <li>
            <a
              className="c10"
              disabled={undefined}
              to="1url.com"
            >
               
              link1
            </a>
          </li>
          <li>
            <a
              className="c11"
              disabled={undefined}
              to="2url.com"
            >
               
              link2
            </a>
          </li>
          <li>
            <a
              className="c12"
              disabled={undefined}
              to="3url.com"
            >
               
              link3
            </a>
          </li>
          <li>
            <a
              className="c13"
              disabled={undefined}
              to="4url.com"
            >
               
              link4
            </a>
          </li>
          <li>
            <a
              className="active-link c14"
              disabled={undefined}
              to="5url.com"
            >
               
              link5
            </a>
          </li>
          <li>
            <a
              className="c15"
              disabled={undefined}
              to="6url.com"
            >
               
              link6
            </a>
          </li>
           
        </ul>
      </div>
    </div>
    <div
      className="c16 c2 "
      mode="side"
    >
      <ul>
         
        <li>
          <a
            className="c17"
            disabled={undefined}
            to="1url.com"
          >
             
            link1
          </a>
        </li>
        <li>
          <a
            className="c18"
            disabled={undefined}
            to="2url.com"
          >
             
            link2
          </a>
        </li>
        <li>
          <a
            className="c19"
            disabled={undefined}
            to="3url.com"
          >
             
            link3
          </a>
        </li>
        <li>
          <a
            className="c20"
            disabled={undefined}
            to="4url.com"
          >
             
            link4
          </a>
        </li>
        <li>
          <a
            className="active-link c21"
            disabled={undefined}
            to="5url.com"
          >
             
            link5
          </a>
        </li>
        <li>
          <a
            className="c22"
            disabled={undefined}
            to="6url.com"
          >
             
            link6
          </a>
        </li>
         
      </ul>
    </div>
  </div>
  <div
    className=""
  >
    <p>
      To Link to a react-router RouterNavLink:
    </p>
    <pre>
      &lt;NavBar mode="product"&gt;
  &lt;NavBar.RouterNavLink to={\`/some/\${id}\`}&gt;Go to some route&lt;/NavBar.RouteNavLink&gt;
&lt;/NavBar&gt;
    </pre>
  </div>
</div>
`;

exports[`Storyshots Popover default 1`] = `
.c1 {
  margin: 50px;
}

.c2 {
  background-color: #53616E;
  color: #FFF;
  padding: 10px;
  width: auto;
}

.c3 {
  margin-left: 50px;
  margin-right: 50px;
  margin-top: 300px;
  margin-bottom: 300px;
}

.c4 {
  margin-left: 50px;
  margin-right: 50px;
  margin-top: 100px;
  margin-bottom: 100px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div>
      <div
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <div
          className="c2 "
        >
          Click me (bottom)
        </div>
      </div>
    </div>
  </div>
  <div
    className="c1 "
  >
    <div>
      <div
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <div
          className="c2 "
        >
          Hover me
        </div>
      </div>
    </div>
  </div>
  <div
    className="c3 "
  >
    <div>
      <div
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <div
          className="c2 "
        >
          Click me (top)
        </div>
      </div>
    </div>
  </div>
  <div
    className="c4 "
  >
    <div>
      <div
        onClick={[Function]}
        onMouseOut={[Function]}
        onMouseOver={[Function]}
      >
        <div
          className="c2 "
        >
          Click me (left)
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Popover open by default 1`] = `
.c1 {
  background-color: #53616E;
  color: #FFF;
  padding: 10px;
  width: auto;
}

.c0 {
  margin: 50px;
  width: 20%;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c5 {
  margin: 0px;
  padding: 10px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c4 {
  margin: 8px;
  border-radius: 2px;
  background-color: #FFF;
  box-shadow: 0 2px 8px 0 rgba(18,52,102,0.2),0 0 0 1px rgba(18,52,102,0.15);
}

.c2 .popper {
  z-index: 1060;
}

.c2 .popper .popper-arrow {
  height: 0;
  width: 0;
  border-style: solid;
  position: absolute;
}

.c2 .popper[data-placement^='right'] .popper-arrow {
  border-width: 5px 5px 5px 0;
  border-color: transparent #000 transparent transparent;
}

.c2 .popper[data-placement^='top'] .popper-arrow {
  border-width: 5px 5px 0 5px;
  border-color: #000 transparent transparent transparent;
  bottom: 0;
  margin-top: 0;
  margin-bottom: 0;
}

.c2 .popper[data-placement^='left'] .popper-arrow {
  border-width: 5px 0 5px 5px;
  border-color: transparent transparent transparent #000;
  right: 0;
  margin-left: 0;
  margin-right: 0;
}

.c2 .popper[data-placement^='bottom'] .popper-arrow {
  border-width: 0 5px 5px 5px;
  border-color: transparent transparent #000 transparent;
}

<div
  className="c0 "
>
  <div>
    <div
      onClick={[Function]}
      onMouseOut={[Function]}
      onMouseOver={[Function]}
    >
      <div
        className="c1 "
      >
        Click me
      </div>
    </div>
    <div
      className="c2 c3 "
    >
      <div
        className="popper"
        data-placement={undefined}
        data-x-out-of-boundaries={undefined}
        style={
          Object {
            "opacity": 0,
            "pointerEvents": "none",
            "position": "absolute",
          }
        }
      >
        <span
          className="popper-arrow"
          style={Object {}}
        />
        <div
          className="popper-container c4 c3 "
        >
          <p
            className="c5"
          >
            I am a popover... 
            click
             to hide.
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio Toggle default 1`] = `
.c1 {
  width: 100%;
}

.c3 {
  margin-left: 24px;
  margin-right: 24px;
}

.c13 {
  margin: 24px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  margin-top: 50px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c14 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c14::before {
  content: '\\f26b';
}

.c15 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c15::before {
  content: '\\f136';
}

.c4 {
  margin: 0px;
  margin-top: 8px;
  margin-bottom: 8px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c7 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c10 {
  background-color: #FFF;
  padding: 8px 16px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  color: #B4BDC5;
  text-align: center;
  vertical-align: middle;
  overflow: hidden;
  height: 100%;
  box-shadow: 0 0 0 1px #D6DEE9;
  border-radius: 2px 0 0 2px;
}

.c12 {
  background-color: #FFF;
  padding: 8px 16px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  color: #B4BDC5;
  text-align: center;
  vertical-align: middle;
  overflow: hidden;
  height: 100%;
  box-shadow: 0 0 0 1px #D6DEE9;
  border-radius: 0 2px 2px 0;
}

.c8 {
  margin: 0;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c8:checked ~ .c9 {
  color: #FFF;
  background-color: #84C341;
}

.c8:checked ~ .c11 {
  color: #FFF;
  background-color: #FF897C;
}

.c8:disabled ~ * {
  cursor: not-allowed;
}

.c8:hover:not(:disabled) ~ * {
  box-shadow: 0 0 0 1px #B4BDC5;
  z-index: 1;
}

.c8:active:not(:disabled) ~ * {
  box-shadow: 0 0 0 1px #8D9BA7;
}

.c6 {
  cursor: pointer;
  margin: 0;
}

.c5 {
  border-radius: 2px;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
}

@media screen and (min-width:32em) {
  .c1 {
    width: 66.66666666666666%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      <div
        className="c3 "
      >
        <p
          className="c4"
        >
           Neutral
        </p>
        <div
          className="c5 c0 "
        >
          <label
            className="c6 c7 "
          >
            <input
              className="c8"
              defaultChecked={false}
              name="option1"
              type="radio"
              value="on"
            />
            <div
              className="c9 c10 "
            >
              On Track
            </div>
          </label>
          <label
            className="c6 c7 "
          >
            <input
              className="c8"
              defaultChecked={false}
              name="option1"
              type="radio"
              value="off"
            />
            <div
              className="c11 c12 "
            >
              Off Track
            </div>
          </label>
        </div>
      </div>
      <div
        className="c3 "
      >
        <p
          className="c4"
        >
           Good Checked
        </p>
        <div
          className="c5 c0 "
        >
          <label
            className="c6 c7 "
          >
            <input
              className="c8"
              defaultChecked={true}
              name="option2"
              type="radio"
              value="exampleOn"
            />
            <div
              className="c9 c10 "
            >
              On Track
            </div>
          </label>
          <label
            className="c6 c7 "
          >
            <input
              className="c8"
              defaultChecked={false}
              name="option2"
              type="radio"
              value="exampleOff"
            />
            <div
              className="c11 c12 "
            >
              Off Track
            </div>
          </label>
        </div>
      </div>
      <div
        className="c3 "
      >
        <p
          className="c4"
        >
           Bad Checked
        </p>
        <div
          className="c5 c0 "
        >
          <label
            className="c6 c7 "
          >
            <input
              className="c8"
              defaultChecked={false}
              name="option3"
              type="radio"
              value="exampleOn"
            />
            <div
              className="c9 c10 "
            >
              On Track
            </div>
          </label>
          <label
            className="c6 c7 "
          >
            <input
              className="c8"
              defaultChecked={true}
              name="option3"
              type="radio"
              value="exampleOff"
            />
            <div
              className="c11 c12 "
            >
              Off Track
            </div>
          </label>
        </div>
      </div>
    </div>
    <div
      className="c13 "
    >
      <p
        className="c4"
      >
         Icons
      </p>
      <div
        className="c5 c0 "
      >
        <label
          className="c6 c7 "
        >
          <input
            className="c8"
            defaultChecked={false}
            name="option4"
            type="radio"
            value="on"
          />
          <div
            className="c9 c10 "
          >
            <i
              className="c14 "
            />
          </div>
        </label>
        <label
          className="c6 c7 "
        >
          <input
            className="c8"
            defaultChecked={false}
            name="option4"
            type="radio"
            value="off"
          />
          <div
            className="c11 c12 "
          >
            <i
              className="c15 "
            />
          </div>
        </label>
      </div>
    </div>
    <div
      className="c13 "
    >
      <p
        className="c4"
      >
         Disabled
      </p>
      <div
        className="c5 c0 "
      >
        <label
          className="c6 c7 "
        >
          <input
            className="c8"
            defaultChecked={false}
            disabled={true}
            name="option5"
            type="radio"
            value="on"
          />
          <div
            className="c9 c10 "
          >
            On Track
          </div>
        </label>
        <label
          className="c6 c7 "
        >
          <input
            className="c8"
            defaultChecked={false}
            disabled={true}
            name="option5"
            type="radio"
            value="off"
          />
          <div
            className="c11 c12 "
          >
            Off Track
          </div>
        </label>
      </div>
    </div>
    <div
      className="c13 "
    >
      <p
        className="c4"
      >
         Handles events
      </p>
      <div
        className="c5 c0 "
      >
        <label
          className="c6 c7 "
        >
          <input
            className="c8"
            defaultChecked={false}
            name="option6"
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            type="radio"
            value="on"
          />
          <div
            className="c9 c10 "
          >
            On Track
          </div>
        </label>
        <label
          className="c6 c7 "
        >
          <input
            className="c8"
            defaultChecked={false}
            name="option6"
            onBlur={[Function]}
            onChange={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            type="radio"
            value="off"
          />
          <div
            className="c11 c12 "
          >
            Off Track
          </div>
        </label>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio default 1`] = `
.c2 {
  width: 100%;
}

.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  font-size: 14px;
  margin-bottom: 4px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked:hover {
  background: radial-gradient(circle at center,#009BC0 0,#009BC0 35%,transparent 40%);
}

.c5:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5:required {
  box-shadow: none;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:checked,
.c5.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c3 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c1 {
    width: 33.33333333333333%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 "
  >
    Label
  </label>
  <div
    className="c2 "
  >
    <div
      className=""
    >
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Option 1
        </span>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Option 2
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio default value 1`] = `
.c2 {
  width: 100%;
}

.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  font-size: 14px;
  margin-bottom: 4px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked:hover {
  background: radial-gradient(circle at center,#009BC0 0,#009BC0 35%,transparent 40%);
}

.c5:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5:required {
  box-shadow: none;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:checked,
.c5.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c3 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c1 {
    width: 33.33333333333333%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 "
  >
    Label
  </label>
  <div
    className="c2 "
  >
    <div
      className=""
    >
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Option 1
        </span>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          defaultChecked={true}
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Option 2 (default)
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio disabled 1`] = `
.c2 {
  width: 100%;
}

.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  font-size: 14px;
  margin-bottom: 4px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked:hover {
  background: radial-gradient(circle at center,#009BC0 0,#009BC0 35%,transparent 40%);
}

.c5:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5:required {
  box-shadow: none;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:checked,
.c5.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c3 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c1 {
    width: 33.33333333333333%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 "
  >
    Label
  </label>
  <div
    className="c2 "
  >
    <div
      className=""
    >
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          disabled={true}
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Disabled
        </span>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Okay
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio error 1`] = `
.c2 {
  width: 100%;
}

.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  font-size: 14px;
  margin-bottom: 4px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked:hover {
  background: radial-gradient(circle at center,#009BC0 0,#009BC0 35%,transparent 40%);
}

.c5:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5:required {
  box-shadow: none;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:checked,
.c5.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c3 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c1 {
    width: 33.33333333333333%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 "
  >
    Label
  </label>
  <div
    className="c2 "
  >
    <div
      className=""
    >
      <label
        className="c3 c4 "
      >
        <input
          className="error c5"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Error
        </span>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Okay
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio handles events 1`] = `
.c2 {
  width: 100%;
}

.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c1 {
  font-size: 14px;
  margin-bottom: 4px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked:hover {
  background: radial-gradient(circle at center,#009BC0 0,#009BC0 35%,transparent 40%);
}

.c5:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5:required {
  box-shadow: none;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:checked,
.c5.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c3 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c1 {
    width: 33.33333333333333%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 "
  >
    Label
  </label>
  <div
    className="c2 "
  >
    <div
      className=""
    >
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="option"
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          type="radio"
          value="one"
        />
         
        <span>
          Option 1
        </span>
      </label>
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="option"
          onBlur={[Function]}
          onChange={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onKeyUp={[Function]}
          type="radio"
          value="two"
        />
         
        <span>
          Option 2
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Radio supports util props 1`] = `
.c2 {
  width: 100%;
}

.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c1 {
  font-size: 14px;
  margin-bottom: 4px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c4 {
  font-size: 14px;
  margin-top: 20px;
  margin-bottom: 20px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 {
  font-size: 24px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c5 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  background: transparent;
  outline: none;
  border: 2px solid #B4BDC5;
  border-radius: 50%;
  width: 16px;
  height: 16px;
  margin: 0 5px 0 0;
  vertical-align: text-bottom;
  cursor: pointer;
}

.c5 ~ span {
  cursor: pointer;
  color: #53616E;
}

.c5:checked {
  background: radial-gradient(circle at center,#2FCDD0 0,#2FCDD0 35%,transparent 40%);
}

.c5:checked ~ span {
  color: #1C2534;
}

.c5:checked:hover {
  background: radial-gradient(circle at center,#009BC0 0,#009BC0 35%,transparent 40%);
}

.c5:checked:active {
  background: radial-gradient(circle at center,#0081AA 0,#0081AA 35%,transparent 40%);
}

.c5:checked:disabled,
.c5:checked:disabled:hover {
  background: radial-gradient(circle at center,#DBDFE3 0,#DBDFE3 35%,transparent 40%);
}

.c5:disabled,
.c5:disabled:hover {
  border-color: #DBDFE3;
  cursor: not-allowed;
}

.c5:disabled ~ span,
.c5:disabled:hover ~ span {
  cursor: not-allowed;
  color: #8D9BA7;
}

.c5:required {
  box-shadow: none;
}

.c5:hover,
.c5:focus,
.c5:active {
  border-color: #8D9BA7;
}

.c5.error {
  border-color: #C00316;
}

.c5.error:checked,
.c5.error:hover {
  background: radial-gradient(circle at center,#C00316 0,#C00316 35%,transparent 40%);
}

.c3 {
  display: block;
  line-height: 1.5;
}

@media screen and (min-width:32em) {
  .c2 {
    width: 66.66666666666666%;
  }
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

@media screen and (min-width:32em) {
  .c1 {
    width: 33.33333333333333%;
  }
}

<div
  className="c0 "
>
  <label
    className="c1 "
  >
    Label
  </label>
  <div
    className="c2 "
  >
    <div
      className=""
    >
      <label
        className="c3 c4 "
      >
        <input
          className="c5"
          name="option"
          type="radio"
          value="one"
        />
         
        <span>
          Option 1 (margin)
        </span>
      </label>
      <label
        className="c3 c6 "
      >
        <input
          className="c5"
          name="option"
          type="radio"
          value="two"
        />
         
        <span>
          Option 2 (font)
        </span>
      </label>
    </div>
  </div>
</div>
`;

exports[`Storyshots Range Basic 1`] = `
.c1 {
  margin-left: 24px;
}

.c0 {
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c3 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c2 {
  margin: 0px;
  margin-top: 24px;
  margin-bottom: 8px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c8 {
  margin: 0px;
  margin-top: 24px;
  margin-bottom: 24px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c10 {
  margin: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c5 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c6 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 100%;
  background: transparent;
}

.c6::-webkit-slider-runnable-track {
  height: 8px;
  background: #D6DEE9;
  border: none;
  border-radius: 4px;
  width: 100%;
  background: linear-gradient(to right,#4E2E5E 0%,#4E2E5E 50%,#D6DEE9 50%,#D6DEE9 100%);
  -webkit-transition: all 0.25s ease-in-out;
  transition: all 0.25s ease-in-out;
}

.c6::-moz-range-track {
  height: 8px;
  background: #D6DEE9;
  border: none;
  border-radius: 4px;
  width: 100%;
}

.c6::-ms-track {
  height: 8px;
  background: transparent;
  color: transparent;
  border: solid 16px transparent;
}

.c6::-ms-fill-lower {
  background: #4E2E5E;
  border-radius: 4px;
}

.c6::-ms-fill-upper {
  background: #D6DEE9;
  border-radius: 4px;
}

.c6::-moz-range-progress {
  background: #4E2E5E;
  height: 8px;
  border-radius: 4px;
}

.c6::-webkit-slider-thumb {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  height: 16px;
  width: 16px;
  border-radius: 16px;
  background: #4E2E5E;
  box-shadow: 0 0 0 2px rgba(18,52,102,0.2);
  margin-top: -4px;
  cursor: pointer;
}

.c6::-moz-range-thumb {
  border: none;
  height: 16px;
  width: 16px;
  border-radius: 16px;
  background: #4E2E5E;
  box-shadow: 0 0 0 2px rgba(18,52,102,0.2);
  margin-top: -4px;
  cursor: pointer;
}

.c6::-ms-thumb {
  border: none;
  height: 16px;
  width: 16px;
  border-radius: 16px;
  background: #4E2E5E;
  box-shadow: 0 0 0 2px rgba(18,52,102,0.2);
  margin-top: -4px;
  cursor: pointer;
}

.c6:focus {
  outline: none;
}

.c6::-moz-focus-outer {
  border: 0;
}

.c6::-ms-tooltip {
  display: none;
}

.c6::-ms-tooltip {
  display: none;
}

.c6:hover:not(:disabled)::-webkit-slider-thumb {
  height: 24px;
  width: 24px;
  box-shadow: 0 0 0 4px rgba(18,52,102,0.2);
  margin-top: -8px;
}

.c6:hover:not(:disabled)::-webkit-slider-thumb:active {
  box-shadow: 0 0 0 4px rgba(18,52,102,0.3);
  margin-top: -8px;
}

.c6:hover:not(:disabled)::-moz-range-thumb {
  height: 24px;
  width: 24px;
  box-shadow: 0 0 0 4px rgba(18,52,102,0.2);
  margin-top: -8px;
}

.c6:hover:not(:disabled)::-moz-range-thumb:active {
  box-shadow: 0 0 0 4px rgba(18,52,102,0.3);
  margin-top: -8px;
}

.c6:hover:not(:disabled)::-ms-thumb {
  height: 24px;
  width: 24px;
  box-shadow: 0 0 0 4px rgba(18,52,102,0.2);
  margin-top: -8px;
}

.c6:hover:not(:disabled)::-ms-thumb:active {
  box-shadow: 0 0 0 4px rgba(18,52,102,0.3);
  margin-top: -8px;
}

.c6:disabled {
  cursor: not-allowed;
}

.c7 {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  width: 100%;
  background: transparent;
}

.c7::-webkit-slider-runnable-track {
  height: 8px;
  background: #D6DEE9;
  border: none;
  border-radius: 4px;
  width: 100%;
  background: linear-gradient(to right,#4E2E5E 0%,#4E2E5E 25%,#D6DEE9 25%,#D6DEE9 100%);
  -webkit-transition: all 0.25s ease-in-out;
  transition: all 0.25s ease-in-out;
}

.c7::-moz-range-track {
  height: 8px;
  background: #D6DEE9;
  border: none;
  border-radius: 4px;
  width: 100%;
}

.c7::-ms-track {
  height: 8px;
  background: transparent;
  color: transparent;
  border: solid 16px transparent;
}

.c7::-ms-fill-lower {
  background: #4E2E5E;
  border-radius: 4px;
}

.c7::-ms-fill-upper {
  background: #D6DEE9;
  border-radius: 4px;
}

.c7::-moz-range-progress {
  background: #4E2E5E;
  height: 8px;
  border-radius: 4px;
}

.c7::-webkit-slider-thumb {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
  border: none;
  height: 16px;
  width: 16px;
  border-radius: 16px;
  background: #4E2E5E;
  box-shadow: 0 0 0 2px rgba(18,52,102,0.2);
  margin-top: -4px;
  cursor: pointer;
}

.c7::-moz-range-thumb {
  border: none;
  height: 16px;
  width: 16px;
  border-radius: 16px;
  background: #4E2E5E;
  box-shadow: 0 0 0 2px rgba(18,52,102,0.2);
  margin-top: -4px;
  cursor: pointer;
}

.c7::-ms-thumb {
  border: none;
  height: 16px;
  width: 16px;
  border-radius: 16px;
  background: #4E2E5E;
  box-shadow: 0 0 0 2px rgba(18,52,102,0.2);
  margin-top: -4px;
  cursor: pointer;
}

.c7:focus {
  outline: none;
}

.c7::-moz-focus-outer {
  border: 0;
}

.c7::-ms-tooltip {
  display: none;
}

.c7::-ms-tooltip {
  display: none;
}

.c7:hover:not(:disabled)::-webkit-slider-thumb {
  height: 24px;
  width: 24px;
  box-shadow: 0 0 0 4px rgba(18,52,102,0.2);
  margin-top: -8px;
}

.c7:hover:not(:disabled)::-webkit-slider-thumb:active {
  box-shadow: 0 0 0 4px rgba(18,52,102,0.3);
  margin-top: -8px;
}

.c7:hover:not(:disabled)::-moz-range-thumb {
  height: 24px;
  width: 24px;
  box-shadow: 0 0 0 4px rgba(18,52,102,0.2);
  margin-top: -8px;
}

.c7:hover:not(:disabled)::-moz-range-thumb:active {
  box-shadow: 0 0 0 4px rgba(18,52,102,0.3);
  margin-top: -8px;
}

.c7:hover:not(:disabled)::-ms-thumb {
  height: 24px;
  width: 24px;
  box-shadow: 0 0 0 4px rgba(18,52,102,0.2);
  margin-top: -8px;
}

.c7:hover:not(:disabled)::-ms-thumb:active {
  box-shadow: 0 0 0 4px rgba(18,52,102,0.3);
  margin-top: -8px;
}

.c7:disabled {
  cursor: not-allowed;
}

.c9 {
  color: #4E2E5E;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  display: inline-block;
}

.c4 {
  color: #1C2534;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  display: inline-block;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <p
      className="c2"
    >
      Default
    </p>
    <div
      className=""
    >
      <div
        className="c3 "
      >
        <label
          className="c4 c5 "
        />
      </div>
      <input
        className="c6"
        max={100}
        min={0}
        onChange={[Function]}
        type="range"
        value={50}
      />
    </div>
    <p
      className="c2"
    >
      Set default value
    </p>
    <div
      className=""
    >
      <div
        className="c3 "
      >
        <label
          className="c4 c5 "
        />
      </div>
      <input
        className="c7"
        max={100}
        min={0}
        onChange={[Function]}
        type="range"
        value="25"
      />
    </div>
    <p
      className="c8"
    >
      With Label and Value Percentage
    </p>
    <div
      className=""
    >
      <div
        className="c3 "
      >
        <label
          className="c4 c5 "
        >
          Range Label
        </label>
        <p
          className="c9 c10"
        >
           
          50%
           
        </p>
      </div>
      <input
        className="c6"
        max={100}
        min={0}
        onChange={[Function]}
        type="range"
        value={50}
      />
    </div>
    <p
      className="c2"
    >
      Disabled
    </p>
    <div
      className=""
    >
      <div
        className="c3 "
      >
        <label
          className="c4 c5 "
        />
      </div>
      <input
        className="c6"
        disabled={true}
        max={100}
        min={0}
        onChange={[Function]}
        type="range"
        value={50}
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots ReadMore Basic 1`] = `
.c1 {
  margin-left: 24px;
  margin-top: 24px;
  width: 50%;
}

.c0 {
  padding: 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  margin: 0px;
}

.c10 {
  margin: 0px;
  margin-top: 16px;
}

.c6 {
  color: #8D9BA7;
  margin: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c13 {
  color: #2FCDD0;
  margin: 0px;
  font-family: Circular,sans-serif;
  font-size: 16px;
  line-height: 1.5;
  font-weight: 400;
}

.c9 {
  font-size: 12px;
}

.c14 {
  font-size: 16px;
}

.c8 {
  text-decoration: none;
  color: #009BC0;
  cursor: pointer;
}

.c8:link,
.c8:visited {
  color: #009BC0;
}

.c8:hover {
  color: #0081AA;
}

.c8:active {
  color: #144E6F;
}

.c11 {
  display: inline-block;
  margin: 0;
  max-height: 100.1px;
  overflow: hidden;
  width: 100%;
  word-break: break-all;
  -ms-text-overflow: ellipsis;
}

.c12 {
  display: inline-block;
  margin: 0;
  max-height: 72px;
  overflow: hidden;
  width: 100%;
  word-break: break-all;
  -ms-text-overflow: ellipsis;
}

.c5 {
  display: inline-block;
  margin: 0;
  max-height: 20.02px;
  overflow: hidden;
  width: 100%;
  word-break: break-all;
  white-space: nowrap;
  text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
}

.c7 {
  float: right;
  white-space: nowrap;
  position: absolute;
  right: 0;
}

.c4 {
  display: inline-block;
}

.c3 {
  position: relative;
  width: 100%;
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <h5
      className="c2"
    >
      Default
    </h5>
    <div>
      <div
        className="c3"
      >
        <span
          className="c4"
          width={-4}
        >
          <p
            className="c5 c6"
            lines={1}
            wrap={1}
          >
            <span>
              Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?
            </span>
          </p>
        </span>
        <span
          className="c7"
        >
          <span>
            <a
              className="c8 c9"
              onClick={[Function]}
              rel="noreferrer noopener "
            >
              Show More
            </a>
             
          </span>
        </span>
      </div>
    </div>
    <h5
      className="c10"
    >
      Specified lines to truncate collapsed text
    </h5>
    <div>
      <div
        className="c3"
      >
        <span
          className="c4"
          width={-4}
        >
          <p
            className="c11 c6"
            lines={5}
            wrap={0}
          >
            <span>
              Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?
            </span>
          </p>
        </span>
        <span
          className="c7"
        >
          <span>
            <a
              className="c8 c9"
              onClick={[Function]}
              rel="noreferrer noopener "
            >
              Show More
            </a>
             
          </span>
        </span>
      </div>
    </div>
    <h5
      className="c10"
    >
      Hide expandControl on resize if the whole text fits
    </h5>
    <div>
      <div
        className="c3"
      >
        <span
          className="c4"
          width={-4}
        >
          <p
            className="c5 c6"
            lines={1}
            wrap={1}
          >
            <span>
              expandControl will hide if you resize me to fit&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; if im showing all the way, the control should be hidden
            </span>
          </p>
        </span>
        <span
          className="c7"
        >
          <span>
            <a
              className="c8 c9"
              onClick={[Function]}
              rel="noreferrer noopener "
            >
              Show More
            </a>
             
          </span>
        </span>
      </div>
    </div>
    <h5
      className="c10"
    >
      Different Text, fontStyle, and color for expandedText
    </h5>
    <div>
      <div
        className="c3"
      >
        <span
          className="c4"
          width={-4}
        >
          <p
            className="c5 c6"
            lines={1}
            wrap={1}
          >
            <span>
              Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?
            </span>
          </p>
        </span>
        <span
          className="c7"
        >
          <span>
            <a
              className="c8 c9"
              onClick={[Function]}
              rel="noreferrer noopener "
            >
              Show More
            </a>
             
          </span>
        </span>
      </div>
    </div>
    <div
      className=""
    >
      <h5
        className="c10"
      >
        More Customizable: different fontStyles, colors, expandControl, collapseControl, number of lines, and expandedText which includes line breaks and spaces
      </h5>
      <div>
        <div
          className="c3"
        >
          <span
            className="c4"
            width={-4}
          >
            <p
              className="c12 c13"
              lines={3}
              wrap={0}
            >
              <span>
                Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?
              </span>
            </p>
          </span>
          <span
            className="c7"
          >
            <span>
              <a
                className="c8 c14"
                onClick={[Function]}
                rel="noreferrer noopener "
              >
                ...More!
              </a>
               
            </span>
          </span>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search async 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c4 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c4::before {
  content: '\\f1c3';
}

.c2 {
  background-color: transparent;
  color: #8D9BA7;
}

.c3 {
  visibility: visible;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c1:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c1:focus:not(:disabled),
.c1:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c1:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <button
    className="c1 c2 "
    disabled={false}
    mode="transparent"
    onClick={[Function]}
    type="button"
  >
    <div
      className="c3 "
    >
      <i
        className="c4 "
      />
      Search
    </div>
  </button>
</div>
`;

exports[`Storyshots Search basic 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c4 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c4::before {
  content: '\\f1c3';
}

.c2 {
  background-color: transparent;
  color: #8D9BA7;
}

.c3 {
  visibility: visible;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c1:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c1:focus:not(:disabled),
.c1:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c1:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <button
    className="c1 c2 "
    disabled={false}
    mode="transparent"
    onClick={[Function]}
    type="button"
  >
    <div
      className="c3 "
    >
      <i
        className="c4 "
      />
      Search
    </div>
  </button>
</div>
`;

exports[`Storyshots Search button text and input placeholder 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c4 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c4::before {
  content: '\\f1c3';
}

.c2 {
  background-color: transparent;
  color: #8D9BA7;
}

.c3 {
  visibility: visible;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c1:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c1:focus:not(:disabled),
.c1:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c1:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <button
    className="c1 c2 "
    disabled={false}
    mode="transparent"
    onClick={[Function]}
    type="button"
  >
    <div
      className="c3 "
    >
      <i
        className="c4 "
      />
      buttonText
    </div>
  </button>
</div>
`;

exports[`Storyshots Search fires events 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c4 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c4::before {
  content: '\\f1c3';
}

.c2 {
  background-color: transparent;
  color: #8D9BA7;
}

.c3 {
  visibility: visible;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c1:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c1:focus:not(:disabled),
.c1:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c1:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <button
    className="c1 c2 "
    disabled={false}
    mode="transparent"
    onClick={[Function]}
    type="button"
  >
    <div
      className="c3 "
    >
      <i
        className="c4 "
      />
      Search
    </div>
  </button>
</div>
`;

exports[`Storyshots Search initial query 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c5 {
  padding-right: 8px;
}

.c6 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c6::before {
  content: '\\f136';
}

.c4 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c4::before {
  content: '\\f1c3';
}

.c1 {
  position: relative;
}

.c3 {
  cursor: pointer;
  width: 25px;
  color: #8D9BA7;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -webkit-justify-content: center;
  -ms-flex-pack: center;
  justify-content: center;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  height: 40px;
  box-shadow: none;
  width: 100%;
  border: 1px solid #D6DEE9 !important;
  padding-left: 8px;
  padding-right: 0;
  border-bottom-right-radius: 2px;
  border-bottom-left-radius: 2px;
}

.c2::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2::-moz-placeholder {
  color: #8D9BA7;
}

.c2:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2::placeholder {
  color: #8D9BA7;
}

.c2:hover,
.c2:active {
  border-color: #B4BDC5;
}

.c2:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c2:required {
  box-shadow: none;
}

.c2.error {
  border-color: #C00316;
}

.c2 > input {
  -webkit-box-flex: 1;
  -ms-flex-positive: 1;
  flex-grow: 1;
  background: none;
  border: 0 none;
  outline: none;
  font-family: inherit;
  font-size: inherit;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
    onBlur={[Function]}
  >
    <div
      className="c2 "
      onClick={[Function]}
    >
      <div
        className="c3 "
      >
        <i
          className="c4 "
        />
      </div>
      <input
        onChange={[Function]}
        onFocus={[Function]}
        onKeyDown={[Function]}
        placeholder="Search"
        role="combobox"
        value="UIE"
      />
      <div
        className="c3 c5 "
      >
        <i
          className="c6 "
          onClick={[Function]}
        />
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search sizes 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  width: 33.33333333333333%;
}

.c3 {
  margin-bottom: 4px;
  width: 66.66666666666666%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c7 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c7::before {
  content: '\\f1c3';
}

.c5 {
  background-color: transparent;
  color: #8D9BA7;
}

.c6 {
  visibility: visible;
}

.c4 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.26;
  text-align: center;
  height: 48px;
  min-width: 48px;
  font-size: 19px;
  padding: 12px 12px;
}

.c4:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c4:focus:not(:disabled),
.c4:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c4:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c4:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c8 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c8:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c8:focus:not(:disabled),
.c8:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c8:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c8:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c9 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.14;
  text-align: center;
  height: 32px;
  min-width: 32px;
  font-size: 14px;
  padding: 8px 8px;
}

.c9:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c9:focus:not(:disabled),
.c9:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c9:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c9:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      Large
    </div>
    <div
      className="c3 "
    >
      <button
        className="c4 c5 "
        disabled={false}
        mode="transparent"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c6 "
        >
          <i
            className="c7 "
          />
          Search
        </div>
      </button>
    </div>
    <div
      className="c2 "
    >
      Medium
    </div>
    <div
      className="c3 "
    >
      <button
        className="c8 c5 "
        disabled={false}
        mode="transparent"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c6 "
        >
          <i
            className="c7 "
          />
          Search
        </div>
      </button>
    </div>
    <div
      className="c2 "
    >
      Small
    </div>
    <div
      className="c3 "
    >
      <button
        className="c9 c5 "
        disabled={false}
        mode="transparent"
        onClick={[Function]}
        type="button"
      >
        <div
          className="c6 "
        >
          <i
            className="c7 "
          />
          Search
        </div>
      </button>
    </div>
  </div>
</div>
`;

exports[`Storyshots Search sync 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c4 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c4::before {
  content: '\\f1c3';
}

.c2 {
  background-color: transparent;
  color: #8D9BA7;
}

.c3 {
  visibility: visible;
}

.c1 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c1:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c1:focus:not(:disabled),
.c1:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c1:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c1:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <button
    className="c1 c2 "
    disabled={false}
    mode="transparent"
    onClick={[Function]}
    type="button"
  >
    <div
      className="c3 "
    >
      <i
        className="c4 "
      />
      Search
    </div>
  </button>
</div>
`;

exports[`Storyshots Select autoFocus 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c1 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:hover,
.c1 .Select-control:active {
  border-color: #B4BDC5;
}

.c1 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1 .Select-control:required {
  box-shadow: none;
}

.c1 .Select-control.error {
  border-color: #C00316;
}

.c1 .Select-control:hover {
  box-shadow: none;
}

.c1 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c1.Select--multi .Select-input,
.c1 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c1.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c1.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c1.error > .Select-control {
  border-color: #C00316 !important;
}

.c1 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c1 .Select-placeholder,
.c1 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c1 .Select-placeholder,
.c1.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c1 .Select-value-label {
  font-weight: normal;
}

.c1:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c1 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c1 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c1 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c1.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c1.Select--multi .Select-value-icon:hover,
.c1.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <div
      className="Select c1 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-16--value"
        >
          <div
            className="Select-placeholder"
          >
            Select...
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-16--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select default 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c1 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:hover,
.c1 .Select-control:active {
  border-color: #B4BDC5;
}

.c1 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1 .Select-control:required {
  box-shadow: none;
}

.c1 .Select-control.error {
  border-color: #C00316;
}

.c1 .Select-control:hover {
  box-shadow: none;
}

.c1 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c1.Select--multi .Select-input,
.c1 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c1.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c1.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c1.error > .Select-control {
  border-color: #C00316 !important;
}

.c1 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c1 .Select-placeholder,
.c1 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c1 .Select-placeholder,
.c1.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c1 .Select-value-label {
  font-weight: normal;
}

.c1:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c1 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c1 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c1 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c1.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c1.Select--multi .Select-value-icon:hover,
.c1.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <div
      className="Select c1 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-8--value"
        >
          <div
            className="Select-placeholder"
          >
            Select...
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-8--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select default value 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c1 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:hover,
.c1 .Select-control:active {
  border-color: #B4BDC5;
}

.c1 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1 .Select-control:required {
  box-shadow: none;
}

.c1 .Select-control.error {
  border-color: #C00316;
}

.c1 .Select-control:hover {
  box-shadow: none;
}

.c1 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c1.Select--multi .Select-input,
.c1 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c1.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c1.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c1.error > .Select-control {
  border-color: #C00316 !important;
}

.c1 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c1 .Select-placeholder,
.c1 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c1 .Select-placeholder,
.c1.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c1 .Select-value-label {
  font-weight: normal;
}

.c1:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c1 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c1 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c1 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c1.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c1.Select--multi .Select-value-icon:hover,
.c1.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <div
      className="Select c1 Select--single is-clearable is-searchable has-value"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-14--value"
        >
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-14--value-item"
              role="option"
            >
              No
            </span>
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-14--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          aria-label="Clear value"
          className="Select-clear-zone"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          title="Clear value"
        >
          <span
            className="Select-clear"
            dangerouslySetInnerHTML={
              Object {
                "__html": "&times;",
              }
            }
          />
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select disabled 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c1 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:hover,
.c1 .Select-control:active {
  border-color: #B4BDC5;
}

.c1 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1 .Select-control:required {
  box-shadow: none;
}

.c1 .Select-control.error {
  border-color: #C00316;
}

.c1 .Select-control:hover {
  box-shadow: none;
}

.c1 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c1.Select--multi .Select-input,
.c1 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c1.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c1.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c1.error > .Select-control {
  border-color: #C00316 !important;
}

.c1 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c1 .Select-placeholder,
.c1 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c1 .Select-placeholder,
.c1.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c1 .Select-value-label {
  font-weight: normal;
}

.c1:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c1 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c1 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c1 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c1.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c1.Select--multi .Select-value-icon:hover,
.c1.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <div
      className="Select c1 Select--single is-clearable is-disabled is-searchable has-value"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-15--value"
        >
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-15--value-item"
              role="option"
            >
              Yes
            </span>
          </div>
          <div
            aria-activedescendant="react-select-15--value"
            aria-expanded={false}
            aria-owns=""
            aria-readonly="true"
            className="Select-input"
            onBlur={[Function]}
            onFocus={[Function]}
            role="combobox"
            style={
              Object {
                "border": 0,
                "display": "inline-block",
                "width": 1,
              }
            }
            tabIndex={0}
          />
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select error 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c1 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:hover,
.c1 .Select-control:active {
  border-color: #B4BDC5;
}

.c1 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1 .Select-control:required {
  box-shadow: none;
}

.c1 .Select-control.error {
  border-color: #C00316;
}

.c1 .Select-control:hover {
  box-shadow: none;
}

.c1 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c1.Select--multi .Select-input,
.c1 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c1.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c1.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c1.error > .Select-control {
  border-color: #C00316 !important;
}

.c1 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c1 .Select-placeholder,
.c1 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c1 .Select-placeholder,
.c1.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c1 .Select-value-label {
  font-weight: normal;
}

.c1:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c1 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c1 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c1 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c1.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c1.Select--multi .Select-value-icon:hover,
.c1.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <div
      className="Select error c1 Select--single is-clearable is-searchable has-value"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-18--value"
        >
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-18--value-item"
              role="option"
            >
              No
            </span>
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-18--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          aria-label="Clear value"
          className="Select-clear-zone"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          title="Clear value"
        >
          <span
            className="Select-clear"
            dangerouslySetInnerHTML={
              Object {
                "__html": "&times;",
              }
            }
          />
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select fires events 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c1 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:hover,
.c1 .Select-control:active {
  border-color: #B4BDC5;
}

.c1 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1 .Select-control:required {
  box-shadow: none;
}

.c1 .Select-control.error {
  border-color: #C00316;
}

.c1 .Select-control:hover {
  box-shadow: none;
}

.c1 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c1.Select--multi .Select-input,
.c1 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c1.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c1.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c1.error > .Select-control {
  border-color: #C00316 !important;
}

.c1 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c1 .Select-placeholder,
.c1 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c1 .Select-placeholder,
.c1.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c1 .Select-value-label {
  font-weight: normal;
}

.c1:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c1 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c1 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c1 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c1.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c1.Select--multi .Select-value-icon:hover,
.c1.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <div
      className="Select c1 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-19--value"
        >
          <div
            className="Select-placeholder"
          >
            Try interacting
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-19--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select multi 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c1 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:hover,
.c1 .Select-control:active {
  border-color: #B4BDC5;
}

.c1 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1 .Select-control:required {
  box-shadow: none;
}

.c1 .Select-control.error {
  border-color: #C00316;
}

.c1 .Select-control:hover {
  box-shadow: none;
}

.c1 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c1.Select--multi .Select-input,
.c1 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c1.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c1.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c1.error > .Select-control {
  border-color: #C00316 !important;
}

.c1 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c1 .Select-placeholder,
.c1 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c1 .Select-placeholder,
.c1.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c1 .Select-value-label {
  font-weight: normal;
}

.c1:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c1 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c1 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c1 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c1.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c1.Select--multi .Select-value-icon:hover,
.c1.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <div
      className="Select c1 Select--multi is-clearable is-searchable has-value"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-17--value"
        >
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-hidden="true"
              className="Select-value-icon"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              ×
            </span>
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-17--value-0"
              role="option"
            >
              Yes
              <span
                className="Select-aria-only"
              >
                 
              </span>
            </span>
          </div>
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-hidden="true"
              className="Select-value-icon"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              ×
            </span>
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-17--value-1"
              role="option"
            >
              Maybe
              <span
                className="Select-aria-only"
              >
                 
              </span>
            </span>
          </div>
          <div
            className="Select-value"
            style={undefined}
            title={undefined}
          >
            <span
              aria-hidden="true"
              className="Select-value-icon"
              onMouseDown={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
            >
              ×
            </span>
            <span
              aria-selected="true"
              className="Select-value-label"
              id="react-select-17--value-2"
              role="option"
            >
              this is a super long label going forever . . . still going . . . yes . . . still . . .
              <span
                className="Select-aria-only"
              >
                 
              </span>
            </span>
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-17--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          aria-label="Clear all"
          className="Select-clear-zone"
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
          title="Clear all"
        >
          <span
            className="Select-clear"
            dangerouslySetInnerHTML={
              Object {
                "__html": "&times;",
              }
            }
          />
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select placeholder 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c1 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1 .Select-control::placeholder {
  color: #8D9BA7;
}

.c1 .Select-control:hover,
.c1 .Select-control:active {
  border-color: #B4BDC5;
}

.c1 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1 .Select-control:required {
  box-shadow: none;
}

.c1 .Select-control.error {
  border-color: #C00316;
}

.c1 .Select-control:hover {
  box-shadow: none;
}

.c1 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c1.Select--multi .Select-input,
.c1 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c1.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c1.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c1.error > .Select-control {
  border-color: #C00316 !important;
}

.c1 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c1 .Select-placeholder,
.c1 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c1 .Select-placeholder,
.c1.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c1 .Select-value-label {
  font-weight: normal;
}

.c1:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c1 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c1 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c1 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c1.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c1.Select--multi .Select-value-icon:hover,
.c1.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className=""
  >
    <div
      className="Select c1 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-9--value"
        >
          <div
            className="Select-placeholder"
          >
            Placeholder
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-9--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select sizes 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  width: 33.33333333333333%;
}

.c3 {
  margin-bottom: 4px;
  width: 66.66666666666666%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c5 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c5 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c5 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c5 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c5 .Select-control::placeholder {
  color: #8D9BA7;
}

.c5 .Select-control:hover,
.c5 .Select-control:active {
  border-color: #B4BDC5;
}

.c5 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c5 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c5 .Select-control:required {
  box-shadow: none;
}

.c5 .Select-control.error {
  border-color: #C00316;
}

.c5 .Select-control:hover {
  box-shadow: none;
}

.c5 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c5.Select--multi .Select-input,
.c5 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c5.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c5.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c5.error > .Select-control {
  border-color: #C00316 !important;
}

.c5 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c5 .Select-placeholder,
.c5 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c5 .Select-placeholder,
.c5.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c5 .Select-value-label {
  font-weight: normal;
}

.c5:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c5 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c5 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c5 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c5.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c5.Select--multi .Select-value-icon:hover,
.c5.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

.c4 .Select-control {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 48px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c4 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c4 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c4 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c4 .Select-control::placeholder {
  color: #8D9BA7;
}

.c4 .Select-control:hover,
.c4 .Select-control:active {
  border-color: #B4BDC5;
}

.c4 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c4 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c4 .Select-control:required {
  box-shadow: none;
}

.c4 .Select-control.error {
  border-color: #C00316;
}

.c4 .Select-control:hover {
  box-shadow: none;
}

.c4 .Select-input {
  padding: 0;
  height: calc(48px - 2px);
}

.c4.Select--multi .Select-input,
.c4 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c4.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c4.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c4.error > .Select-control {
  border-color: #C00316 !important;
}

.c4 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 48px !important;
}

.c4 .Select-placeholder,
.c4 .Select-input > input {
  padding: 0;
  line-height: 48px;
}

.c4 .Select-placeholder,
.c4.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c4 .Select-value-label {
  font-weight: normal;
}

.c4:not(.Select--multi) .Select-value {
  line-height: 48px !important;
}

.c4 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c4 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c4 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 16px;
}

.c4.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 10px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c4.Select--multi .Select-value-icon:hover,
.c4.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

.c6 .Select-control {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  padding-right: 0;
  height: 32px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c6 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c6 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c6 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c6 .Select-control::placeholder {
  color: #8D9BA7;
}

.c6 .Select-control:hover,
.c6 .Select-control:active {
  border-color: #B4BDC5;
}

.c6 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c6 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c6 .Select-control:required {
  box-shadow: none;
}

.c6 .Select-control.error {
  border-color: #C00316;
}

.c6 .Select-control:hover {
  box-shadow: none;
}

.c6 .Select-input {
  padding: 0;
  height: calc(32px - 2px);
}

.c6.Select--multi .Select-input,
.c6 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c6.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c6.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c6.error > .Select-control {
  border-color: #C00316 !important;
}

.c6 .Select-placeholder {
  padding-left: 8px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 32px !important;
}

.c6 .Select-placeholder,
.c6 .Select-input > input {
  padding: 0;
  line-height: 32px;
}

.c6 .Select-placeholder,
.c6.Select--single > .Select-control .Select-value {
  padding-left: 8px;
}

.c6 .Select-value-label {
  font-weight: normal;
}

.c6:not(.Select--multi) .Select-value {
  line-height: 32px !important;
}

.c6 .Select-option {
  padding-left: 8px;
  border-radius: 0;
}

.c6 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c6 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 12px;
}

.c6.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 4px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c6.Select--multi .Select-value-icon:hover,
.c6.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      Large
    </div>
    <div
      className="c3 "
    >
      <div
        className=""
      >
        <div
          className="Select c4 Select--single is-clearable is-searchable"
          style={undefined}
        >
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={undefined}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-11--value"
            >
              <div
                className="Select-placeholder"
              >
                Placeholder
              </div>
              <div
                className="Select-input"
                style={
                  Object {
                    "display": "inline-block",
                  }
                }
              >
                <style
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "input#undefined::-ms-clear {display: none;}",
                    }
                  }
                />
                <input
                  aria-activedescendant="react-select-11--value"
                  aria-describedby={undefined}
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-label={undefined}
                  aria-labelledby={undefined}
                  aria-owns=""
                  className={undefined}
                  id={undefined}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  style={
                    Object {
                      "boxSizing": "content-box",
                      "width": "5px",
                    }
                  }
                  tabIndex={undefined}
                  value=""
                />
                <div
                  style={
                    Object {
                      "height": 0,
                      "left": 0,
                      "overflow": "scroll",
                      "position": "absolute",
                      "top": 0,
                      "visibility": "hidden",
                      "whiteSpace": "pre",
                    }
                  }
                >
                  
                </div>
              </div>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c2 "
    >
      Medium
    </div>
    <div
      className="c3 "
    >
      <div
        className=""
      >
        <div
          className="Select c5 Select--single is-clearable is-searchable"
          style={undefined}
        >
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={undefined}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-12--value"
            >
              <div
                className="Select-placeholder"
              >
                Placeholder
              </div>
              <div
                className="Select-input"
                style={
                  Object {
                    "display": "inline-block",
                  }
                }
              >
                <style
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "input#undefined::-ms-clear {display: none;}",
                    }
                  }
                />
                <input
                  aria-activedescendant="react-select-12--value"
                  aria-describedby={undefined}
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-label={undefined}
                  aria-labelledby={undefined}
                  aria-owns=""
                  className={undefined}
                  id={undefined}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  style={
                    Object {
                      "boxSizing": "content-box",
                      "width": "5px",
                    }
                  }
                  tabIndex={undefined}
                  value=""
                />
                <div
                  style={
                    Object {
                      "height": 0,
                      "left": 0,
                      "overflow": "scroll",
                      "position": "absolute",
                      "top": 0,
                      "visibility": "hidden",
                      "whiteSpace": "pre",
                    }
                  }
                >
                  
                </div>
              </div>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
    <div
      className="c2 "
    >
      Small
    </div>
    <div
      className="c3 "
    >
      <div
        className=""
      >
        <div
          className="Select c6 Select--single is-clearable is-searchable"
          style={undefined}
        >
          <div
            className="Select-control"
            onKeyDown={[Function]}
            onMouseDown={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={undefined}
          >
            <span
              className="Select-multi-value-wrapper"
              id="react-select-13--value"
            >
              <div
                className="Select-placeholder"
              >
                Placeholder
              </div>
              <div
                className="Select-input"
                style={
                  Object {
                    "display": "inline-block",
                  }
                }
              >
                <style
                  dangerouslySetInnerHTML={
                    Object {
                      "__html": "input#undefined::-ms-clear {display: none;}",
                    }
                  }
                />
                <input
                  aria-activedescendant="react-select-13--value"
                  aria-describedby={undefined}
                  aria-expanded="false"
                  aria-haspopup="false"
                  aria-label={undefined}
                  aria-labelledby={undefined}
                  aria-owns=""
                  className={undefined}
                  id={undefined}
                  onBlur={[Function]}
                  onChange={[Function]}
                  onFocus={[Function]}
                  required={false}
                  role="combobox"
                  style={
                    Object {
                      "boxSizing": "content-box",
                      "width": "5px",
                    }
                  }
                  tabIndex={undefined}
                  value=""
                />
                <div
                  style={
                    Object {
                      "height": 0,
                      "left": 0,
                      "overflow": "scroll",
                      "position": "absolute",
                      "top": 0,
                      "visibility": "hidden",
                      "whiteSpace": "pre",
                    }
                  }
                >
                  
                </div>
              </div>
            </span>
            <span
              className="Select-arrow-zone"
              onMouseDown={[Function]}
            >
              <span
                className="Select-arrow"
                onMouseDown={[Function]}
              />
            </span>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Select util props 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c1 {
  margin-top: 50px;
  margin-bottom: 50px;
}

.c2 .Select-control {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  padding-right: 0;
  height: 40px;
  border: 1px solid #D6DEE9 !important;
  box-shadow: none !important;
}

.c2 .Select-control::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c2 .Select-control::-moz-placeholder {
  color: #8D9BA7;
}

.c2 .Select-control:-ms-input-placeholder {
  color: #8D9BA7;
}

.c2 .Select-control::placeholder {
  color: #8D9BA7;
}

.c2 .Select-control:hover,
.c2 .Select-control:active {
  border-color: #B4BDC5;
}

.c2 .Select-control:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c2 .Select-control:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c2 .Select-control:required {
  box-shadow: none;
}

.c2 .Select-control.error {
  border-color: #C00316;
}

.c2 .Select-control:hover {
  box-shadow: none;
}

.c2 .Select-input {
  padding: 0;
  height: calc(40px - 2px);
}

.c2.Select--multi .Select-input,
.c2 .Select-placeholder + .Select-input {
  margin-left: 0 !important;
}

.c2.Select.is-disabled > .Select-control {
  border-color: #f3f3f3 !important;
  background-color: #f3f3f3 !important;
}

.c2.Select.is-disabled > .Select-control .Select-value .Select-value-label {
  color: #8D9BA7;
}

.c2.error > .Select-control {
  border-color: #C00316 !important;
}

.c2 .Select-placeholder {
  padding-left: 16px;
  color: #8D9BA7;
  font-weight: normal;
  line-height: 40px !important;
}

.c2 .Select-placeholder,
.c2 .Select-input > input {
  padding: 0;
  line-height: 40px;
}

.c2 .Select-placeholder,
.c2.Select--single > .Select-control .Select-value {
  padding-left: 16px;
}

.c2 .Select-value-label {
  font-weight: normal;
}

.c2:not(.Select--multi) .Select-value {
  line-height: 40px !important;
}

.c2 .Select-option {
  padding-left: 16px;
  border-radius: 0;
}

.c2 .Select-option.is-focused {
  background-color: #D3F3F3 !important;
}

.c2 .Select-menu-outer {
  z-index: 1000;
  border-radius: 0 0 2px 2px;
  border-color: #D6DEE9;
  box-shadow: none;
  font-size: 14px;
}

.c2.Select--multi .Select-value {
  padding-left: 0;
  margin-top: 7px;
  margin-left: 0;
  margin-right: 5px;
  color: #009BC0;
  background-color: #D3F3F3;
  border-color: #D3F3F3;
}

.c2.Select--multi .Select-value-icon:hover,
.c2.Select--multi .Select-value-icon:focus {
  color: #009BC0;
  background-color: #8BDDDF;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="Select c2 Select--single is-clearable is-searchable"
      style={undefined}
    >
      <div
        className="Select-control"
        onKeyDown={[Function]}
        onMouseDown={[Function]}
        onTouchEnd={[Function]}
        onTouchMove={[Function]}
        onTouchStart={[Function]}
        style={undefined}
      >
        <span
          className="Select-multi-value-wrapper"
          id="react-select-10--value"
        >
          <div
            className="Select-placeholder"
          >
            Placeholder
          </div>
          <div
            className="Select-input"
            style={
              Object {
                "display": "inline-block",
              }
            }
          >
            <style
              dangerouslySetInnerHTML={
                Object {
                  "__html": "input#undefined::-ms-clear {display: none;}",
                }
              }
            />
            <input
              aria-activedescendant="react-select-10--value"
              aria-describedby={undefined}
              aria-expanded="false"
              aria-haspopup="false"
              aria-label={undefined}
              aria-labelledby={undefined}
              aria-owns=""
              className={undefined}
              id={undefined}
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              required={false}
              role="combobox"
              style={
                Object {
                  "boxSizing": "content-box",
                  "width": "5px",
                }
              }
              tabIndex={undefined}
              value=""
            />
            <div
              style={
                Object {
                  "height": 0,
                  "left": 0,
                  "overflow": "scroll",
                  "position": "absolute",
                  "top": 0,
                  "visibility": "hidden",
                  "whiteSpace": "pre",
                }
              }
            >
              
            </div>
          </div>
        </span>
        <span
          className="Select-arrow-zone"
          onMouseDown={[Function]}
        >
          <span
            className="Select-arrow"
            onMouseDown={[Function]}
          />
        </span>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Textarea default 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea default value 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    defaultValue="Default"
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea disabled 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    defaultValue="Cannot be edited, focused or submitted"
    disabled={true}
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea error 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="error c1 c2 "
    defaultValue="Invalid input"
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea fires events 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    defaultValue="Try interacting"
    onBlur={[Function]}
    onChange={[Function]}
    onClick={[Function]}
    onFocus={[Function]}
    onKeyUp={[Function]}
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea maxLength 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    defaultValue="Max 12 chars"
    maxLength={12}
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea placeholder 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    placeholder="Placeholder"
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea readOnly 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    defaultValue="Cannot be edited, but can be focused and submitted"
    readOnly={true}
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea resize 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: none;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    defaultValue="Cannot be resized by dragging corner"
    rows={2}
  />
</div>
`;

exports[`Storyshots Textarea rows 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    defaultValue="1
2
3
4"
    rows={4}
  />
</div>
`;

exports[`Storyshots Textarea sizes 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  width: 33.33333333333333%;
}

.c3 {
  margin-bottom: 4px;
  width: 66.66666666666666%;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

.c5 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c5:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c5:disabled {
  opacity: 0.25;
}

.c6 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c6::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c6::-moz-placeholder {
  color: #8D9BA7;
}

.c6:-ms-input-placeholder {
  color: #8D9BA7;
}

.c6::placeholder {
  color: #8D9BA7;
}

.c6:hover,
.c6:active {
  border-color: #B4BDC5;
}

.c6:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c6:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c6:required {
  box-shadow: none;
}

.c6.error {
  border-color: #C00316;
}

.c4 {
  font-size: 16px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c4::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c4::-moz-placeholder {
  color: #8D9BA7;
}

.c4:-ms-input-placeholder {
  color: #8D9BA7;
}

.c4::placeholder {
  color: #8D9BA7;
}

.c4:hover,
.c4:active {
  border-color: #B4BDC5;
}

.c4:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c4:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c4:required {
  box-shadow: none;
}

.c4.error {
  border-color: #C00316;
}

.c7 {
  font-size: 12px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 8px;
  padding-right: 8px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c7::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c7::-moz-placeholder {
  color: #8D9BA7;
}

.c7:-ms-input-placeholder {
  color: #8D9BA7;
}

.c7::placeholder {
  color: #8D9BA7;
}

.c7:hover,
.c7:active {
  border-color: #B4BDC5;
}

.c7:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c7:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c7:required {
  box-shadow: none;
}

.c7.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      Large
    </div>
    <div
      className="c3 "
    >
      <textarea
        className="c4 c5 "
        placeholder="Placeholder"
        rows={2}
      />
    </div>
    <div
      className="c2 "
    >
      Medium
    </div>
    <div
      className="c3 "
    >
      <textarea
        className="c6 c5 "
        placeholder="Placeholder"
        rows={2}
      />
    </div>
    <div
      className="c2 "
    >
      Small
    </div>
    <div
      className="c3 "
    >
      <textarea
        className="c7 c5 "
        placeholder="Placeholder"
        rows={2}
      />
    </div>
  </div>
</div>
`;

exports[`Storyshots Textarea util props 1`] = `
.c0 {
  background-color: #FFF;
  padding: 20px;
  width: 100%;
}

.c2 {
  background-color: transparent;
  color: inherit;
  margin: 0px;
  margin-top: 50px;
  margin-bottom: 50px;
  padding: 4px;
  width: 100%;
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.c2:focus {
  outline: none;
  box-shadow: inset 0 0 0 1px blue;
}

.c2:disabled {
  opacity: 0.25;
}

.c1 {
  font-size: 14px;
  border: 1px solid #D6DEE9;
  border-radius: 2px;
  background-color: #FFF;
  color: #1C2534;
  padding-left: 16px;
  padding-right: 16px;
  width: 100%;
  resize: vertical;
  line-height: 1.54;
  padding-top: 8px;
  padding-bottom: 8px;
}

.c1::-webkit-input-placeholder {
  color: #8D9BA7;
}

.c1::-moz-placeholder {
  color: #8D9BA7;
}

.c1:-ms-input-placeholder {
  color: #8D9BA7;
}

.c1::placeholder {
  color: #8D9BA7;
}

.c1:hover,
.c1:active {
  border-color: #B4BDC5;
}

.c1:focus {
  border-color: #2FCDD0;
  box-shadow: 0 0 0 1px rgba(47,205,208,0.5);
  outline: none;
}

.c1:disabled {
  background-color: #f3f3f3;
  border-color: #f3f3f3;
}

.c1:required {
  box-shadow: none;
}

.c1.error {
  border-color: #C00316;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <textarea
    className="c1 c2 "
    placeholder="Placeholder"
    rows={2}
  />
</div>
`;

exports[`Storyshots Timeline Basic 1`] = `
.c2 {
  margin-left: 24px;
}

.c1 {
  margin: 40px;
}

.c9 {
  margin-top: 16px;
  margin-bottom: 4px;
}

.c0 {
  padding: 20px;
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c15 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c5 {
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
}

.c3 {
  margin: 0px;
  margin-top: 24px;
  margin-bottom: 8px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c19 {
  margin: 0px;
  margin-top: 24px;
  margin-bottom: 24px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c12 {
  margin: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c7 {
  font-size: 14px;
  margin-bottom: 4px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c16 {
  color: #8D9BA7;
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  display: inline-block;
}

.c6 {
  color: #1C2534;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  display: inline-block;
}

.c20 {
  color: #53616E;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.14;
  font-weight: 600;
  display: inline-block;
}

.c14 {
  border: none;
  height: 16px;
  width: 2px;
  border-radius: 16px;
  background: #123466;
  opacity: 0.5;
  margin-top: -6px;
  position: absolute;
}

.c11 {
  color: #8D9BA7;
  font-family: Circular,sans-serif;
  font-size: 12px;
  line-height: 1.33;
  font-weight: 400;
  display: inline-block;
  position: absolute;
  top: -16px;
  opacity: 0;
}

.c8 {
  height: 4px;
  background: #D6DEE9;
  border: none;
  border-radius: 4px;
  width: 100%;
  position: relative;
}

.c8 .c13 {
  left: 50%;
}

.c8 .c10 {
  left: 54%;
}

.c17 {
  height: 4px;
  background: #D6DEE9;
  border: none;
  border-radius: 4px;
  width: 100%;
  position: relative;
}

.c17 .c13 {
  left: 25%;
}

.c17 .c10 {
  left: 29%;
}

.c18 {
  height: 4px;
  background: #D6DEE9;
  border: none;
  border-radius: 4px;
  width: 100%;
  position: relative;
}

.c18 .c13 {
  left: 73%;
}

.c18 .c10 {
  right: 31%;
}

.c4:hover .c13 {
  height: 24px;
  -webkit-transform: translateY(-8px);
  -ms-transform: translateY(-8px);
  transform: translateY(-8px);
  -webkit-transition: all 0.25s ease-in-out;
  transition: all 0.25s ease-in-out;
}

.c4:hover .c10 {
  opacity: 1;
  -webkit-transition: all 0.25s ease-in-out;
  transition: all 0.25s ease-in-out;
}

@media screen and (min-width:32em) {
  .c0 {
    width: 50%;
  }
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <div
      className="c2 "
    >
      <p
        className="c3"
      >
        Default
      </p>
      <div
        className="c4 "
      >
        <div
          className="c5 "
        >
          <label
            className="c6 c7 "
          />
        </div>
        <div
          className="c8 c9 "
          value={50}
        >
          <p
            className="c10 c11 c12"
          >
            Jul 2
          </p>
          <div
            className="c13 c14 "
          />
        </div>
        <div
          className="c15 "
        >
          <p
            className="c16 c12"
          >
             
            Jan 1
             
          </p>
          <p
            className="c16 c12"
          >
             
            Dec 31
             
          </p>
        </div>
      </div>
      <p
        className="c3"
      >
        Less than 50%
      </p>
      <div
        className="c4 "
      >
        <div
          className="c5 "
        >
          <label
            className="c6 c7 "
          />
        </div>
        <div
          className="c17 c9 "
          value={25}
        >
          <p
            className="c10 c11 c12"
          >
            Apr 3
          </p>
          <div
            className="c13 c14 "
          />
        </div>
        <div
          className="c15 "
        >
          <p
            className="c16 c12"
          >
             
            Jan 1
             
          </p>
          <p
            className="c16 c12"
          >
             
            Dec 31
             
          </p>
        </div>
      </div>
      <p
        className="c3"
      >
        Less than 50%, long date format
      </p>
      <div
        className="c4 "
      >
        <div
          className="c5 "
        >
          <label
            className="c6 c7 "
          />
        </div>
        <div
          className="c17 c9 "
          value={25}
        >
          <p
            className="c10 c11 c12"
          >
            Apr 3, 2018
          </p>
          <div
            className="c13 c14 "
          />
        </div>
        <div
          className="c15 "
        >
          <p
            className="c16 c12"
          >
             
            Jan 1, 2018
             
          </p>
          <p
            className="c16 c12"
          >
             
            Dec 31, 2018
             
          </p>
        </div>
      </div>
      <p
        className="c3"
      >
        Greater than 50%
      </p>
      <div
        className="c4 "
      >
        <div
          className="c5 "
        >
          <label
            className="c6 c7 "
          />
        </div>
        <div
          className="c18 c9 "
          value={73}
        >
          <p
            className="c10 c11 c12"
          >
            Sep 23
          </p>
          <div
            className="c13 c14 "
          />
        </div>
        <div
          className="c15 "
        >
          <p
            className="c16 c12"
          >
             
            Jan 1
             
          </p>
          <p
            className="c16 c12"
          >
             
            Dec 31
             
          </p>
        </div>
      </div>
      <p
        className="c3"
      >
        Greater than 50%, long date format
      </p>
      <div
        className="c4 "
      >
        <div
          className="c5 "
        >
          <label
            className="c6 c7 "
          />
        </div>
        <div
          className="c18 c9 "
          value={73}
        >
          <p
            className="c10 c11 c12"
          >
            Sep 23, 2018
          </p>
          <div
            className="c13 c14 "
          />
        </div>
        <div
          className="c15 "
        >
          <p
            className="c16 c12"
          >
             
            Jan 1, 2018
             
          </p>
          <p
            className="c16 c12"
          >
             
            Dec 31, 2018
             
          </p>
        </div>
      </div>
      <p
        className="c19"
      >
        With Label and OtherData
      </p>
      <div
        className="c4 "
      >
        <div
          className="c5 "
        >
          <label
            className="c6 c7 "
          >
            Due in
          </label>
          <p
            className="c20 c12"
          >
             
            89 days
             
          </p>
        </div>
        <div
          className="c8 c9 "
          value={50}
        >
          <p
            className="c10 c11 c12"
          >
            Jul 2
          </p>
          <div
            className="c13 c14 "
          />
        </div>
        <div
          className="c15 "
        >
          <p
            className="c16 c12"
          >
             
            Jan 1
             
          </p>
          <p
            className="c16 c12"
          >
             
            Dec 31
             
          </p>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Tooltip default 1`] = `
.c2 {
  margin: 80px;
}

.c0 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c4::before {
  content: '\\f1f5';
}

.c1 {
  margin: 0px;
  margin-top: 10px;
  margin-bottom: 10px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c3 {
  display: inline-block;
  vertical-align: bottom;
}

.c3 .popper-container {
  background-color: #123466;
  color: #FFF;
  box-shadow: unset;
}

.c3 .popper {
  z-index: 1070;
}

.c3 .popper[data-placement^='right'] .popper-arrow {
  left: 3px;
  border-color: transparent #123466 transparent transparent;
}

.c3 .popper[data-placement^='top'] .popper-arrow {
  border-color: #123466 transparent transparent transparent;
  bottom: 3px;
}

.c3 .popper[data-placement^='left'] .popper-arrow {
  border-color: transparent transparent transparent #123466;
  right: 3px;
}

.c3 .popper[data-placement^='bottom'] .popper-arrow {
  top: 3px;
  border-color: transparent transparent #123466 transparent;
}

<div
  className="c0 "
>
  <p
    className="c1"
  >
     Hover the Icon to see the tooltip 
  </p>
  <div
    className="c2 "
  >
    <div
      className="c3 c0 "
    >
      <div>
        <div
          onClick={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        >
          <i
            className="c4 "
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="c2 "
  >
    <div
      className="c3 c0 "
    >
      <div>
        <div
          onClick={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        >
          <i
            className="c4 "
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="c2 "
  >
    <div
      className="c3 c0 "
    >
      <div>
        <div
          onClick={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        >
          <i
            className="c4 "
          />
        </div>
      </div>
    </div>
  </div>
  <div
    className="c2 "
  >
    <div
      className="c3 c0 "
    >
      <div>
        <div
          onClick={[Function]}
          onMouseOut={[Function]}
          onMouseOver={[Function]}
        >
          <i
            className="c4 "
          />
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots TopNavBar default 1`] = `
.c10 {
  font-size: 16px;
  margin-left: 16px;
  padding-left: 16px;
  border-left-color: #FF5745;
  border-left-width: 1px;
  border-left-style: solid;
}

.c12 {
  margin-right: 24px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c17 {
  margin-left: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c17::before {
  content: '\\f2f9';
}

.c8 {
  width: 12px;
  display: block;
  max-width: 100%;
  height: auto;
}

.c9 {
  margin: 0px;
  margin-left: 8px;
  font-family: Circular,sans-serif;
  font-size: 19px;
  line-height: 1.47;
  font-weight: 400;
}

.c7 {
  color: #FF5745;
}

.c14 {
  color: #123466;
  font-size: 14px;
  margin-right: 32px;
}

.c16 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 12px;
  text-align: center;
  padding-top: 8px;
}

.c15 {
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #303162;
  opacity: 1;
  object-fit: cover;
}

.c3 {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 16px;
  padding-right: 16px;
}

.c6 {
  text-decoration: none;
  color: #FF5745;
  cursor: pointer;
}

.c6:link,
.c6:visited {
  color: #FF5745;
}

.c6:hover {
  color: #FF5745;
}

.c6:active {
  color: #FF5745;
}

.c13 {
  text-decoration: none;
  color: #123466;
  cursor: pointer;
}

.c13:link,
.c13:visited {
  color: #123466;
}

.c13:hover {
  color: #123466;
}

.c13:active {
  color: #123466;
}

.c1 {
  position: fixed;
  height: 64px;
  left: 0;
  right: 0;
  top: 0;
  z-index: 1031;
  background-color: #FFF;
  color: #123466;
}

.c0 {
  height: 64px;
}

<div
  className="c0 "
>
  <div
    className="c1 c2 "
  >
    <div
      className="c3 c4 "
    >
      <div
        className="c5 "
      >
        <a
          className="c6 c7"
          href="/dashboard"
          rel="noreferrer noopener "
        >
          <div
            className="c5 "
          >
            <img
              className="c8 "
              src="https://www.zenefits.com/static/images/logos/icon-footer-zenefits.svg"
            />
            <p
              className="c9"
            >
              zenefits
            </p>
          </div>
        </a>
        <div
          className="c10 "
        >
          <div
            className="c11 "
          >
            <span
              className=""
            >
              Product Title
            </span>
          </div>
        </div>
      </div>
      <div
        className="c5 "
      >
        <div
          className="c12 "
        />
        <a
          className="c13 c14"
          href="/dashboard/#/support"
          rel="noreferrer noopener "
        >
          Help
        </a>
        <div>
          <div>
            <div
              className="button-group-child-item c5 "
              onClick={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              target={
                <Flex
                  align="center"
                  borderColor="grayscale.f"
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  <Avatar
                    disabled={false}
                    firstName={undefined}
                    isSquare={false}
                    lastName={undefined}
                    photoUrl={undefined}
                    s="small"
                  />
                  <I
                    iconName="chevron-down"
                    ml={2}
                  />
                </Flex>
              }
            >
              <div
                className="c15 "
                disabled={false}
              >
                <span
                  className="c16 "
                  s="small"
                  title="undefined undefined"
                >
                    
                </span>
              </div>
              <i
                className="c17 "
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots TopNavBar with children 1`] = `
.c10 {
  font-size: 16px;
  margin-left: 16px;
  padding-left: 16px;
  border-left-color: #FF5745;
  border-left-width: 1px;
  border-left-style: solid;
}

.c12 {
  margin-left: 8px;
}

.c5 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c2 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c4 {
  width: 100%;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c11 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -webkit-justify-content: space-between;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
}

.c21 {
  margin-left: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c21::before {
  content: '\\f2f9';
}

.c16 {
  margin-right: 8px;
  font-family: Material-Design-Iconic-Font;
  display: inline-block;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-rendering: auto;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.c16::before {
  content: '\\f1c3';
}

.c8 {
  width: 12px;
  display: block;
  max-width: 100%;
  height: auto;
}

.c9 {
  margin: 0px;
  margin-left: 8px;
  font-family: Circular,sans-serif;
  font-size: 19px;
  line-height: 1.47;
  font-weight: 400;
}

.c7 {
  color: #FF5745;
}

.c18 {
  color: #123466;
  font-size: 14px;
  margin-right: 32px;
}

.c14 {
  background-color: transparent;
  color: #8D9BA7;
}

.c20 {
  display: block;
  line-height: 1.33;
  -webkit-letter-spacing: 1px;
  -moz-letter-spacing: 1px;
  -ms-letter-spacing: 1px;
  letter-spacing: 1px;
  font-size: 12px;
  text-align: center;
  padding-top: 8px;
}

.c19 {
  box-sizing: border-box;
  width: 32px;
  height: 32px;
  color: #FFF;
  border-radius: 50%;
  box-shadow: 0 0 0 2px #D6DEE9;
  background-color: #303162;
  opacity: 1;
  object-fit: cover;
}

.c3 {
  max-width: 1200px;
  margin-left: auto;
  margin-right: auto;
  padding-left: 16px;
  padding-right: 16px;
}

.c15 {
  visibility: visible;
}

.c13 {
  display: inline-block;
  box-sizing: border-box;
  position: relative;
  cursor: pointer;
  border: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  text-decoration: none;
  border-radius: 2px;
  outline: 0;
  line-height: 1.5;
  text-align: center;
  height: 40px;
  min-width: 40px;
  font-size: 16px;
  padding: 8px 8px;
}

.c13:disabled {
  cursor: not-allowed;
  opacity: 0.65;
}

.c13:focus:not(:disabled),
.c13:hover:not(:disabled) {
  color: #0081AA;
  background-color: transparent;
}

.c13:active:not(:disabled) {
  color: #144E6F;
  background-color: rgba(18,52,102,0.1);
}

.c13:focus:not(:disabled) {
  box-shadow: 0 0 0 2px rgba(18,52,102,0.1);
}

.c6 {
  text-decoration: none;
  color: #FF5745;
  cursor: pointer;
}

.c6:link,
.c6:visited {
  color: #FF5745;
}

.c6:hover {
  color: #FF5745;
}

.c6:active {
  color: #FF5745;
}

.c17 {
  text-decoration: none;
  color: #123466;
  cursor: pointer;
}

.c17:link,
.c17:visited {
  color: #123466;
}

.c17:hover {
  color: #123466;
}

.c17:active {
  color: #123466;
}

.c1 {
  position: fixed;
  height: 64px;
  left: 0;
  right: 0;
  top: 0;
  z-index: 1031;
  background-color: #FFF;
  color: #123466;
}

.c0 {
  height: 64px;
}

<div
  className="c0 "
>
  <div
    className="c1 c2 "
  >
    <div
      className="c3 c4 "
    >
      <div
        className="c5 "
      >
        <a
          className="c6 c7"
          href="/dashboard"
          rel="noreferrer noopener "
        >
          <div
            className="c5 "
          >
            <img
              className="c8 "
              src="https://www.zenefits.com/static/images/logos/icon-footer-zenefits.svg"
            />
            <p
              className="c9"
            >
              zenefits
            </p>
          </div>
        </a>
        <div
          className="c10 "
        >
          <div
            className="c11 "
          >
            <span
              className=""
            >
              Product Title
            </span>
            <div
              className="c12 "
            >
              <button
                className="c13 c14 "
                disabled={false}
                mode="transparent"
                onClick={[Function]}
                type="button"
              >
                <div
                  className="c15 "
                >
                  <i
                    className="c16 "
                  />
                  Search
                </div>
              </button>
            </div>
          </div>
        </div>
      </div>
      <div
        className="c5 "
      >
        <a
          className="c17 c18"
          href="/dashboard/#/support"
          rel="noreferrer noopener "
        >
          Help
        </a>
        <div>
          <div>
            <div
              className="button-group-child-item c5 "
              onClick={[Function]}
              style={
                Object {
                  "cursor": "pointer",
                }
              }
              target={
                <Flex
                  align="center"
                  borderColor="grayscale.f"
                  style={
                    Object {
                      "cursor": "pointer",
                    }
                  }
                >
                  <Avatar
                    disabled={false}
                    firstName={undefined}
                    isSquare={false}
                    lastName={undefined}
                    photoUrl={undefined}
                    s="small"
                  />
                  <I
                    iconName="chevron-down"
                    ml={2}
                  />
                </Flex>
              }
            >
              <div
                className="c19 "
                disabled={false}
              >
                <span
                  className="c20 "
                  s="small"
                  title="undefined undefined"
                >
                    
                </span>
              </div>
              <i
                className="c21 "
              />
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
`;

exports[`Storyshots Truncate Basic 1`] = `
.c1 {
  margin-left: 24px;
  margin-top: 24px;
  width: 50%;
}

.c0 {
  padding: 20px;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
}

.c2 {
  margin: 0px;
  margin-top: 8px;
  margin-bottom: 8px;
}

.c6 {
  margin: 0px;
  font-family: Circular,sans-serif;
  font-size: 14px;
  line-height: 1.43;
  font-weight: 400;
}

.c9 {
  font-size: 12px;
}

.c8 {
  text-decoration: none;
  color: #009BC0;
  cursor: pointer;
}

.c8:link,
.c8:visited {
  color: #009BC0;
}

.c8:hover {
  color: #0081AA;
}

.c8:active {
  color: #144E6F;
}

.c5 {
  display: inline-block;
  margin: 0;
  max-height: 20.02px;
  overflow: hidden;
  width: 100%;
  word-break: break-all;
  white-space: nowrap;
  text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
}

.c10 {
  display: inline-block;
  margin: 0;
  max-height: 60.06px;
  overflow: hidden;
  width: 100%;
  word-break: break-all;
  -ms-text-overflow: ellipsis;
}

.c7 {
  float: right;
  white-space: nowrap;
  position: absolute;
  right: 0;
}

.c4 {
  display: inline-block;
}

.c3 {
  position: relative;
  width: 100%;
}

<div
  className="c0 "
>
  <div
    className="c1 "
  >
    <h5
      className="c2"
    >
      Default
    </h5>
    <div
      className="c3"
    >
      <span
        className="c4"
        width={-4}
      >
        <p
          className="c5 c6"
          lines={1}
          wrap={1}
        >
          <span>
            Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?
          </span>
        </p>
      </span>
      <span
        className="c7"
      />
    </div>
    <h5
      className="c2"
    >
      Default w/custom ellipsis:
    </h5>
    <div
      className="c3"
    >
      <span
        className="c4"
        width={-4}
      >
        <p
          className="c5 c6"
          lines={1}
          wrap={1}
        >
          <span>
            Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?
          </span>
        </p>
      </span>
      <span
        className="c7"
      >
        <a
          className="c8 c9"
          href="https://www.google.com/"
          rel="noreferrer noopener "
          target="_blank"
        >
          Custom ellipsis
        </a>
      </span>
    </div>
    <h5
      className="c2"
    >
      Hide custom ellipsis on resize if the whole text fits
    </h5>
    <div
      className="c3"
    >
      <span
        className="c4"
        width={-4}
      >
        <p
          className="c5 c6"
          lines={1}
          wrap={1}
        >
          <span>
            the custom ellipsis Control will hide if you resize me to fit &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt; if im showing all the way, the control should be hidden
          </span>
        </p>
      </span>
      <span
        className="c7"
      >
        <a
          className="c8 c9"
          href="https://www.google.com/"
          rel="noreferrer noopener "
          target="_blank"
        >
          Custom ellipsis
        </a>
      </span>
    </div>
    <h5
      className="c2"
    >
      Specified the number of lines and custom ellipsis:
    </h5>
    <div
      className="c3"
    >
      <span
        className="c4"
        width={-4}
      >
        <p
          className="c10 c6"
          lines={3}
          wrap={0}
        >
          <span>
            Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium, totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta sunt explicabo. Nemo enim ipsam voluptatem quia voluptas sit aspernatur aut odit aut fugit, sed quia consequuntur magni dolores eos qui ratione voluptatem sequi nesciunt. Neque porro quisquam est, qui dolorem ipsum quia dolor sit amet, consectetur, adipisci velit, sed quia non numquam eius modi tempora incidunt ut labore et dolore magnam aliquam quaerat voluptatem. Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? Quis autem vel eum iure reprehenderit qui in ea voluptate velit esse quam nihil molestiae consequatur, vel illum qui dolorem eum fugiat quo voluptas nulla pariatur?
          </span>
        </p>
      </span>
      <span
        className="c7"
      >
        <a
          className="c8 c9"
          href="https://www.google.com/"
          rel="noreferrer noopener "
          target="_blank"
        >
          Custom ellipsis
        </a>
      </span>
    </div>
  </div>
</div>
`;
